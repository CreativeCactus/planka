{"version":3,"sources":["components/Header/Header.module.css","components/Card/ActionsPopup.module.css","components/CardModal/Actions/Item.module.css","components/SocketStatus/SocketStatus.module.css","components/LabelsStep/Editor.module.css","components/EditDeadlineStep/EditDeadlineStep.module.css","components/CardModal/Actions/ItemComment.module.css","components/Board/Board.module.css","components/Project/Project.module.css","components/AddUserPopup/AddUserPopup.module.css","components/ProjectMembershipsStep/Item.module.css","components/List/AddCard.module.css","components/Project/AddMembershipPopup/UserItem.module.css","components/Project/EditMembershipPopup.module.css","components/User/User.module.css","components/Header/NotificationsPopup.module.css","components/Card/EditName.module.css","components/LabelsStep/Item.module.css","components/List/ActionsPopup.module.css","components/Board/AddList.module.css","components/CardModal/CardModal.module.css","lib/custom-ui/components/Popup/PopupHeader.module.css","components/Header/UserPopup/UserPopup.module.css","components/Label/Label.module.css","components/Deadline/Deadline.module.css","components/Timer/Timer.module.css","components/CardModal/Tasks/EditName.module.css","components/CardModal/Tasks/ActionsPopup.module.css","components/CardModal/Tasks/Add.module.css","components/CardModal/Tasks/Tasks.module.css","lib/popup/Popup.module.css","components/CardModal/EditDescription.module.css","components/CardModal/Actions/AddComment.module.css","components/CardModal/Actions/EditComment.module.css","components/Boards/EditPopup.module.css","components/Project/EditPopup.module.css","components/UsersModal/UsersModal.module.css","components/Card/Card.module.css","components/Header/UserPopup/EditNameStep.module.css","components/ProjectMembershipsStep/ProjectMembershipsStep.module.css","components/LabelsStep/AddStep.module.css","components/DeleteStep/DeleteStep.module.css","components/LabelsStep/EditStep.module.css","components/LabelsStep/LabelsStep.module.css","components/List/EditName.module.css","components/CardModal/NameField.module.css","components/Boards/Boards.module.css","components/Boards/AddPopup.module.css","components/Project/AddMembershipPopup/AddMembershipPopup.module.css","components/UsersModal/Item.module.css","components/AddProjectModal/AddProjectModal.module.css","components/Login/Login.module.css","locales lazy /^/.//.*//app$/ groupOptions: {} namespace object","components/Projects/Projects.module.css","history.js","reducers/router.js","constants/ActionTypes.js","reducers/socket.js","models/User.js","models/Project.js","models/ProjectMembership.js","models/Board.js","models/List.js","models/Label.js","constants/Config.js","models/Card.js","models/Task.js","models/Action.js","models/Notification.js","orm.js","reducers/db.js","reducers/auth.js","utils/access-token-storage.js","reducers/login.js","reducers/app.js","reducers/user.js","reducers/project.js","reducers/index.js","selectors/common.js","constants/Paths.js","selectors/path.js","utils/match-paths.js","utils/local-id.js","selectors/current.js","selectors/all.js","selectors/by-id.js","selectors/next-position.js","constants/SocketStatuses.js","actions/login.js","actions/app.js","actions/modal.js","actions/user.js","actions/project.js","actions/project-membership.js","actions/board.js","actions/list.js","actions/label.js","actions/card.js","actions/task.js","actions/comment-action.js","actions/notifications.js","sagas/app/services/notifications.js","sagas/app/services/router.js","sagas/app/services/login.js","sagas/app/services/modal.js","constants/ModalTypes.js","locales/index.js","locales/en-US/embed.js","locales/ru-RU/embed.js","i18n.js","sagas/app/services/app.js","sagas/app/services/user.js","sagas/app/services/project.js","sagas/app/services/project-membership.js","sagas/app/services/board.js","sagas/app/services/list.js","sagas/app/services/label.js","sagas/app/services/card.js","sagas/app/services/task.js","sagas/app/services/actions.js","constants/Enums.js","sagas/app/services/comment-action.js","sagas/app/services/notification.js","sagas/app/watchers/router.js","constants/EntryActionTypes.js","sagas/app/watchers/login.js","sagas/app/watchers/modal.js","sagas/app/watchers/user.js","sagas/app/watchers/project.js","sagas/app/watchers/project-membership.js","sagas/app/watchers/board.js","sagas/app/watchers/list.js","sagas/app/watchers/label.js","sagas/app/watchers/card.js","sagas/app/watchers/task.js","sagas/app/watchers/actions.js","sagas/app/watchers/comment-action.js","sagas/app/watchers/notification.js","sagas/app/watchers/index.js","sagas/app/index.js","sagas/index.js","store.js","service-worker.js","actions/entry/login.js","actions/entry/modal.js","actions/entry/user.js","actions/entry/project.js","actions/entry/project-membership.js","actions/entry/board.js","actions/entry/list.js","actions/entry/label.js","actions/entry/card.js","actions/entry/task.js","actions/entry/actions.js","actions/entry/comment-action.js","actions/entry/notification.js","lib/custom-ui/components/Input/MaskedInput.jsx","lib/custom-ui/components/Input/Input.jsx","lib/custom-ui/components/Input/index.js","lib/custom-ui/components/Popup/PopupHeader.jsx","lib/custom-ui/components/Popup/Popup.jsx","lib/custom-ui/components/Popup/index.js","lib/custom-ui/components/Markdown/Markdown.jsx","lib/custom-ui/components/Markdown/index.js","lib/custom-ui/components/DragScroller/index.js","lib/custom-ui/components/DragScroller/DragScroller.jsx","hooks/use-deep-compare-memoize.js","hooks/use-deep-compare-effect.js","hooks/use-deep-compare-callback.js","hooks/use-previous.js","hooks/use-field.js","hooks/use-form.js","hooks/use-steps.js","hooks/use-toggle.js","hooks/use-closable-form.js","hooks/use-did-update.js","components/Login/Login.jsx","components/Login/index.js","containers/LoginContainer.js","lib/popup/with-popup.jsx","lib/popup/close-popup.js","components/User/User.jsx","components/User/index.js","components/Header/NotificationsPopup.jsx","components/Header/UserPopup/EditNameStep.jsx","components/Header/UserPopup/UserPopup.jsx","components/Header/UserPopup/index.js","components/Header/index.js","components/Header/Header.jsx","containers/HeaderContainer.js","constants/DroppableTypes.js","components/Card/Tasks.jsx","components/Card/EditName.jsx","components/ProjectMembershipsStep/Item.jsx","components/ProjectMembershipsStep/ProjectMembershipsStep.jsx","components/ProjectMembershipsStep/index.js","constants/LabelColors.js","components/LabelsStep/Editor.jsx","components/LabelsStep/AddStep.jsx","components/DeleteStep/DeleteStep.jsx","components/DeleteStep/index.js","components/LabelsStep/EditStep.jsx","components/LabelsStep/Item.jsx","components/LabelsStep/LabelsStep.jsx","components/LabelsStep/index.js","components/EditDeadlineStep/EditDeadlineStep.jsx","components/EditDeadlineStep/index.js","utils/timer.js","components/EditTimerStep/EditTimerStep.jsx","components/EditTimerStep/index.js","components/Card/ActionsPopup.jsx","components/Label/Label.jsx","components/Label/index.js","components/Deadline/Deadline.jsx","components/Deadline/index.js","components/Timer/Timer.jsx","hooks/use-force-update.js","components/Timer/index.js","components/Card/Card.jsx","components/Card/index.js","containers/CardContainer.js","components/List/EditName.jsx","components/List/AddCard.jsx","components/List/ActionsPopup.jsx","assets/images/plus-math-icon.svg","components/List/index.js","components/List/List.jsx","containers/ListContainer.js","components/CardModal/NameField.jsx","components/CardModal/EditDescription.jsx","components/CardModal/Tasks/EditName.jsx","components/CardModal/Tasks/ActionsPopup.jsx","components/CardModal/Tasks/Item.jsx","components/CardModal/Tasks/Add.jsx","components/CardModal/Tasks/index.js","components/CardModal/Tasks/Tasks.jsx","components/CardModal/Actions/AddComment.jsx","components/CardModal/Actions/EditComment.jsx","components/DeletePopup.jsx","components/CardModal/Actions/ItemComment.jsx","components/CardModal/Actions/Item.jsx","components/CardModal/Actions/index.js","components/CardModal/Actions/Actions.jsx","components/ProjectMembershipsPopup.jsx","components/LabelsPopup.jsx","components/EditDeadlinePopup.jsx","components/EditTimerPopup.jsx","components/CardModal/CardModal.jsx","components/CardModal/index.js","containers/CardModalContainer.js","components/Board/AddList.jsx","components/Board/Filter.jsx","components/Board/Board.jsx","components/Board/index.js","containers/BoardContainer.js","components/BoardWrapper.jsx","containers/BoardWrapperContainer.js","components/Boards/AddPopup.jsx","components/Boards/EditPopup.jsx","components/Boards/Boards.jsx","components/Boards/index.js","containers/BoardsContainer.js","components/Project/EditPopup.jsx","components/Project/AddMembershipPopup/UserItem.jsx","components/Project/AddMembershipPopup/index.js","components/Project/AddMembershipPopup/AddMembershipPopup.jsx","components/Project/EditMembershipPopup.jsx","components/Project/index.js","components/Project/Project.jsx","containers/ProjectContainer.js","components/ProjectWrapper.jsx","containers/ProjectWrapperContainer.js","assets/images/plus-icon.svg","components/Projects/Projects.jsx","components/Projects/index.js","containers/ProjectsContainer.js","components/AddUserPopup/AddUserPopup.jsx","components/AddUserPopup/index.js","containers/AddUserPopupContainer.js","components/UsersModal/Item.jsx","components/UsersModal/index.js","components/UsersModal/UsersModal.jsx","containers/UsersModalContainer.js","components/AddProjectModal/AddProjectModal.jsx","components/AddProjectModal/index.js","containers/AddProjectModalContainer.js","components/App.jsx","containers/AppContainer.js","components/SocketStatus/index.js","components/SocketStatus/SocketStatus.jsx","containers/SocketStatusContainer.js","components/AppWrapper.jsx","containers/AppWrapperContainer.js","components/NotFound.jsx","components/Root.jsx","index.js","components/Board/Filter.module.css","components/List/List.module.css","components/CardModal/Actions/Actions.module.css","components/Card/Tasks.module.css","components/EditTimerStep/EditTimerStep.module.css","components/CardModal/Tasks/Item.module.css"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","createHashHistory","connectRouter","history","SOCKET_STATUS_CHANGED","AUTHENTICATE","AUTHENTICATION_ERROR_CLEAR","LOGOUT","AUTHENTICATE_REQUESTED","AUTHENTICATE_SUCCEEDED","AUTHENTICATE_FAILED","APP_INITIALIZED","MODAL_OPEN","MODAL_CLOSE","USERS_FETCH_REQUESTED","USERS_FETCH_SUCCEEDED","USERS_FETCH_FAILED","USER_CREATE","USER_CREATION_ERROR_CLEAR","USER_UPDATE","USER_DELETE","USER_TO_CARD_ADD","USER_FROM_CARD_REMOVE","USER_TO_BOARD_FILTER_ADD","USER_FROM_BOARD_FILTER_REMOVE","USER_CREATE_REQUESTED","USER_CREATE_SUCCEEDED","USER_CREATE_FAILED","USER_CREATE_RECEIVED","CURRENT_USER_FETCH_REQUESTED","CURRENT_USER_FETCH_SUCCEEDED","CURRENT_USER_FETCH_FAILED","USER_UPDATE_REQUESTED","USER_UPDATE_SUCCEEDED","USER_UPDATE_FAILED","USER_UPDATE_RECEIVED","USER_AVATAR_UPLOAD_REQUESTED","USER_AVATAR_UPLOAD_SUCCEEDED","USER_AVATAR_UPLOAD_FAILED","USER_DELETE_REQUESTED","USER_DELETE_SUCCEEDED","USER_DELETE_FAILED","USER_DELETE_RECEIVED","PROJECTS_FETCH_REQUESTED","PROJECTS_FETCH_SUCCEEDED","PROJECTS_FETCH_FAILED","PROJECT_CREATE","PROJECT_UPDATE","PROJECT_DELETE","PROJECT_CREATE_REQUESTED","PROJECT_CREATE_SUCCEEDED","PROJECT_CREATE_FAILED","PROJECT_CREATE_RECEIVED","PROJECT_UPDATE_REQUESTED","PROJECT_UPDATE_SUCCEEDED","PROJECT_UPDATE_FAILED","PROJECT_UPDATE_RECEIVED","PROJECT_DELETE_REQUESTED","PROJECT_DELETE_SUCCEEDED","PROJECT_DELETE_FAILED","PROJECT_DELETE_RECEIVED","PROJECT_MEMBERSHIP_CREATE","PROJECT_MEMBERSHIP_DELETE","PROJECT_MEMBERSHIP_CREATE_REQUESTED","PROJECT_MEMBERSHIP_CREATE_SUCCEEDED","PROJECT_MEMBERSHIP_CREATE_FAILED","PROJECT_MEMBERSHIP_CREATE_RECEIVED","PROJECT_MEMBERSHIP_DELETE_REQUESTED","PROJECT_MEMBERSHIP_DELETE_SUCCEEDED","PROJECT_MEMBERSHIP_DELETE_FAILED","PROJECT_MEMBERSHIP_DELETE_RECEIVED","BOARD_CREATE","BOARD_UPDATE","BOARD_DELETE","BOARD_CREATE_REQUESTED","BOARD_CREATE_SUCCEEDED","BOARD_CREATE_FAILED","BOARD_CREATE_RECEIVED","BOARD_FETCH_REQUESTED","BOARD_FETCH_SUCCEEDED","BOARD_FETCH_FAILED","BOARD_UPDATE_REQUESTED","BOARD_UPDATE_SUCCEEDED","BOARD_UPDATE_FAILED","BOARD_UPDATE_RECEIVED","BOARD_DELETE_REQUESTED","BOARD_DELETE_SUCCEEDED","BOARD_DELETE_FAILED","BOARD_DELETE_RECEIVED","LIST_CREATE","LIST_UPDATE","LIST_DELETE","LIST_CREATE_REQUESTED","LIST_CREATE_SUCCEEDED","LIST_CREATE_FAILED","LIST_CREATE_RECEIVED","LIST_UPDATE_REQUESTED","LIST_UPDATE_SUCCEEDED","LIST_UPDATE_FAILED","LIST_UPDATE_RECEIVED","LIST_DELETE_REQUESTED","LIST_DELETE_SUCCEEDED","LIST_DELETE_FAILED","LIST_DELETE_RECEIVED","LABEL_CREATE","LABEL_UPDATE","LABEL_DELETE","LABEL_TO_CARD_ADD","LABEL_FROM_CARD_REMOVE","LABEL_TO_BOARD_FILTER_ADD","LABEL_FROM_BOARD_FILTER_REMOVE","LABEL_CREATE_REQUESTED","LABEL_CREATE_SUCCEEDED","LABEL_CREATE_FAILED","LABEL_CREATE_RECEIVED","LABEL_UPDATE_REQUESTED","LABEL_UPDATE_SUCCEEDED","LABEL_UPDATE_FAILED","LABEL_UPDATE_RECEIVED","LABEL_DELETE_REQUESTED","LABEL_DELETE_SUCCEEDED","LABEL_DELETE_FAILED","LABEL_DELETE_RECEIVED","CARD_CREATE","CARD_UPDATE","CARD_DELETE","CARD_CREATE_REQUESTED","CARD_CREATE_SUCCEEDED","CARD_CREATE_FAILED","CARD_CREATE_RECEIVED","CARD_FETCH_REQUESTED","CARD_FETCH_SUCCEEDED","CARD_FETCH_FAILED","CARD_UPDATE_REQUESTED","CARD_UPDATE_SUCCEEDED","CARD_UPDATE_FAILED","CARD_UPDATE_RECEIVED","CARD_DELETE_REQUESTED","CARD_DELETE_SUCCEEDED","CARD_DELETE_FAILED","CARD_DELETE_RECEIVED","CARD_MEMBERSHIP_CREATE_REQUESTED","CARD_MEMBERSHIP_CREATE_SUCCEEDED","CARD_MEMBERSHIP_CREATE_FAILED","CARD_MEMBERSHIP_CREATE_RECEIVED","CARD_MEMBERSHIP_DELETE_REQUESTED","CARD_MEMBERSHIP_DELETE_SUCCEEDED","CARD_MEMBERSHIP_DELETE_FAILED","CARD_MEMBERSHIP_DELETE_RECEIVED","CARD_LABEL_CREATE_REQUESTED","CARD_LABEL_CREATE_SUCCEEDED","CARD_LABEL_CREATE_FAILED","CARD_LABEL_CREATE_RECEIVED","CARD_LABEL_DELETE_REQUESTED","CARD_LABEL_DELETE_SUCCEEDED","CARD_LABEL_DELETE_FAILED","CARD_LABEL_DELETE_RECEIVED","TASK_CREATE","TASK_UPDATE","TASK_DELETE","TASK_CREATE_REQUESTED","TASK_CREATE_SUCCEEDED","TASK_CREATE_FAILED","TASK_CREATE_RECEIVED","TASK_UPDATE_REQUESTED","TASK_UPDATE_SUCCEEDED","TASK_UPDATE_FAILED","TASK_UPDATE_RECEIVED","TASK_DELETE_REQUESTED","TASK_DELETE_SUCCEEDED","TASK_DELETE_FAILED","TASK_DELETE_RECEIVED","ACTIONS_FETCH_REQUESTED","ACTIONS_FETCH_SUCCEEDED","ACTIONS_FETCH_FAILED","ACTION_CREATE_RECEIVED","ACTION_UPDATE_RECEIVED","ACTION_DELETE_RECEIVED","COMMENT_ACTION_CREATE","COMMENT_ACTION_UPDATE","COMMENT_ACTION_DELETE","COMMENT_ACTION_CREATE_REQUESTED","COMMENT_ACTION_CREATE_SUCCEEDED","COMMENT_ACTION_CREATE_FAILED","COMMENT_ACTION_UPDATE_REQUESTED","COMMENT_ACTION_UPDATE_SUCCEEDED","COMMENT_ACTION_UPDATE_FAILED","COMMENT_ACTION_DELETE_REQUESTED","COMMENT_ACTION_DELETE_SUCCEEDED","COMMENT_ACTION_DELETE_FAILED","NOTIFICATIONS_DELETE","NOTIFICATIONS_FETCH_REQUESTED","NOTIFICATIONS_FETCH_SUCCEEDED","NOTIFICATIONS_FETCH_FAILED","NOTIFICATIONS_DELETE_REQUESTED","NOTIFICATIONS_DELETE_SUCCEEDED","NOTIFICATIONS_DELETE_FAILED","NOTIFICATION_CREATE_RECEIVED","NOTIFICATION_DELETE_RECEIVED","initialState","status","this","projectMemberships","orderBy","notifications","filter","isRead","user","toModelArray","forEach","projectMembershipModel","deleteWithRelated","update","deletedAt","Date","User","type","payload","ActionTypes","upsert","users","withId","data","isAvatarUploading","Model","modelName","fields","attr","email","name","avatar","isAdmin","getDefault","memberships","boards","boardModel","delete","Project","projects","project","many","to","through","relatedName","cards","cardModel","remove","userId","filterUsers","ProjectMembership","projectMembership","localId","projectId","fk","as","lists","Board","boardId","add","board","isFetching","filterLabels","position","cardModels","getOrderedCardsQuerySet","filterUserIds","toRefArray","filterLabelIds","label","length","some","includes","labels","List","list","Label","color","tasks","actions","Card","cardId","isCurrent","isSubscribed","card","cardMemberships","cardLabels","labelId","cardMembership","cardLabel","isActionsFetching","isAllActionsFetched","Config","description","deadline","timer","listId","Task","task","isCompleted","Action","action","isInCard","actionModel","createdAt","Notification","notification","notificationModel","actionId","orm","ORM","register","createReducer","accessToken","localStorage","getItem","password","isSubmitting","error","isInitializing","currentModal","combineReducers","router","socket","state","db","auth","login","app","LOCATION_CHANGE","dbSelector","maxIdSelector","meta","maxId","isAppInitializingSelector","ROOT","LOGIN","PROJECTS","BOARDS","CARDS","pathsMatchSelector","createReselectSelector","location","pathname","paths","i","match","matchPath","path","exact","matchPaths","values","Paths","pathSelector","createReduxOrmSelector","pathsMatch","projectModel","params","nextLocalId","now","currentModalSelector","currentUserIdSelector","currentUserSelector","createSelector","userModel","ref","projectsForCurrentUserSelector","getOrderedProjectMembershipsQuerySet","notificationsTotal","getUnreadNotificationsQuerySet","count","firstBoard","first","firstBoardId","notificationsForCurrentUserSelector","getOrderedUnreadNotificationsQuerySet","currentProjectSelector","membershipsForCurrentProjectSelector","currentUserId","getOrderedMembershipsQuerySet","isPersisted","boardsForCurrentProjectSelector","getOrderedBoardsQuerySet","currentBoardSelector","listIdsForCurrentBoardSelector","getOrderedListsQuerySet","labelsForCurrentBoardSelector","filterUsersForCurrentBoardSelector","filterLabelsForCurrentBoardSelector","currentCardSelector","usersForCurrentCardSelector","labelsForCurrentCardSelector","tasksForCurrentCardSelector","getOrderedTasksQuerySet","actionsForCurrentCardSelector","getOrderedInCardActionsQuerySet","notificationIdsForCurrentCardSelector","allUsersSelector","getOrderedUndeletedQuerySet","allUsersExceptCurrentSelector","exclude","makeListByIdSelector","_","listModel","makeCardIdsByListIdSelector","getOrderedFilteredCardsModelArray","makeCardByIdSelector","makeUsersByCardIdSelector","makeLabelsByCardIdSelector","makeTasksByCardIdSelector","makeNotificationsTotalByCardIdSelector","boardByIdSelector","listByIdSelector","lastActionModel","last","nextPosition","items","index","excludedId","filteredItems","isUndefined","item","lastItem","prevItem","nextItem","prevPosition","nextBoardPositionSelector","__","___","nextListPositionSelector","nextCardPositionSelector","logout","appInitialized","openModal","closeModal","createUser","clearUserCreationError","updateUser","deleteUser","addUserToCard","removeUserFromCard","addUserToBoardFilter","removeUserFromBoardFilter","createProject","updateProject","deleteProject","createProjectMembership","deleteProjectMembership","createBoard","updateBoard","deleteBoard","createList","updateList","deleteList","createLabel","updateLabel","deleteLabel","addLabelToCard","removeLabelFromCard","addLabelToBoardFilter","removeLabelFromBoardFilter","createCard","updateCard","deleteCard","createTask","updateTask","deleteTask","createCommentAction","updateCommentAction","deleteCommentAction","deleteNotifications","deleteNotificationsService","deleteNotificationsInCurrentCardService","put","select","notificationIds","call","goToRootService","goToProjectService","goToBoardService","runPathActionsService","locationChangedService","push","replace","ReactGA","pageview","search","logoutService","openModalService","closeModalService","USERS","ADD_PROJECT","localePairs","format","date","time","dateTime","longDate","longDateTime","translation","common","emailDoesNotExist","invalidPassword","logInToPlanka","noInternetConnection","projectManagment","serverConnectionFailed","unknownError","addComment","addMember_title","addUser_title","administrator","all","allChangesWillBeAutomaticallySavedAfterConnectionRestored","areYouSureYouWantToDeleteThisBoard","areYouSureYouWantToDeleteThisCard","areYouSureYouWantToDeleteThisComment","areYouSureYouWantToDeleteThisLabel","areYouSureYouWantToDeleteThisList","areYouSureYouWantToDeleteThisProject","areYouSureYouWantToDeleteThisTask","areYouSureYouWantToDeleteThisUser","areYouSureYouWantToRemoveThisMemberFromProject","boardNotFound_title","cardActions_title","cardNotFound_title","cardOrActionAreDeleted","connectionRestored_title","createBoard_title","createLabel_title","createNewOneOrSelectExistingOne","createProject_title","deleteBoard_title","deleteCard_title","deleteComment_title","deleteLabel_title","deleteList_title","deleteProject_title","deleteTask_title","deleteUser_title","editAvatar_title","editBoard_title","editDeadline_title","editLabel_title","editName_title","editProject_title","editTimer_title","enterCardTitle","enterDescription","enterListTitle","enterProjectTitle","enterTaskDescription","filterByLabels_title","filterByMembers_title","hours","listActions_title","members","minutes","noConnectionToServer","noUnreadNotifications","openBoard_title","pageNotFound_title","projectNotFound_title","refreshPageToLoadLastDataAndReceiveUpdates","removeMember_title","seconds","taskActions_title","title","userAddedThisCardToList","userIsAlreadyExist","userLeftNewCommentToCard","userMovedCardFromListToList","userMovedThisCardFromListToList","writeComment","logIn","addAnotherCard","addAnotherList","addAnotherTask","addCard","addCard_title","addList","addMoreDetailedDescription","addTask","addToCard","addUser","createNewLabel","deleteAvatar","deleteComment","edit","editDescription_title","editTask_title","editTitle_title","logOut_title","removeFromProject","removeMember","save","start","stop","subscribe","unsubscribe","uploadNewAvatar","dateFns","addMember","boardNotFound","cardActions","cardNotFound","connectionRestored","editAvatar","editBoard","editDeadline","editLabel","editName","editProject","editTimer","filterByLabels","filterByMembers","listActions","openBoard","pageNotFound","projectNotFound","taskActions","editDescription","editTask","editTitle","logOut","languages","locale","embedLocales","fromPairs","i18n","locales","addLocale","language","registerLocale","getLocale","options","formatDate","parse","dateString","backupDate","parseDate","formatDatePostProcessor","process","value","parseDatePostProcessor","use","languageDetector","initReactI18next","init","resources","fallbackLng","whitelist","load","interpolation","escapeValue","react","useSuspense","debug","loadAppLocale","default","namespace","addResourceBundle","setDefaultLocale","on","initializeAppService","createUserService","clearUserCreationErrorService","updateUserService","updateCurrentUserService","uploadCurrentUserAvatarService","deleteUserService","addUserToCardService","addUserToCurrentCardService","removeUserFromCardService","removeUserFromCurrentCardService","addUserToBoardFilterService","addUserToFilterInCurrentBoardService","removeUserFromBoardFilterService","removeUserFromFilterInCurrentBoardService","createProjectService","updateProjectService","updateCurrentProjectService","deleteProjectService","deleteCurrentProjectService","projectMembershipLocalId","createProjectMembershipService","createMembershipInCurrentProjectService","deleteProjectMembershipService","createBoardService","createBoardInCurrentProjectService","updateBoardService","moveBoardService","deleteBoardService","nextData","createListService","createListInCurrentBoardService","updateListService","moveListService","deleteListService","createLabelService","createLabelInCurrentBoardService","updateLabelService","deleteLabelService","addLabelToCardService","addLabelToCurrentCardService","removeLabelFromCardService","removeLabelFromCurrentCardService","addLabelToBoardFilterService","addLabelToFilterInCurrentBoardService","removeLabelFromBoardFilterService","removeLabelFromFilterInCurrentBoardService","createCardService","updateCardService","updateCurrentCardService","moveCardService","deleteCardService","deleteCurrentCardService","createTaskService","createTaskInCurrentCardService","updateTaskService","deleteTaskService","fetchActionsService","fetchActionsInCurrentCardService","CREATE_CARD","MOVE_CARD","COMMENT_CARD","createCommentActionService","createCommentActionInCurrentCardService","updateCommentActionService","deleteCommentActionService","deleteNotificationService","takeEvery","PREFIX","CURRENT_USER_UPDATE","CURRENT_USER_AVATAR_UPLOAD","USER_TO_CURRENT_CARD_ADD","USER_FROM_CURRENT_CARD_REMOVE","USER_TO_FILTER_IN_CURRENT_BOARD_ADD","USER_FROM_FILTER_IN_CURRENT_BOARD_REMOVE","CURRENT_PROJECT_UPDATE","CURRENT_PROJECT_DELETE","MEMBERSHIP_IN_CURRENT_PROJECT_CREATE","BOARD_IN_CURRENT_PROJECT_CREATE","BOARD_MOVE","LIST_IN_CURRENT_BOARD_CREATE","LIST_MOVE","LABEL_IN_CURRENT_BOARD_CREATE","LABEL_TO_CURRENT_CARD_ADD","LABEL_FROM_CURRENT_CARD_REMOVE","LABEL_TO_FILTER_IN_CURRENT_BOARD_ADD","LABEL_FROM_FILTER_IN_CURRENT_BOARD_REMOVE","CURRENT_CARD_UPDATE","CARD_MOVE","CURRENT_CARD_DELETE","TASK_IN_CURRENT_CARD_CREATE","ACTIONS_IN_CURRENT_CARD_FETCH","COMMENT_ACTION_IN_CURRENT_CARD_CREATE","NOTIFICATION_DELETE","takeLatest","EntryActionTypes","file","modal","commentAction","watchers","watcher","fork","take","window","reload","appSaga","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","preloadedState","itemsById","1","updatedAt","2","3","indexes","4","5","6","7","8","startedAt","total","9","10","11","toList","fromList","12","13","14","16","text","BoardFilterUsers","fromBoardId","toUserId","BoardFilterLabels","toLabelId","CardUsers","0","fromCardId","CardLabels","15","createStore","rootReducer","applyMiddleware","run","rootSaga","Boolean","hostname","authenticate","clearAuthenticationError","openUsersModal","ModalTypes","openAddProjectModal","updateCurrentUser","uploadCurrentUserAvatar","addUserToCurrentCard","removeUserFromCurrentCard","addUserToFilterInCurrentBoard","removeUserFromFilterInCurrentBoard","updateCurrentProject","deleteCurrentProject","createMembershipInCurrentProject","createBoardInCurrentProject","moveBoard","createListInCurrentBoard","moveList","createLabelInCurrentBoard","addLabelToCurrentCard","removeLabelFromCurrentCard","addLabelToFilterInCurrentBoard","removeLabelFromFilterInCurrentBoard","updateCurrentCard","moveCard","deleteCurrentCard","createTaskInCurrentCard","fetchActionsInCurrentCard","createCommentActionInCurrentCard","deleteNotification","MaskedInput","getInputDOMNode","focus","InputMask","Input","React","forwardRef","mask","maskChar","nextProps","input","defaultProps","undefined","memo","PopupHeader","children","onBack","Header","className","styles","wrapper","Button","icon","onClick","backButton","content","propTypes","PropTypes","node","isRequired","func","Popup","SemanticUIPopup","Markdown","renderers","linkStopPropagation","props","handleLinkClick","useCallback","event","stopPropagation","linkRenderer","linkProps","link","DragScroller","useRef","handleMouseDown","target","current","dataset","dragScroller","clientX","handleWindowMouseMove","preventDefault","scrollLeft","handleWindowMouseUp","useEffect","addEventListener","removeEventListener","onMouseDown","currentValue","dequal","effect","dependencies","useDeepCompareMemoize","callback","prevValue","initialValue","useState","setValue","nextValue","initialData","setData","fieldName","prevData","createStep","initialType","initialParams","step","setStep","defaultState","setState","toggle","prevState","isOpened","close","isClosable","handleFieldBlur","handleControlMouseOver","handleControlMouseOut","isMounted","Login","defaultData","onAuthenticate","onMessageDismiss","useTranslation","t","wasSubmitting","usePrevious","useForm","handleFieldChange","useToggle","focusPasswordFieldState","focusPasswordField","emailField","passwordField","handleSubmit","useDeepCompareCallback","cleanData","trim","isEmail","useDeepCompareEffect","message","useDidUpdate","fullHeight","Grid","verticalAlign","fullHeightPaddingFix","Column","widescreen","largeScreen","computer","tablet","mobile","loginWrapper","textAlign","formTitle","Message","visible","onDismiss","Form","size","onSubmit","inputWrapper","inputLabel","fluid","readOnly","onChange","primary","labelPosition","floated","loading","disabled","only","classNames","cover","descriptionWrapperOverlay","descriptionWrapper","inverted","descriptionTitle","descriptionSubtitle","connect","externalError","dispatch","bindActionCreators","WrappedComponent","setIsOpened","handleOpen","handleClose","handleClick","handleTriggerClick","tigger","cloneElement","basic","wide","trigger","open","onOpen","onClose","closeButton","document","dispatchEvent","MouseEvent","STYLES","tiny","fontSize","fontWeight","height","padding","width","small","lineHeight","medium","large","COLORS","getColor","sum","charCodeAt","isDisabled","style","background","contentNode","hoverable","initials","button","withPopup","onDelete","handleDelete","renderItemContent","i18nKey","comment","Content","key","deletedContent","EditNameStep","defaultValue","onUpdate","useField","field","cleanValue","context","positive","StepTypes","UserStep","onLogout","useSteps","openStep","handleBack","handleNameEditClick","handleNameUpdate","newName","Menu","secondary","vertical","menu","Item","menuItem","UserPopup","onUserUpdate","onUserAvatarUpload","onNotificationDelete","logo","NotificationsPopup","Icon","onAvatarUpload","currentUser","isEditable","onUsers","Tasks","toggleOpened","handleToggleClick","completedItems","progressWrapper","Progress","autoSuccess","progress","countOpened","countClosed","taskCompleted","EditName","submit","useImperativeHandle","handleFieldKeyDown","useClosableForm","fieldWrapper","TextArea","TextareaAutosize","minRows","maxRows","spellCheck","onKeyDown","onBlur","controls","submitButton","onMouseOver","onMouseOut","isActive","onUserSelect","onUserDeselect","active","menuItemActive","menuItemText","menuItemTextActive","ProjectMembershipsStep","currentUserIds","handleUserSelect","handleUserDeselect","PAIRS","KEYS","pair","MAP","Editor","onFieldChange","nameField","colorButtons","LabelColors","hex","colorButton","colorButtonActive","AddStep","onCreate","DeleteStep","buttonContent","onConfirm","negative","string","EditStep","handleDeleteClick","deleteButton","onSelect","onDeselect","onEdit","labelButton","labelButtonActive","editButton","LabelsStep","currentIds","handleAddClick","handleEdit","handleSelect","handleDeselect","handleUpdate","currentItem","find","pick","addButton","EditDeadlineStep","setHours","postProcess","selectTimeFieldState","selectTimeField","dateField","timeField","nullableDate","useMemo","Number","isNaN","getTime","handleDatePickerChange","handleClearClick","fieldBox","inline","selected","getFullSeconds","Math","floor","createTimer","updateTimer","parts","getTimerParts","fullSeconds","createData","EditTimerStep","isEditing","toggleEdit","hoursField","minutesField","secondsField","handleStartClick","handleStopClick","handleToggleEditClick","parseInt","iconButton","currentLabelIds","onNameEdit","onUserAdd","onUserRemove","onLabelAdd","onLabelRemove","onLabelCreate","onLabelUpdate","onLabelDelete","handleUsersClick","handleLabelsClick","handleEditDeadlineClick","handleEditTimerClick","handleDeadlineUpdate","handleTimerUpdate","maxWidth","FORMATS","Deadline","textDecoration","Timer","prevStartedAt","forceUpdate","interval","setInterval","clearInterval","part","join","formatTimer","allProjectMemberships","allLabels","activeElement","blur","handleNameEdit","attachment","attachmentLeft","attachments","attachmentsRight","attachmentRight","draggableId","isDragDisabled","innerRef","draggableProps","dragHandleProps","ActionsPopup","actionsButton","fitted","cardByIdSelector","usersByCardIdSelector","labelsByCardIdSelector","tasksByCardIdSelector","notificationsTotalByCardIdSelector","handleFieldClick","DEFAULT_DATA","AddCard","selectNameFieldState","selectNameField","handleChildrenClick","placeholder","onCardAdd","handleCardAddClick","_extends","assign","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","viewBox","ForwardRef","cardIds","onCardCreate","handleHeaderClick","handleCardAdd","cardsNode","droppableId","DroppableTypes","isDropDisabled","droppableProps","cardIndex","CardContainer","addCardButton","addCardButtonIcon","addCardButtonText","data-drag-scroller","header","headerName","headerButton","cardIdsByListIdSelector","NameField","prevDefaultValue","handleChange","isFocused","handleFocus","handleKeyDown","handleBlur","onFocus","EditDescription","getSelection","toString","ctrlKey","handleToggleChange","checkboxWrapper","Checkbox","checked","checkbox","Add","taskButton","taskButtonText","AddComment","textField","EditComment","ItemComment","editComment","handleEditClick","Comment","author","linkTarget","Actions","DeletePopup","isAllFetched","onFetch","onCommentCreate","onCommentUpdate","onCommentDelete","handleCommentUpdate","handleCommentDelete","contentModule","moduleWrapper","moduleIcon","moduleHeader","Group","Loader","loader","Visibility","fireOnMount","onOnScreen","CardModal","onTaskCreate","onTaskUpdate","onTaskDelete","onActionsFetch","onCommentActionCreate","onCommentActionUpdate","onCommentActionDelete","handleDescriptionUpdate","newDescription","newDeadline","newTimer","handleToggleSubscribeClick","userIds","labelIds","Modal","closeIcon","centered","grid","Row","headerPadding","headerWrapper","headerTitle","modalPadding","contentPadding","ProjectMembershipsPopup","addAttachment","LabelsPopup","EditDeadlinePopup","EditTimerPopup","descriptionText","descriptionButton","descriptionButtonText","sidebarPadding","actionsTitle","actionButton","actionIcon","stateProps","dispatchProps","omit","AddList","Filter","handleUserRemoveClick","handleLabelRemoveClick","filters","filterButton","filterTitle","filterLabel","filterItem","parseDNDId","dndId","split","pop","listIds","isCardModalOpened","onListCreate","onListMove","onCardMove","onUserToFilterAdd","onUserFromFilterRemove","onLabelToFilterAdd","onLabelFromFilterRemove","handleDragStart","closePopup","handleDragEnd","destination","onDragStart","onDragEnd","direction","ListContainer","addListButton","addListButtonIcon","addListButtonText","CardModalContainer","BoardWrapper","BoardContainer","Boards","currentId","onMove","renderItems","safeItems","tabWrapper","tab","tabActive","renderEditableItems","EditPopup","tabs","AddPopup","BoardWrapperContainer","messageIcon","messageTitle","messageContent","UserItem","bool","AddMembershipPopup","allUsers","onMembershipCreate","onMembershipDelete","handleMembershipDelete","membership","EditMembershipPopup","BoardsContainer","ProjectWrapper","isProjectNotFound","isBoardNotFound","isCardNotFound","ProjectContainer","Projects","onAdd","Container","cardsWrapper","gridFix","cardOverlay","openTitle","addTitleWrapper","addTitle","addGridIcon","ProjectWrapperContainer","AddUserPopup","handleIsAdminChange","Table","Cell","collapsing","Radio","UsersModal","HeaderCell","Body","Footer","colSpan","AddUserPopupContainer","AddProjectModal","App","isUsersModalOpened","isAddProjectModalOpened","HeaderContainer","ProjectsContainer","UsersModalContainer","AddProjectModalContainer","SocketStatus","isDisconnected","isReconnected","handleReloadClick","SocketStatuses","AppWrapper","AppContainer","SocketStatusContainer","NotFound","Root","store","component","LoginContainer","AppWrapperContainer","initialize","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0fdd825.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Header_icon__2vvCF\",\"item\":\"Header_item__3IlmB\",\"logo\":\"Header_logo__3_SJs\",\"menu\":\"Header_menu__BQHSW\",\"notification\":\"Header_notification__2T0pM\",\"wrapper\":\"Header_wrapper__4Axjt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ActionsPopup_menu__sYrHp\",\"menuItem\":\"ActionsPopup_menuItem__1R7w-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"Item_author__2NCT_\",\"content\":\"Item_content__3Bm_S\",\"date\":\"Item_date__3XOQ_\",\"text\":\"Item_text__1jAbJ\",\"user\":\"Item_user__xtscH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SocketStatus_button__3Zho8\",\"content\":\"SocketStatus_content__1ZpLA\",\"header\":\"SocketStatus_header__HsnJF\",\"wrapper\":\"SocketStatus_wrapper__3pz0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorButton\":\"Editor_colorButton__2rHB7\",\"colorButtonActive\":\"Editor_colorButtonActive__1gKf5\",\"colorButtons\":\"Editor_colorButtons__3qm5T\",\"field\":\"Editor_field__8YFiW\",\"text\":\"Editor_text__3HJmc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"EditDeadlineStep_deleteButton__3DkPR\",\"fieldBox\":\"EditDeadlineStep_fieldBox__29ZZN\",\"fieldWrapper\":\"EditDeadlineStep_fieldWrapper__2yT_B\",\"text\":\"EditDeadlineStep_text__WX6n4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"ItemComment_author__3RtDS\",\"content\":\"ItemComment_content__rLbNS\",\"date\":\"ItemComment_date__2pgqH\",\"text\":\"ItemComment_text__1DhfX\",\"title\":\"ItemComment_title__3g-LD\",\"user\":\"ItemComment_user__9TOBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addListButton\":\"Board_addListButton__1tmO-\",\"addListButtonIcon\":\"Board_addListButtonIcon__1bi7m\",\"addListButtonText\":\"Board_addListButtonText__PBasU\",\"list\":\"Board_list__2SKHu\",\"lists\":\"Board_lists__22jN1\",\"wrapper\":\"Board_wrapper__13Igb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addUser\":\"Project_addUser__3WFUc\",\"header\":\"Project_header__QiwWB\",\"name\":\"Project_name__Voe3K\",\"user\":\"Project_user__rVGKh\",\"users\":\"Project_users__3Jarb\",\"wrapper\":\"Project_wrapper__2UFrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"AddUserPopup_field__1u357\",\"text\":\"AddUserPopup_text__MvGBd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"Item_menuItem__1X1EH\",\"menuItemActive\":\"Item_menuItemActive__2gWx3\",\"menuItemText\":\"Item_menuItemText__3er5t\",\"menuItemTextActive\":\"Item_menuItemTextActive__2GoLD\",\"user\":\"Item_user___kui4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"AddCard_field__3Uru9\",\"fieldWrapper\":\"AddCard_fieldWrapper__Yrhp5\",\"submitButton\":\"AddCard_submitButton__1D-iB\",\"wrapper\":\"AddCard_wrapper__2T35C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"UserItem_menuItem__2eCq6\",\"menuItemActive\":\"UserItem_menuItemActive__33a4G\",\"menuItemText\":\"UserItem_menuItemText__1qjYg\",\"menuItemTextActive\":\"UserItem_menuItemTextActive__1l6In\",\"user\":\"UserItem_user__oqLhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"EditMembershipPopup_content__6qqT7\",\"deleteButton\":\"EditMembershipPopup_deleteButton__29mqN\",\"email\":\"EditMembershipPopup_email__3t35W\",\"name\":\"EditMembershipPopup_name__1Hkt5\",\"user\":\"EditMembershipPopup_user__3mkVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"User_button__dqjlS\",\"hoverable\":\"User_hoverable__2YRWv\",\"wrapper\":\"User_wrapper__37jpZ\",\"initials\":\"User_initials__1-wq1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"NotificationsPopup_button__22VTG\",\"content\":\"NotificationsPopup_content__1ptAQ\",\"deletedContent\":\"NotificationsPopup_deletedContent__OzS-V\",\"wrapper\":\"NotificationsPopup_wrapper__3wsx1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"EditName_field__1k7UR\",\"fieldWrapper\":\"EditName_fieldWrapper__1tD7J\",\"submitButton\":\"EditName_submitButton__3nT5j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editButton\":\"Item_editButton__1WeVi\",\"labelButton\":\"Item_labelButton__2K6xY\",\"labelButtonActive\":\"Item_labelButtonActive__3B_FB\",\"wrapper\":\"Item_wrapper__fS4BA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ActionsPopup_menu__2aMBT\",\"menuItem\":\"ActionsPopup_menuItem__2RqwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"AddList_controls__3UVsA\",\"field\":\"AddList_field__3Rstu\",\"submitButton\":\"AddList_submitButton__3KzfV\",\"wrapper\":\"AddList_wrapper__1mOEE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionButton\":\"CardModal_actionButton__6DChR\",\"actionIcon\":\"CardModal_actionIcon__1OHU6\",\"actions\":\"CardModal_actions__33XmY\",\"actionsTitle\":\"CardModal_actionsTitle__MwQNA\",\"addAttachment\":\"CardModal_addAttachment__2z4Ee\",\"attachment\":\"CardModal_attachment__32ApJ\",\"attachments\":\"CardModal_attachments__1Fjfw\",\"contentModule\":\"CardModal_contentModule__1PA18\",\"contentPadding\":\"CardModal_contentPadding__2OEfn\",\"deadline\":\"CardModal_deadline__3N8Jc\",\"descriptionButton\":\"CardModal_descriptionButton__KASZS\",\"descriptionButtonText\":\"CardModal_descriptionButtonText__1o36S\",\"descriptionText\":\"CardModal_descriptionText__Dbd7d\",\"grid\":\"CardModal_grid__5v0eS\",\"headerPadding\":\"CardModal_headerPadding__hRx1s\",\"headerTitle\":\"CardModal_headerTitle__2OGQ0\",\"headerWrapper\":\"CardModal_headerWrapper__ZNZ1W\",\"labels\":\"CardModal_labels__1jKvv\",\"modalPadding\":\"CardModal_modalPadding__3Gsdw\",\"moduleHeader\":\"CardModal_moduleHeader__2wGk2\",\"moduleIcon\":\"CardModal_moduleIcon__HZZXS\",\"moduleWrapper\":\"CardModal_moduleWrapper__2C0vO\",\"text\":\"CardModal_text__2TxEi\",\"sidebarPadding\":\"CardModal_sidebarPadding__2MS80\",\"wrapper\":\"CardModal_wrapper__dAXh0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backButton\":\"PopupHeader_backButton__I-6Fo\",\"content\":\"PopupHeader_content__2Nhor\",\"wrapper\":\"PopupHeader_wrapper__3y8wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"UserPopup_menu__2WCet\",\"menuItem\":\"UserPopup_menuItem__2xMdV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Label_button__2x4-N\",\"hoverable\":\"Label_hoverable__2mWQy\",\"wrapper\":\"Label_wrapper__3Tfm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Deadline_button__1X84g\",\"hoverable\":\"Deadline_hoverable__9TF4-\",\"wrapper\":\"Deadline_wrapper__2xFr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Timer_button__3iLxg\",\"hoverable\":\"Timer_hoverable__33UZu\",\"wrapper\":\"Timer_wrapper__1zIMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"EditName_controls__1PF6Y\",\"field\":\"EditName_field__28U-y\",\"wrapper\":\"EditName_wrapper__jXtuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ActionsPopup_menu__gH6TW\",\"menuItem\":\"ActionsPopup_menuItem__il5n3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Add_controls__3iEI6\",\"field\":\"Add_field__XPEgU\",\"wrapper\":\"Add_wrapper__clclg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"Tasks_progress__325jC\",\"taskButton\":\"Tasks_taskButton__1Y0DR\",\"taskButtonText\":\"Tasks_taskButtonText__2xcZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"closeButton\":\"Popup_closeButton__1EXGw\",\"wrapper\":\"Popup_wrapper__2Rz9j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"EditDescription_controls__Oxs2B\",\"field\":\"EditDescription_field__3peds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"AddComment_controls__jnRNC\",\"field\":\"AddComment_field__1YhMY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"EditComment_controls__3YBjc\",\"field\":\"EditComment_field__1qESF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"EditPopup_deleteButton__UWfzT\",\"field\":\"EditPopup_field__1vhAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"EditPopup_deleteButton__2WpwA\",\"field\":\"EditPopup_field__1_PZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"UsersModal_button__2U2j_\",\"title\":\"UsersModal_title__3lp82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsButton\":\"Card_actionsButton__BJPBP\",\"attachment\":\"Card_attachment__2OEgC\",\"attachmentLeft\":\"Card_attachmentLeft__HNKYT\",\"attachmentRight\":\"Card_attachmentRight__2INDP\",\"attachments\":\"Card_attachments__3i0rd\",\"attachmentsRight\":\"Card_attachmentsRight__3rG57\",\"card\":\"Card_card__1eE8R\",\"target\":\"Card_target__1KdRW\",\"content\":\"Card_content__3Ie1M\",\"labels\":\"Card_labels__2i5hY\",\"name\":\"Card_name__1qjZb\",\"notification\":\"Card_notification__370o1\",\"wrapper\":\"Card_wrapper__ESwwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"EditNameStep_field__3bUED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ProjectMembershipsStep_menu__15DFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitButton\":\"AddStep_submitButton__33-CI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"DeleteStep_content__3r7Rs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"EditStep_deleteButton__2fitW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"LabelsStep_addButton__3WDiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"EditName_field__1Mv07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"NameField_field__L5jxv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"Boards_addButton__3iRZz\",\"board\":\"Boards_board__317st\",\"editButton\":\"Boards_editButton__3lgKI\",\"link\":\"Boards_link__1ZQpG\",\"message\":\"Boards_message__Pb_RL\",\"messageIcon\":\"Boards_messageIcon__1g2_2\",\"messageTitle\":\"Boards_messageTitle__1JGdE\",\"messageContent\":\"Boards_messageContent__3HR09\",\"tab\":\"Boards_tab__1T9Dy\",\"target\":\"Boards_target__2FQmQ\",\"tabActive\":\"Boards_tabActive__2AULT\",\"tabWrapper\":\"Boards_tabWrapper__32ToZ\",\"tabs\":\"Boards_tabs__2On08\",\"wrapper\":\"Boards_wrapper__l6fG-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"AddPopup_field__3BWAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"AddMembershipPopup_menu__3a-pw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Item_button__1KAz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"AddProjectModal_field__1QYKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Login_cover__2vDqs\",\"descriptionSubtitle\":\"Login_descriptionSubtitle__2sWDg\",\"descriptionTitle\":\"Login_descriptionTitle__27CLo\",\"descriptionWrapper\":\"Login_descriptionWrapper__3hCbO\",\"descriptionWrapperOverlay\":\"Login_descriptionWrapperOverlay__1L1C2\",\"formTitle\":\"Login_formTitle__2u-bA\",\"fullHeight\":\"Login_fullHeight__FUJRg\",\"fullHeightPaddingFix\":\"Login_fullHeightPaddingFix__1Uoh0\",\"inputLabel\":\"Login_inputLabel__2c8zU\",\"inputWrapper\":\"Login_inputWrapper__32RKZ\",\"loginWrapper\":\"Login_loginWrapper__2rzG3\",\"wrapper\":\"Login_wrapper__1IflB\"};","var map = {\n\t\"./en-US/app\": [\n\t\t808,\n\t\t3\n\t],\n\t\"./ru-RU/app\": [\n\t\t809,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 590;\nmodule.exports = webpackAsyncContext;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add\":\"Projects_add__Y4vu8\",\"addGridIcon\":\"Projects_addGridIcon___S09l\",\"addTitle\":\"Projects_addTitle__3ylxW\",\"addTitleWrapper\":\"Projects_addTitleWrapper__3WwhX\",\"card\":\"Projects_card__-ev6G\",\"cardOverlay\":\"Projects_cardOverlay__hiwAQ\",\"cardsWrapper\":\"Projects_cardsWrapper__IvVC-\",\"gridFix\":\"Projects_gridFix__LRk9P\",\"notification\":\"Projects_notification__gjr7J\",\"open\":\"Projects_open__3B87Z\",\"openTitle\":\"Projects_openTitle__3Z2DG\",\"project\":\"Projects_project__22eSF\",\"wrapper\":\"Projects_wrapper__2WbCB\"};","import { createHashHistory } from 'history';\n\nexport default createHashHistory();\n","import { connectRouter } from 'connected-react-router';\n\nimport history from '../history';\n\nexport default connectRouter(history);\n","export default {\n  /* Socket */\n\n  SOCKET_STATUS_CHANGED: 'SOCKET_STATUS_CHANGED',\n\n  /* Login */\n\n  AUTHENTICATE: 'AUTHENTICATE',\n  AUTHENTICATION_ERROR_CLEAR: 'AUTHENTICATION_ERROR_CLEAR',\n  LOGOUT: 'LOGOUT',\n  AUTHENTICATE_REQUESTED: 'AUTHENTICATE_REQUESTED',\n  AUTHENTICATE_SUCCEEDED: 'AUTHENTICATE_SUCCEEDED',\n  AUTHENTICATE_FAILED: 'AUTHENTICATE_FAILED',\n\n  /* App */\n\n  APP_INITIALIZED: 'APP_INITIALIZED',\n\n  /* Modal */\n\n  MODAL_OPEN: 'MODAL_OPEN',\n  MODAL_CLOSE: 'MODAL_CLOSE',\n\n  /* Users */\n\n  USERS_FETCH_REQUESTED: 'USERS_FETCH_REQUESTED',\n  USERS_FETCH_SUCCEEDED: 'USERS_FETCH_SUCCEEDED',\n  USERS_FETCH_FAILED: 'USERS_FETCH_FAILED',\n\n  /* User */\n\n  USER_CREATE: 'USER_CREATE',\n  USER_CREATION_ERROR_CLEAR: 'USER_CREATION_ERROR_CLEAR',\n  USER_UPDATE: 'USER_UPDATE',\n  USER_DELETE: 'USER_DELETE',\n  USER_TO_CARD_ADD: 'USER_TO_CARD_ADD',\n  USER_FROM_CARD_REMOVE: 'USER_FROM_CARD_REMOVE',\n  USER_TO_BOARD_FILTER_ADD: 'USER_TO_BOARD_FILTER_ADD',\n  USER_FROM_BOARD_FILTER_REMOVE: 'USER_FROM_BOARD_FILTER_REMOVE',\n  USER_CREATE_REQUESTED: 'USER_CREATE_REQUESTED',\n  USER_CREATE_SUCCEEDED: 'USER_CREATE_SUCCEEDED',\n  USER_CREATE_FAILED: 'USER_CREATE_FAILED',\n  USER_CREATE_RECEIVED: 'USER_CREATE_RECEIVED',\n  CURRENT_USER_FETCH_REQUESTED: 'CURRENT_USER_FETCH_REQUESTED',\n  CURRENT_USER_FETCH_SUCCEEDED: 'CURRENT_USER_FETCH_SUCCEEDED',\n  CURRENT_USER_FETCH_FAILED: 'CURRENT_USER_FETCH_FAILED',\n  USER_UPDATE_REQUESTED: 'USER_UPDATE_REQUESTED',\n  USER_UPDATE_SUCCEEDED: 'USER_UPDATE_SUCCEEDED',\n  USER_UPDATE_FAILED: 'USER_UPDATE_FAILED',\n  USER_UPDATE_RECEIVED: 'USER_UPDATE_RECEIVED',\n  USER_AVATAR_UPLOAD_REQUESTED: 'USER_AVATAR_UPLOAD_REQUESTED',\n  USER_AVATAR_UPLOAD_SUCCEEDED: 'USER_AVATAR_UPLOAD_SUCCEEDED',\n  USER_AVATAR_UPLOAD_FAILED: 'USER_AVATAR_UPLOAD_FAILED',\n  USER_DELETE_REQUESTED: 'USER_DELETE_REQUESTED',\n  USER_DELETE_SUCCEEDED: 'USER_DELETE_SUCCEEDED',\n  USER_DELETE_FAILED: 'USER_DELETE_FAILED',\n  USER_DELETE_RECEIVED: 'USER_DELETE_RECEIVED',\n\n  /* Projects */\n\n  PROJECTS_FETCH_REQUESTED: 'PROJECTS_FETCH_REQUESTED',\n  PROJECTS_FETCH_SUCCEEDED: 'PROJECTS_FETCH_SUCCEEDED',\n  PROJECTS_FETCH_FAILED: 'PROJECTS_FETCH_FAILED',\n\n  /* Project */\n\n  PROJECT_CREATE: 'PROJECT_CREATE',\n  PROJECT_UPDATE: 'PROJECT_UPDATE',\n  PROJECT_DELETE: 'PROJECT_DELETE',\n  PROJECT_CREATE_REQUESTED: 'PROJECT_CREATE_REQUESTED',\n  PROJECT_CREATE_SUCCEEDED: 'PROJECT_CREATE_SUCCEEDED',\n  PROJECT_CREATE_FAILED: 'PROJECT_CREATE_FAILED',\n  PROJECT_CREATE_RECEIVED: 'PROJECT_CREATE_RECEIVED',\n  PROJECT_UPDATE_REQUESTED: 'PROJECT_UPDATE_REQUESTED',\n  PROJECT_UPDATE_SUCCEEDED: 'PROJECT_UPDATE_SUCCEEDED',\n  PROJECT_UPDATE_FAILED: 'PROJECT_UPDATE_FAILED',\n  PROJECT_UPDATE_RECEIVED: 'PROJECT_UPDATE_RECEIVED',\n  PROJECT_DELETE_REQUESTED: 'PROJECT_DELETE_REQUESTED',\n  PROJECT_DELETE_SUCCEEDED: 'PROJECT_DELETE_SUCCEEDED',\n  PROJECT_DELETE_FAILED: 'PROJECT_DELETE_FAILED',\n  PROJECT_DELETE_RECEIVED: 'PROJECT_DELETE_RECEIVED',\n\n  /* Project membership */\n\n  PROJECT_MEMBERSHIP_CREATE: 'PROJECT_MEMBERSHIP_CREATE',\n  PROJECT_MEMBERSHIP_DELETE: 'PROJECT_MEMBERSHIP_DELETE',\n  PROJECT_MEMBERSHIP_CREATE_REQUESTED: 'PROJECT_MEMBERSHIP_CREATE_REQUESTED',\n  PROJECT_MEMBERSHIP_CREATE_SUCCEEDED: 'PROJECT_MEMBERSHIP_CREATE_SUCCEEDED',\n  PROJECT_MEMBERSHIP_CREATE_FAILED: 'PROJECT_MEMBERSHIP_CREATE_FAILED',\n  PROJECT_MEMBERSHIP_CREATE_RECEIVED: 'PROJECT_MEMBERSHIP_CREATE_RECEIVED',\n  PROJECT_MEMBERSHIP_DELETE_REQUESTED: 'PROJECT_MEMBERSHIP_DELETE_REQUESTED',\n  PROJECT_MEMBERSHIP_DELETE_SUCCEEDED: 'PROJECT_MEMBERSHIP_DELETE_SUCCEEDED',\n  PROJECT_MEMBERSHIP_DELETE_FAILED: 'PROJECT_MEMBERSHIP_DELETE_FAILED',\n  PROJECT_MEMBERSHIP_DELETE_RECEIVED: 'PROJECT_MEMBERSHIP_DELETE_RECEIVED',\n\n  /* Board */\n\n  BOARD_CREATE: 'BOARD_CREATE',\n  BOARD_UPDATE: 'BOARD_UPDATE',\n  BOARD_DELETE: 'BOARD_DELETE',\n  BOARD_CREATE_REQUESTED: 'BOARD_CREATE_REQUESTED',\n  BOARD_CREATE_SUCCEEDED: 'BOARD_CREATE_SUCCEEDED',\n  BOARD_CREATE_FAILED: 'BOARD_CREATE_FAILED',\n  BOARD_CREATE_RECEIVED: 'BOARD_CREATE_RECEIVED',\n  BOARD_FETCH_REQUESTED: 'BOARD_FETCH_REQUESTED',\n  BOARD_FETCH_SUCCEEDED: 'BOARD_FETCH_SUCCEEDED',\n  BOARD_FETCH_FAILED: 'BOARD_FETCH_FAILED',\n  BOARD_UPDATE_REQUESTED: 'BOARD_UPDATE_REQUESTED',\n  BOARD_UPDATE_SUCCEEDED: 'BOARD_UPDATE_SUCCEEDED',\n  BOARD_UPDATE_FAILED: 'BOARD_UPDATE_FAILED',\n  BOARD_UPDATE_RECEIVED: 'BOARD_UPDATE_RECEIVED',\n  BOARD_DELETE_REQUESTED: 'BOARD_DELETE_REQUESTED',\n  BOARD_DELETE_SUCCEEDED: 'BOARD_DELETE_SUCCEEDED',\n  BOARD_DELETE_FAILED: 'BOARD_DELETE_FAILED',\n  BOARD_DELETE_RECEIVED: 'BOARD_DELETE_RECEIVED',\n\n  /* List */\n\n  LIST_CREATE: 'LIST_CREATE',\n  LIST_UPDATE: 'LIST_UPDATE',\n  LIST_DELETE: 'LIST_DELETE',\n  LIST_CREATE_REQUESTED: 'LIST_CREATE_REQUESTED',\n  LIST_CREATE_SUCCEEDED: 'LIST_CREATE_SUCCEEDED',\n  LIST_CREATE_FAILED: 'LIST_CREATE_FAILED',\n  LIST_CREATE_RECEIVED: 'LIST_CREATE_RECEIVED',\n  LIST_UPDATE_REQUESTED: 'LIST_UPDATE_REQUESTED',\n  LIST_UPDATE_SUCCEEDED: 'LIST_UPDATE_SUCCEEDED',\n  LIST_UPDATE_FAILED: 'LIST_UPDATE_FAILED',\n  LIST_UPDATE_RECEIVED: 'LIST_UPDATE_RECEIVED',\n  LIST_DELETE_REQUESTED: 'LIST_DELETE_REQUESTED',\n  LIST_DELETE_SUCCEEDED: 'LIST_DELETE_SUCCEEDED',\n  LIST_DELETE_FAILED: 'LIST_DELETE_FAILED',\n  LIST_DELETE_RECEIVED: 'LIST_DELETE_RECEIVED',\n\n  /* Label */\n\n  LABEL_CREATE: 'LABEL_CREATE',\n  LABEL_UPDATE: 'LABEL_UPDATE',\n  LABEL_DELETE: 'LABEL_DELETE',\n  LABEL_TO_CARD_ADD: 'LABEL_TO_CARD_ADD',\n  LABEL_FROM_CARD_REMOVE: 'LABEL_FROM_CARD_REMOVE',\n  LABEL_TO_BOARD_FILTER_ADD: 'LABEL_TO_BOARD_FILTER_ADD',\n  LABEL_FROM_BOARD_FILTER_REMOVE: 'LABEL_FROM_BOARD_FILTER_REMOVE',\n  LABEL_CREATE_REQUESTED: 'LABEL_CREATE_REQUESTED',\n  LABEL_CREATE_SUCCEEDED: 'LABEL_CREATE_SUCCEEDED',\n  LABEL_CREATE_FAILED: 'LABEL_CREATE_FAILED',\n  LABEL_CREATE_RECEIVED: 'LABEL_CREATE_RECEIVED',\n  LABEL_UPDATE_REQUESTED: 'LABEL_UPDATE_REQUESTED',\n  LABEL_UPDATE_SUCCEEDED: 'LABEL_UPDATE_SUCCEEDED',\n  LABEL_UPDATE_FAILED: 'LABEL_UPDATE_FAILED',\n  LABEL_UPDATE_RECEIVED: 'LABEL_UPDATE_RECEIVED',\n  LABEL_DELETE_REQUESTED: 'LABEL_DELETE_REQUESTED',\n  LABEL_DELETE_SUCCEEDED: 'LABEL_DELETE_SUCCEEDED',\n  LABEL_DELETE_FAILED: 'LABEL_DELETE_FAILED',\n  LABEL_DELETE_RECEIVED: 'LABEL_DELETE_RECEIVED',\n\n  /* Card */\n\n  CARD_CREATE: 'CARD_CREATE',\n  CARD_UPDATE: 'CARD_UPDATE',\n  CARD_DELETE: 'CARD_DELETE',\n  CARD_CREATE_REQUESTED: 'CARD_CREATE_REQUESTED',\n  CARD_CREATE_SUCCEEDED: 'CARD_CREATE_SUCCEEDED',\n  CARD_CREATE_FAILED: 'CARD_CREATE_FAILED',\n  CARD_CREATE_RECEIVED: 'CARD_CREATE_RECEIVED',\n  CARD_FETCH_REQUESTED: 'CARD_FETCH_REQUESTED',\n  CARD_FETCH_SUCCEEDED: 'CARD_FETCH_SUCCEEDED',\n  CARD_FETCH_FAILED: 'CARD_FETCH_FAILED',\n  CARD_UPDATE_REQUESTED: 'CARD_UPDATE_REQUESTED',\n  CARD_UPDATE_SUCCEEDED: 'CARD_UPDATE_SUCCEEDED',\n  CARD_UPDATE_FAILED: 'CARD_UPDATE_FAILED',\n  CARD_UPDATE_RECEIVED: 'CARD_UPDATE_RECEIVED',\n  CARD_DELETE_REQUESTED: 'CARD_DELETE_REQUESTED',\n  CARD_DELETE_SUCCEEDED: 'CARD_DELETE_SUCCEEDED',\n  CARD_DELETE_FAILED: 'CARD_DELETE_FAILED',\n  CARD_DELETE_RECEIVED: 'CARD_DELETE_RECEIVED',\n\n  /* Card membership */\n\n  CARD_MEMBERSHIP_CREATE_REQUESTED: 'CARD_MEMBERSHIP_CREATE_REQUESTED',\n  CARD_MEMBERSHIP_CREATE_SUCCEEDED: 'CARD_MEMBERSHIP_CREATE_SUCCEEDED',\n  CARD_MEMBERSHIP_CREATE_FAILED: 'CARD_MEMBERSHIP_CREATE_FAILED',\n  CARD_MEMBERSHIP_CREATE_RECEIVED: 'CARD_MEMBERSHIP_CREATE_RECEIVED',\n  CARD_MEMBERSHIP_DELETE_REQUESTED: 'CARD_MEMBERSHIP_DELETE_REQUESTED',\n  CARD_MEMBERSHIP_DELETE_SUCCEEDED: 'CARD_MEMBERSHIP_DELETE_SUCCEEDED',\n  CARD_MEMBERSHIP_DELETE_FAILED: 'CARD_MEMBERSHIP_DELETE_FAILED',\n  CARD_MEMBERSHIP_DELETE_RECEIVED: 'CARD_MEMBERSHIP_DELETE_RECEIVED',\n\n  /* Card label */\n\n  CARD_LABEL_CREATE_REQUESTED: 'CARD_LABEL_CREATE_REQUESTED',\n  CARD_LABEL_CREATE_SUCCEEDED: 'CARD_LABEL_CREATE_SUCCEEDED',\n  CARD_LABEL_CREATE_FAILED: 'CARD_LABEL_CREATE_FAILED',\n  CARD_LABEL_CREATE_RECEIVED: 'CARD_LABEL_CREATE_RECEIVED',\n  CARD_LABEL_DELETE_REQUESTED: 'CARD_LABEL_DELETE_REQUESTED',\n  CARD_LABEL_DELETE_SUCCEEDED: 'CARD_LABEL_DELETE_SUCCEEDED',\n  CARD_LABEL_DELETE_FAILED: 'CARD_LABEL_DELETE_FAILED',\n  CARD_LABEL_DELETE_RECEIVED: 'CARD_LABEL_DELETE_RECEIVED',\n\n  /* Task */\n\n  TASK_CREATE: 'TASK_CREATE',\n  TASK_UPDATE: 'TASK_UPDATE',\n  TASK_DELETE: 'TASK_DELETE',\n  TASK_CREATE_REQUESTED: 'TASK_CREATE_REQUESTED',\n  TASK_CREATE_SUCCEEDED: 'TASK_CREATE_SUCCEEDED',\n  TASK_CREATE_FAILED: 'TASK_CREATE_FAILED',\n  TASK_CREATE_RECEIVED: 'TASK_CREATE_RECEIVED',\n  TASK_UPDATE_REQUESTED: 'TASK_UPDATE_REQUESTED',\n  TASK_UPDATE_SUCCEEDED: 'TASK_UPDATE_SUCCEEDED',\n  TASK_UPDATE_FAILED: 'TASK_UPDATE_FAILED',\n  TASK_UPDATE_RECEIVED: 'TASK_UPDATE_RECEIVED',\n  TASK_DELETE_REQUESTED: 'TASK_DELETE_REQUESTED',\n  TASK_DELETE_SUCCEEDED: 'TASK_DELETE_SUCCEEDED',\n  TASK_DELETE_FAILED: 'TASK_DELETE_FAILED',\n  TASK_DELETE_RECEIVED: 'TASK_DELETE_RECEIVED',\n\n  /* Actions */\n\n  ACTIONS_FETCH_REQUESTED: 'ACTIONS_FETCH_REQUESTED',\n  ACTIONS_FETCH_SUCCEEDED: 'ACTIONS_FETCH_SUCCEEDED',\n  ACTIONS_FETCH_FAILED: 'ACTIONS_FETCH_FAILED',\n\n  /* Action */\n\n  ACTION_CREATE_RECEIVED: 'ACTION_CREATE_RECEIVED',\n  ACTION_UPDATE_RECEIVED: 'ACTION_UPDATE_RECEIVED',\n  ACTION_DELETE_RECEIVED: 'ACTION_DELETE_RECEIVED',\n\n  /* Comment action */\n\n  COMMENT_ACTION_CREATE: 'COMMENT_ACTION_CREATE',\n  COMMENT_ACTION_UPDATE: 'COMMENT_ACTION_UPDATE',\n  COMMENT_ACTION_DELETE: 'COMMENT_ACTION_DELETE',\n  COMMENT_ACTION_CREATE_REQUESTED: 'COMMENT_ACTION_CREATE_REQUESTED',\n  COMMENT_ACTION_CREATE_SUCCEEDED: 'COMMENT_ACTION_CREATE_SUCCEEDED',\n  COMMENT_ACTION_CREATE_FAILED: 'COMMENT_ACTION_CREATE_FAILED',\n  COMMENT_ACTION_UPDATE_REQUESTED: 'COMMENT_ACTION_UPDATE_REQUESTED',\n  COMMENT_ACTION_UPDATE_SUCCEEDED: 'COMMENT_ACTION_UPDATE_SUCCEEDED',\n  COMMENT_ACTION_UPDATE_FAILED: 'COMMENT_ACTION_UPDATE_FAILED',\n  COMMENT_ACTION_DELETE_REQUESTED: 'COMMENT_ACTION_DELETE_REQUESTED',\n  COMMENT_ACTION_DELETE_SUCCEEDED: 'COMMENT_ACTION_DELETE_SUCCEEDED',\n  COMMENT_ACTION_DELETE_FAILED: 'COMMENT_ACTION_DELETE_FAILED',\n\n  /* Notifications */\n\n  NOTIFICATIONS_DELETE: 'NOTIFICATIONS_DELETE',\n  NOTIFICATIONS_FETCH_REQUESTED: 'NOTIFICATIONS_FETCH_REQUESTED',\n  NOTIFICATIONS_FETCH_SUCCEEDED: 'NOTIFICATIONS_FETCH_SUCCEEDED',\n  NOTIFICATIONS_FETCH_FAILED: 'NOTIFICATIONS_FETCH_FAILED',\n  NOTIFICATIONS_DELETE_REQUESTED: 'NOTIFICATIONS_DELETE_REQUESTED',\n  NOTIFICATIONS_DELETE_SUCCEEDED: 'NOTIFICATIONS_DELETE_SUCCEEDED',\n  NOTIFICATIONS_DELETE_FAILED: 'NOTIFICATIONS_DELETE_FAILED',\n\n  /* Notification */\n\n  NOTIFICATION_CREATE_RECEIVED: 'NOTIFICATION_CREATE_RECEIVED',\n  NOTIFICATION_DELETE_RECEIVED: 'NOTIFICATION_DELETE_RECEIVED',\n};\n","import ActionTypes from '../constants/ActionTypes';\n\nconst initialState = {\n  status: null,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SOCKET_STATUS_CHANGED:\n      return {\n        ...state,\n        status: payload.status,\n      };\n    default:\n      return state;\n  }\n};\n","import { Model, attr } from 'redux-orm';\n\nimport ActionTypes from '../constants/ActionTypes';\n\nexport default class extends Model {\n  static modelName = 'User';\n\n  static fields = {\n    id: attr(),\n    email: attr(),\n    name: attr(),\n    avatar: attr(),\n    deletedAt: attr(),\n    isAdmin: attr({\n      getDefault: () => false,\n    }),\n    isAvatarUploading: attr({\n      getDefault: () => false,\n    }),\n  };\n\n  static reducer({ type, payload }, User) {\n    switch (type) {\n      case ActionTypes.USER_CREATE_SUCCEEDED:\n      case ActionTypes.USER_CREATE_RECEIVED:\n      case ActionTypes.CURRENT_USER_FETCH_SUCCEEDED:\n      case ActionTypes.PROJECT_MEMBERSHIP_CREATE_RECEIVED:\n      case ActionTypes.NOTIFICATION_CREATE_RECEIVED:\n        User.upsert(payload.user);\n\n        break;\n      case ActionTypes.USERS_FETCH_SUCCEEDED:\n      case ActionTypes.PROJECTS_FETCH_SUCCEEDED:\n      case ActionTypes.PROJECT_CREATE_SUCCEEDED:\n      case ActionTypes.PROJECT_CREATE_RECEIVED:\n      case ActionTypes.ACTIONS_FETCH_SUCCEEDED:\n      case ActionTypes.NOTIFICATIONS_FETCH_SUCCEEDED:\n        payload.users.forEach((user) => {\n          User.upsert(user);\n        });\n\n        break;\n      case ActionTypes.USER_UPDATE:\n        User.withId(payload.id).update(payload.data);\n\n        break;\n      case ActionTypes.USER_DELETE:\n        User.withId(payload.id).deleteWithRelated();\n\n        break;\n      case ActionTypes.USER_UPDATE_RECEIVED:\n        User.withId(payload.user.id).update(payload.user);\n\n        break;\n      case ActionTypes.USER_AVATAR_UPLOAD_REQUESTED:\n        User.withId(payload.id).update({\n          isAvatarUploading: true,\n        });\n\n        break;\n      case ActionTypes.USER_AVATAR_UPLOAD_SUCCEEDED:\n        User.withId(payload.user.id).update({\n          ...payload.user,\n          isAvatarUploading: false,\n        });\n\n        break;\n      case ActionTypes.USER_AVATAR_UPLOAD_FAILED:\n        User.withId(payload.id).update({\n          isAvatarUploading: false,\n        });\n\n        break;\n      case ActionTypes.USER_DELETE_SUCCEEDED:\n      case ActionTypes.USER_DELETE_RECEIVED:\n        User.withId(payload.user.id).deleteWithRelated(payload.user);\n\n        break;\n      default:\n    }\n  }\n\n  static getOrderedUndeletedQuerySet() {\n    return this.filter({\n      deletedAt: null,\n    }).orderBy('id');\n  }\n\n  getOrderedProjectMembershipsQuerySet() {\n    return this.projectMemberships.orderBy('id');\n  }\n\n  getOrderedUnreadNotificationsQuerySet() {\n    return this.notifications\n      .filter({\n        isRead: false,\n      })\n      .orderBy('id', 'desc');\n  }\n\n  deleteWithRelated(user) {\n    this.projectMemberships.toModelArray().forEach((projectMembershipModel) => {\n      projectMembershipModel.deleteWithRelated();\n    });\n\n    this.update(\n      user || {\n        deletedAt: new Date(),\n      },\n    );\n  }\n}\n","import { Model, attr, many } from 'redux-orm';\n\nimport ActionTypes from '../constants/ActionTypes';\n\nexport default class extends Model {\n  static modelName = 'Project';\n\n  static fields = {\n    id: attr(),\n    name: attr(),\n    users: many({\n      to: 'User',\n      through: 'ProjectMembership',\n      relatedName: 'projects',\n    }),\n  };\n\n  static reducer({ type, payload }, Project) {\n    switch (type) {\n      case ActionTypes.PROJECTS_FETCH_SUCCEEDED:\n        payload.projects.forEach((project) => {\n          Project.upsert(project);\n        });\n\n        break;\n      case ActionTypes.PROJECT_CREATE:\n        Project.upsert(payload.data);\n\n        break;\n      case ActionTypes.PROJECT_UPDATE:\n        Project.withId(payload.id).update(payload.data);\n\n        break;\n      case ActionTypes.PROJECT_DELETE:\n        Project.withId(payload.id).deleteWithRelated();\n\n        break;\n      case ActionTypes.PROJECT_CREATE_SUCCEEDED:\n      case ActionTypes.PROJECT_CREATE_RECEIVED:\n        Project.upsert(payload.project);\n\n        break;\n      case ActionTypes.PROJECT_UPDATE_RECEIVED:\n        Project.withId(payload.project.id).update(payload.project);\n\n        break;\n      case ActionTypes.PROJECT_DELETE_RECEIVED:\n        Project.withId(payload.project.id).deleteWithRelated();\n\n        break;\n      default:\n    }\n  }\n\n  getOrderedMembershipsQuerySet() {\n    return this.memberships.orderBy('id');\n  }\n\n  getOrderedBoardsQuerySet() {\n    return this.boards.orderBy('position');\n  }\n\n  deleteWithRelated() {\n    this.boards.toModelArray().forEach((boardModel) => {\n      boardModel.deleteWithRelated();\n    });\n\n    this.delete();\n  }\n}\n","import { Model, attr, fk } from 'redux-orm';\n\nimport ActionTypes from '../constants/ActionTypes';\n\nexport default class extends Model {\n  static modelName = 'ProjectMembership';\n\n  static fields = {\n    id: attr(),\n    projectId: fk({\n      to: 'Project',\n      as: 'project',\n      relatedName: 'memberships',\n    }),\n    userId: fk({\n      to: 'User',\n      as: 'user',\n      relatedName: 'projectMemberships',\n    }),\n  };\n\n  static reducer({ type, payload }, ProjectMembership) {\n    switch (type) {\n      case ActionTypes.PROJECTS_FETCH_SUCCEEDED:\n      case ActionTypes.PROJECT_CREATE_SUCCEEDED:\n      case ActionTypes.PROJECT_CREATE_RECEIVED:\n        payload.projectMemberships.forEach((projectMembership) => {\n          ProjectMembership.upsert(projectMembership);\n        });\n\n        break;\n      case ActionTypes.PROJECT_CREATE:\n      case ActionTypes.PROJECT_MEMBERSHIP_CREATE:\n      case ActionTypes.PROJECT_MEMBERSHIP_CREATE_RECEIVED:\n        ProjectMembership.upsert(payload.projectMembership);\n\n        break;\n      case ActionTypes.PROJECT_MEMBERSHIP_CREATE_SUCCEEDED:\n        ProjectMembership.withId(payload.localId).delete();\n        ProjectMembership.upsert(payload.projectMembership);\n\n        break;\n      case ActionTypes.PROJECT_MEMBERSHIP_DELETE:\n        ProjectMembership.withId(payload.id).deleteWithRelated();\n\n        break;\n      case ActionTypes.PROJECT_MEMBERSHIP_DELETE_RECEIVED:\n        ProjectMembership.withId(payload.projectMembership.id).deleteWithRelated();\n\n        break;\n      default:\n    }\n  }\n\n  deleteWithRelated() {\n    this.project.boards.toModelArray().forEach((boardModel) => {\n      boardModel.cards.toModelArray().forEach((cardModel) => {\n        try {\n          cardModel.users.remove(this.userId);\n        } catch {} // eslint-disable-line no-empty\n      });\n\n      try {\n        boardModel.filterUsers.remove(this.userId);\n      } catch {} // eslint-disable-line no-empty\n    });\n\n    this.delete();\n  }\n}\n","import {\n  Model, attr, fk, many,\n} from 'redux-orm';\n\nimport ActionTypes from '../constants/ActionTypes';\n\nexport default class extends Model {\n  static modelName = 'Board';\n\n  static fields = {\n    id: attr(),\n    position: attr(),\n    name: attr(),\n    isFetching: attr({\n      getDefault: () => false, // null,\n    }),\n    projectId: fk({\n      to: 'Project',\n      as: 'project',\n      relatedName: 'boards',\n    }),\n    filterUsers: many('User', 'filterBoards'),\n    filterLabels: many('Label', 'filterBoards'),\n  };\n\n  static reducer({ type, payload }, Board) {\n    switch (type) {\n      case ActionTypes.USER_TO_BOARD_FILTER_ADD:\n        Board.withId(payload.boardId).filterUsers.add(payload.id);\n\n        break;\n      case ActionTypes.USER_FROM_BOARD_FILTER_REMOVE:\n        Board.withId(payload.boardId).filterUsers.remove(payload.id);\n\n        break;\n      case ActionTypes.PROJECTS_FETCH_SUCCEEDED:\n      case ActionTypes.PROJECT_CREATE_SUCCEEDED:\n      case ActionTypes.PROJECT_CREATE_RECEIVED:\n        payload.boards.forEach((board) => {\n          Board.upsert(board);\n        });\n\n        break;\n      case ActionTypes.BOARD_CREATE:\n      case ActionTypes.BOARD_CREATE_RECEIVED:\n        Board.upsert(payload.board);\n\n        break;\n      case ActionTypes.BOARD_UPDATE:\n        Board.withId(payload.id).update(payload.data);\n\n        break;\n      case ActionTypes.BOARD_DELETE:\n        Board.withId(payload.id).deleteWithRelated();\n\n        break;\n      case ActionTypes.BOARD_CREATE_SUCCEEDED:\n        Board.withId(payload.localId).delete();\n        Board.upsert({\n          ...payload.board,\n          isFetching: false,\n        });\n\n        break;\n      case ActionTypes.BOARD_FETCH_REQUESTED:\n        Board.withId(payload.id).update({\n          isFetching: true,\n        });\n\n        break;\n      case ActionTypes.BOARD_FETCH_SUCCEEDED:\n        Board.withId(payload.board.id).update({\n          ...payload.board,\n          isFetching: false,\n        });\n\n        break;\n      case ActionTypes.BOARD_UPDATE_RECEIVED:\n        Board.withId(payload.board.id).update(payload.board);\n\n        break;\n      case ActionTypes.BOARD_DELETE_RECEIVED:\n        Board.withId(payload.board.id).deleteWithRelated();\n\n        break;\n      case ActionTypes.LABEL_TO_BOARD_FILTER_ADD:\n        Board.withId(payload.boardId).filterLabels.add(payload.id);\n\n        break;\n      case ActionTypes.LABEL_FROM_BOARD_FILTER_REMOVE:\n        Board.withId(payload.boardId).filterLabels.remove(payload.id);\n\n        break;\n      default:\n    }\n  }\n\n  getOrderedListsQuerySet() {\n    return this.lists.orderBy('position');\n  }\n\n  deleteWithRelated() {\n    this.cards.toModelArray().forEach((cardModel) => {\n      cardModel.deleteWithRelated();\n    });\n\n    this.delete();\n  }\n}\n","import { Model, attr, fk } from 'redux-orm';\n\nimport ActionTypes from '../constants/ActionTypes';\n\nexport default class extends Model {\n  static modelName = 'List';\n\n  static fields = {\n    id: attr(),\n    position: attr(),\n    name: attr(),\n    boardId: fk({\n      to: 'Board',\n      as: 'board',\n      relatedName: 'lists',\n    }),\n  };\n\n  static reducer({ type, payload }, List) {\n    switch (type) {\n      case ActionTypes.BOARD_CREATE_SUCCEEDED:\n      case ActionTypes.BOARD_CREATE_RECEIVED:\n      case ActionTypes.BOARD_FETCH_SUCCEEDED:\n        payload.lists.forEach((list) => {\n          List.upsert(list);\n        });\n\n        break;\n      case ActionTypes.LIST_CREATE:\n      case ActionTypes.LIST_CREATE_RECEIVED:\n        List.upsert(payload.list);\n\n        break;\n      case ActionTypes.LIST_UPDATE:\n        List.withId(payload.id).update(payload.data);\n\n        break;\n      case ActionTypes.LIST_DELETE:\n        List.withId(payload.id).deleteWithRelated();\n\n        break;\n      case ActionTypes.LIST_CREATE_SUCCEEDED:\n        List.withId(payload.localId).delete();\n        List.upsert(payload.list);\n\n        break;\n      case ActionTypes.LIST_UPDATE_RECEIVED:\n        List.withId(payload.list.id).update(payload.list);\n\n        break;\n      case ActionTypes.LIST_DELETE_RECEIVED:\n        List.withId(payload.list.id).deleteWithRelated();\n\n        break;\n      default:\n    }\n  }\n\n  getOrderedCardsQuerySet() {\n    return this.cards.orderBy('position');\n  }\n\n  getOrderedFilteredCardsModelArray() {\n    let cardModels = this.getOrderedCardsQuerySet().toModelArray();\n\n    const filterUserIds = this.board.filterUsers.toRefArray().map((user) => user.id);\n    const filterLabelIds = this.board.filterLabels.toRefArray().map((label) => label.id);\n\n    if (filterUserIds.length > 0) {\n      cardModels = cardModels.filter((cardModel) => {\n        const users = cardModel.users.toRefArray();\n\n        return users.some((user) => filterUserIds.includes(user.id));\n      });\n    }\n\n    if (filterLabelIds.length > 0) {\n      cardModels = cardModels.filter((cardModel) => {\n        const labels = cardModel.labels.toRefArray();\n\n        return labels.some((label) => filterLabelIds.includes(label.id));\n      });\n    }\n\n    return cardModels;\n  }\n\n  deleteWithRelated() {\n    this.cards.toModelArray().forEach((cardModel) => {\n      cardModel.deleteWithRelated();\n    });\n\n    this.delete();\n  }\n}\n","import { Model, attr, fk } from 'redux-orm';\n\nimport ActionTypes from '../constants/ActionTypes';\n\nexport default class extends Model {\n  static modelName = 'Label';\n\n  static fields = {\n    id: attr(),\n    name: attr(),\n    color: attr(),\n    boardId: fk({\n      to: 'Board',\n      as: 'board',\n      relatedName: 'labels',\n    }),\n  };\n\n  static reducer({ type, payload }, Label) {\n    switch (type) {\n      case ActionTypes.BOARD_CREATE_SUCCEEDED:\n      case ActionTypes.BOARD_CREATE_RECEIVED:\n      case ActionTypes.BOARD_FETCH_SUCCEEDED:\n        payload.labels.forEach((label) => {\n          Label.upsert(label);\n        });\n\n        break;\n      case ActionTypes.LABEL_CREATE:\n      case ActionTypes.LABEL_CREATE_RECEIVED:\n        Label.upsert(payload.label);\n\n        break;\n      case ActionTypes.LABEL_UPDATE:\n        Label.withId(payload.id).update(payload.data);\n\n        break;\n      case ActionTypes.LABEL_DELETE:\n        Label.withId(payload.id).delete();\n\n        break;\n      case ActionTypes.LABEL_CREATE_SUCCEEDED:\n        Label.withId(payload.localId).delete();\n        Label.upsert(payload.label);\n\n        break;\n      case ActionTypes.LABEL_UPDATE_RECEIVED:\n        Label.withId(payload.label.id).update(payload.label);\n\n        break;\n      case ActionTypes.LABEL_DELETE_RECEIVED:\n        Label.withId(payload.label.id).delete();\n\n        break;\n      default:\n    }\n  }\n}\n","const API_URL = 'http://localhost:1337';\nconst API_PATH = '';\n\nconst POSITION_GAP = 65535;\n\nconst ACTIONS_LIMIT = 10;\n\nexport default {\n  API_URL,\n  API_PATH,\n  POSITION_GAP,\n  ACTIONS_LIMIT,\n};\n","import {\n  Model, attr, fk, many,\n} from 'redux-orm';\n\nimport ActionTypes from '../constants/ActionTypes';\nimport Config from '../constants/Config';\n\nexport default class extends Model {\n  static modelName = 'Card';\n\n  static fields = {\n    id: attr(),\n    position: attr(),\n    name: attr(),\n    description: attr(),\n    deadline: attr(),\n    timer: attr(),\n    isSubscribed: attr({\n      getDefault: () => false,\n    }),\n    isActionsFetching: attr({\n      getDefault: () => false,\n    }),\n    isAllActionsFetched: attr({\n      getDefault: () => false,\n    }),\n    listId: fk({\n      to: 'List',\n      as: 'list',\n      relatedName: 'cards',\n    }),\n    boardId: fk({\n      to: 'Board',\n      as: 'board',\n      relatedName: 'cards',\n    }),\n    users: many('User', 'cards'),\n    labels: many('Label', 'cards'),\n  };\n\n  static reducer({ type, payload }, Card) {\n    switch (type) {\n      case ActionTypes.USER_TO_CARD_ADD: {\n        const cardModel = Card.withId(payload.cardId);\n        cardModel.users.add(payload.id);\n\n        if (payload.isCurrent) {\n          cardModel.isSubscribed = true;\n        }\n\n        break;\n      }\n      case ActionTypes.USER_FROM_CARD_REMOVE:\n        Card.withId(payload.cardId).users.remove(payload.id);\n\n        break;\n      case ActionTypes.BOARD_FETCH_SUCCEEDED:\n        payload.cards.forEach((card) => {\n          Card.upsert(card);\n        });\n\n        payload.cardMemberships.forEach(({ cardId, userId }) => {\n          Card.withId(cardId).users.add(userId);\n        });\n\n        payload.cardLabels.forEach(({ cardId, labelId }) => {\n          Card.withId(cardId).labels.add(labelId);\n        });\n\n        break;\n      case ActionTypes.LABEL_TO_CARD_ADD:\n        Card.withId(payload.cardId).labels.add(payload.id);\n\n        break;\n      case ActionTypes.LABEL_FROM_CARD_REMOVE:\n        Card.withId(payload.cardId).labels.remove(payload.id);\n\n        break;\n      case ActionTypes.CARD_CREATE:\n      case ActionTypes.CARD_CREATE_RECEIVED:\n      case ActionTypes.CARD_FETCH_SUCCEEDED:\n      case ActionTypes.NOTIFICATION_CREATE_RECEIVED:\n        Card.upsert(payload.card);\n\n        break;\n      case ActionTypes.CARD_UPDATE:\n        Card.withId(payload.id).update(payload.data);\n\n        break;\n      case ActionTypes.CARD_DELETE:\n        Card.withId(payload.id).deleteWithRelated();\n\n        break;\n      case ActionTypes.CARD_CREATE_SUCCEEDED:\n        Card.withId(payload.localId).delete();\n        Card.upsert(payload.card);\n\n        break;\n      case ActionTypes.CARD_UPDATE_RECEIVED:\n        Card.withId(payload.card.id).update(payload.card);\n\n        break;\n      case ActionTypes.CARD_DELETE_RECEIVED:\n        Card.withId(payload.card.id).deleteWithRelated();\n\n        break;\n      case ActionTypes.CARD_MEMBERSHIP_CREATE_RECEIVED:\n        Card.withId(payload.cardMembership.cardId).users.add(payload.cardMembership.userId);\n\n        break;\n      case ActionTypes.CARD_MEMBERSHIP_DELETE_RECEIVED:\n        Card.withId(payload.cardMembership.cardId).users.remove(payload.cardMembership.userId);\n\n        break;\n      case ActionTypes.CARD_LABEL_CREATE_RECEIVED:\n        Card.withId(payload.cardLabel.cardId).labels.add(payload.cardLabel.labelId);\n\n        break;\n      case ActionTypes.CARD_LABEL_DELETE_RECEIVED:\n        Card.withId(payload.cardLabel.cardId).labels.remove(payload.cardLabel.labelId);\n\n        break;\n      case ActionTypes.ACTIONS_FETCH_REQUESTED:\n        Card.withId(payload.cardId).update({\n          isActionsFetching: true,\n        });\n\n        break;\n      case ActionTypes.ACTIONS_FETCH_SUCCEEDED:\n        Card.withId(payload.cardId).update({\n          isActionsFetching: false,\n          isAllActionsFetched: payload.actions.length < Config.ACTIONS_LIMIT,\n        });\n\n        break;\n      case ActionTypes.NOTIFICATIONS_FETCH_SUCCEEDED:\n        payload.cards.forEach((card) => {\n          Card.upsert(card);\n        });\n\n        break;\n      default:\n    }\n  }\n\n  getOrderedTasksQuerySet() {\n    return this.tasks.orderBy('id');\n  }\n\n  getOrderedInCardActionsQuerySet() {\n    return this.actions.orderBy('id', 'desc');\n  }\n\n  getUnreadNotificationsQuerySet() {\n    return this.notifications.filter({\n      isRead: false,\n    });\n  }\n\n  deleteWithRelated() {\n    this.tasks.delete();\n    this.actions.delete();\n\n    this.delete();\n  }\n}\n","import { Model, attr, fk } from 'redux-orm';\n\nimport ActionTypes from '../constants/ActionTypes';\n\nexport default class extends Model {\n  static modelName = 'Task';\n\n  static fields = {\n    id: attr(),\n    name: attr(),\n    isCompleted: attr({\n      getDefault: () => false,\n    }),\n    cardId: fk({\n      to: 'Card',\n      as: 'card',\n      relatedName: 'tasks',\n    }),\n  };\n\n  static reducer({ type, payload }, Task) {\n    switch (type) {\n      case ActionTypes.BOARD_FETCH_SUCCEEDED:\n        payload.tasks.forEach((task) => {\n          Task.upsert(task);\n        });\n\n        break;\n      case ActionTypes.TASK_CREATE:\n      case ActionTypes.TASK_CREATE_RECEIVED:\n        Task.upsert(payload.task);\n\n        break;\n      case ActionTypes.TASK_UPDATE:\n        Task.withId(payload.id).update(payload.data);\n\n        break;\n      case ActionTypes.TASK_DELETE:\n        Task.withId(payload.id).delete();\n\n        break;\n      case ActionTypes.TASK_CREATE_SUCCEEDED:\n        Task.withId(payload.localId).delete();\n        Task.upsert(payload.task);\n\n        break;\n      case ActionTypes.TASK_UPDATE_RECEIVED:\n        Task.withId(payload.task.id).update(payload.task);\n\n        break;\n      case ActionTypes.TASK_DELETE_RECEIVED:\n        Task.withId(payload.task.id).delete();\n\n        break;\n      default:\n    }\n  }\n}\n","import { Model, attr, fk } from 'redux-orm';\n\nimport ActionTypes from '../constants/ActionTypes';\n\nexport default class extends Model {\n  static modelName = 'Action';\n\n  static fields = {\n    id: attr(),\n    type: attr(),\n    data: attr(),\n    createdAt: attr({\n      getDefault: () => new Date(),\n    }),\n    isInCard: attr({\n      getDefault: () => true,\n    }),\n    cardId: fk({\n      to: 'Card',\n      as: 'card',\n      relatedName: 'actions',\n    }),\n    userId: fk({\n      to: 'User',\n      as: 'user',\n      relatedName: 'actions',\n    }),\n  };\n\n  static reducer({ type, payload }, Action) {\n    switch (type) {\n      case ActionTypes.ACTIONS_FETCH_SUCCEEDED:\n        payload.actions.forEach((action) => {\n          Action.upsert(action);\n        });\n\n        break;\n      case ActionTypes.ACTION_CREATE_RECEIVED:\n      case ActionTypes.COMMENT_ACTION_CREATE:\n        Action.upsert(payload.action);\n\n        break;\n      case ActionTypes.ACTION_UPDATE_RECEIVED:\n        Action.withId(payload.action.id).update(payload.action);\n\n        break;\n      case ActionTypes.ACTION_DELETE_RECEIVED:\n        Action.withId(payload.action.id).delete();\n\n        break;\n      case ActionTypes.COMMENT_ACTION_UPDATE:\n        Action.withId(payload.id).update({\n          data: payload.data,\n        });\n\n        break;\n      case ActionTypes.COMMENT_ACTION_DELETE:\n        Action.withId(payload.id).delete();\n\n        break;\n      case ActionTypes.COMMENT_ACTION_CREATE_SUCCEEDED:\n        Action.withId(payload.localId).delete();\n        Action.upsert(payload.action);\n\n        break;\n      case ActionTypes.NOTIFICATIONS_FETCH_SUCCEEDED:\n        payload.actions.forEach((action) => {\n          Action.upsert({\n            ...action,\n            isInCard: false,\n          });\n        });\n\n        break;\n      case ActionTypes.NOTIFICATION_CREATE_RECEIVED: {\n        const actionModel = Action.withId(payload.action.id);\n\n        Action.upsert({\n          ...payload.action,\n          isInCard: actionModel ? actionModel.isInCard : false,\n        });\n\n        break;\n      }\n      default:\n    }\n  }\n}\n","import { Model, attr, fk } from 'redux-orm';\n\nimport ActionTypes from '../constants/ActionTypes';\n\nexport default class extends Model {\n  static modelName = 'Notification';\n\n  static fields = {\n    id: attr(),\n    type: attr(),\n    data: attr(),\n    isRead: attr(),\n    userId: fk({\n      to: 'User',\n      as: 'user',\n      relatedName: 'notifications',\n    }),\n    actionId: fk({\n      to: 'Action',\n      as: 'action',\n      relatedName: 'notifications',\n    }),\n    cardId: fk({\n      to: 'Card',\n      as: 'card',\n      relatedName: 'notifications',\n    }),\n  };\n\n  static reducer({ type, payload }, Notification) {\n    switch (type) {\n      case ActionTypes.NOTIFICATIONS_DELETE:\n        payload.ids.forEach((id) => {\n          Notification.withId(id).delete();\n        });\n\n        break;\n      case ActionTypes.NOTIFICATIONS_FETCH_SUCCEEDED:\n        payload.notifications.forEach((notification) => {\n          Notification.upsert(notification);\n        });\n\n        break;\n      case ActionTypes.NOTIFICATION_CREATE_RECEIVED:\n        Notification.upsert(payload.notification);\n\n        break;\n      case ActionTypes.NOTIFICATION_DELETE_RECEIVED: {\n        const notificationModel = Notification.withId(payload.notification.id);\n\n        if (notificationModel) {\n          notificationModel.delete();\n        }\n\n        break;\n      }\n      default:\n    }\n  }\n}\n","import { ORM } from 'redux-orm';\n\nimport {\n  Action,\n  Board,\n  Card,\n  Label,\n  List,\n  Notification,\n  Project,\n  ProjectMembership,\n  Task,\n  User,\n} from './models';\n\nconst orm = new ORM();\n\norm.register(\n  User,\n  Project,\n  ProjectMembership,\n  Board,\n  List,\n  Label,\n  Card,\n  Task,\n  Action,\n  Notification,\n);\n\nexport default orm;\n","import { createReducer } from 'redux-orm';\n\nimport orm from '../orm';\n\nexport default createReducer(orm);\n","import { getAccessToken } from '../utils/access-token-storage';\nimport ActionTypes from '../constants/ActionTypes';\n\nconst initialState = {\n  accessToken: getAccessToken(),\n  userId: null,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.AUTHENTICATE_SUCCEEDED:\n      return {\n        ...state,\n        accessToken: payload.accessToken,\n      };\n    case ActionTypes.CURRENT_USER_FETCH_SUCCEEDED:\n      return {\n        ...state,\n        userId: payload.user.id,\n      };\n    default:\n      return state;\n  }\n};\n","const ACCESS_TOKEN_KEY = 'accessToken';\n\nexport const getAccessToken = () => localStorage.getItem(ACCESS_TOKEN_KEY);\n\nexport const setAccessToken = (accessToken) => {\n  localStorage.setItem(ACCESS_TOKEN_KEY, accessToken);\n};\n\nexport const removeAccessToken = () => {\n  localStorage.removeItem(ACCESS_TOKEN_KEY);\n};\n","import ActionTypes from '../constants/ActionTypes';\n\nconst initialState = {\n  data: {\n    email: '',\n    password: '',\n  },\n  isSubmitting: false,\n  error: null,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.AUTHENTICATE:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...payload.data,\n        },\n      };\n    case ActionTypes.AUTHENTICATION_ERROR_CLEAR:\n      return {\n        ...state,\n        error: null,\n      };\n    case ActionTypes.AUTHENTICATE_REQUESTED:\n      return {\n        ...state,\n        isSubmitting: true,\n      };\n    case ActionTypes.AUTHENTICATE_SUCCEEDED:\n      return initialState;\n    case ActionTypes.AUTHENTICATE_FAILED:\n      return {\n        ...state,\n        isSubmitting: false,\n        error: payload.error,\n      };\n    default:\n      return state;\n  }\n};\n","import { LOCATION_CHANGE } from 'connected-react-router';\n\nimport ActionTypes from '../constants/ActionTypes';\n\nconst initialState = {\n  isInitializing: true,\n  currentModal: null,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOCATION_CHANGE:\n    case ActionTypes.MODAL_CLOSE:\n      return {\n        ...state,\n        currentModal: null,\n      };\n    case ActionTypes.APP_INITIALIZED:\n      return {\n        ...state,\n        isInitializing: false,\n      };\n    case ActionTypes.MODAL_OPEN:\n      return {\n        ...state,\n        currentModal: payload.type,\n      };\n    default:\n      return state;\n  }\n};\n","import ActionTypes from '../constants/ActionTypes';\n\nconst initialState = {\n  data: {\n    email: '',\n    name: '',\n  },\n  isSubmitting: false,\n  error: null,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.USER_CREATE:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...payload.data,\n        },\n      };\n    case ActionTypes.USER_CREATION_ERROR_CLEAR:\n      return {\n        ...state,\n        error: null,\n      };\n    case ActionTypes.USER_CREATE_REQUESTED:\n      return {\n        ...state,\n        isSubmitting: true,\n      };\n    case ActionTypes.USER_CREATE_SUCCEEDED:\n      return initialState;\n    case ActionTypes.USER_CREATE_FAILED:\n      return {\n        ...state,\n        isSubmitting: false,\n        error: payload.error,\n      };\n    default:\n      return state;\n  }\n};\n","import ActionTypes from '../constants/ActionTypes';\n\nconst initialState = {\n  data: {\n    name: '',\n  },\n  isSubmitting: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.PROJECT_CREATE:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...payload.data,\n        },\n      };\n    case ActionTypes.PROJECT_CREATE_REQUESTED:\n      return {\n        ...state,\n        isSubmitting: true,\n      };\n    case ActionTypes.PROJECT_CREATE_SUCCEEDED:\n      return initialState;\n    case ActionTypes.PROJECT_CREATE_FAILED:\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport router from './router';\nimport socket from './socket';\nimport db from './db';\nimport auth from './auth';\nimport login from './login';\nimport app from './app';\nimport user from './user';\nimport project from './project';\n\nexport default combineReducers({\n  router,\n  socket,\n  db,\n  auth,\n  login,\n  app,\n  user,\n  project,\n});\n","export const dbSelector = ({ db }) => db;\n\nexport const maxIdSelector = ({ db }, modelName) => db[modelName].meta.maxId;\n\nexport const accessTokenSelector = ({ auth: { accessToken } }) => accessToken;\n\nexport const isAppInitializingSelector = ({ app: { isInitializing } }) => isInitializing;\n","const ROOT = '/';\nconst LOGIN = '/login';\nconst PROJECTS = '/projects/:id';\nconst BOARDS = '/boards/:id';\nconst CARDS = '/cards/:id';\n\nexport default {\n  ROOT,\n  LOGIN,\n  PROJECTS,\n  BOARDS,\n  CARDS,\n};\n","import { createSelector as createReselectSelector } from 'reselect';\nimport { createSelector as createReduxOrmSelector } from 'redux-orm';\n\nimport orm from '../orm';\nimport { dbSelector } from './common';\nimport matchPaths from '../utils/match-paths';\nimport Paths from '../constants/Paths';\n\nexport const pathnameSelector = ({\n  router: {\n    location: { pathname },\n  },\n}) => pathname;\n\n// eslint-disable-next-line max-len\nexport const pathsMatchSelector = createReselectSelector(pathnameSelector, (pathname) => matchPaths(pathname, Object.values(Paths)));\n\nexport const pathSelector = createReduxOrmSelector(\n  orm,\n  dbSelector,\n  pathsMatchSelector,\n  ({ Project, Board, Card }, pathsMatch) => {\n    if (pathsMatch) {\n      switch (pathsMatch.path) {\n        case Paths.PROJECTS: {\n          const projectModel = Project.withId(pathsMatch.params.id);\n\n          return {\n            projectId: projectModel && projectModel.id,\n          };\n        }\n        case Paths.BOARDS: {\n          const boardModel = Board.withId(pathsMatch.params.id);\n          const projectModel = boardModel && boardModel.project;\n\n          if (!projectModel) {\n            return {\n              boardId: null,\n              projectId: null,\n            };\n          }\n\n          return {\n            boardId: boardModel.id,\n            projectId: projectModel.id,\n          };\n        }\n        case Paths.CARDS: {\n          const cardModel = Card.withId(pathsMatch.params.id);\n          const boardModel = cardModel && cardModel.board;\n          const projectModel = boardModel && boardModel.project;\n\n          if (!projectModel) {\n            return {\n              cardId: null,\n              boardId: null,\n              projectId: null,\n            };\n          }\n\n          return {\n            cardId: cardModel.id,\n            boardId: boardModel.id,\n            projectId: projectModel.id,\n          };\n        }\n        default:\n      }\n    }\n\n    return {};\n  },\n);\n","import { matchPath } from 'react-router-dom';\n\nexport default (pathname, paths) => {\n  for (let i = 0; i < paths.length; i += 1) {\n    const match = matchPath(pathname, {\n      path: paths[i],\n      exact: true,\n    });\n\n    if (match) {\n      return match;\n    }\n  }\n\n  return null;\n};\n","export const nextLocalId = (/* maxId = 0 */) => Date.now(); // maxId + Date.now() / 10000000000000;\n\nexport const isLocalId = (/* id */) => false; // id % 1 !== 0;\n","import { createSelector } from 'redux-orm';\n\nimport orm from '../orm';\nimport { dbSelector } from './common';\nimport { pathSelector } from './path';\nimport { isLocalId } from '../utils/local-id';\n\nexport const currentModalSelector = ({ app: { currentModal } }) => currentModal;\n\nexport const currentUserIdSelector = ({ auth: { userId } }) => userId;\n\nexport const currentUserSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => currentUserIdSelector(state),\n  ({ User }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const userModel = User.withId(id);\n\n    if (!userModel) {\n      return userModel;\n    }\n\n    return userModel.ref;\n  },\n);\n\nexport const projectsForCurrentUserSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => currentUserIdSelector(state),\n  ({ User }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const userModel = User.withId(id);\n\n    if (!userModel) {\n      return userModel;\n    }\n\n    return userModel\n      .getOrderedProjectMembershipsQuerySet()\n      .toModelArray()\n      .map(({ project: projectModel }) => {\n        let notificationsTotal = 0;\n        projectModel.boards.toModelArray().forEach((boardModel) => {\n          boardModel.cards.toModelArray().forEach((cardModel) => {\n            notificationsTotal += cardModel.getUnreadNotificationsQuerySet().count();\n          });\n        });\n\n        const firstBoard = projectModel.boards.first();\n        const firstBoardId = firstBoard && firstBoard.id;\n\n        return {\n          ...projectModel.ref,\n          notificationsTotal,\n          firstBoardId,\n        };\n      });\n  },\n);\n\nexport const notificationsForCurrentUserSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => currentUserIdSelector(state),\n  ({ User }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const userModel = User.withId(id);\n\n    if (!userModel) {\n      return userModel;\n    }\n\n    return userModel\n      .getOrderedUnreadNotificationsQuerySet()\n      .toModelArray()\n      .map((notificationModel) => ({\n        ...notificationModel.ref,\n        action: notificationModel.action && {\n          ...notificationModel.action.ref,\n          user: notificationModel.action.user.ref,\n        },\n        card: notificationModel.card && notificationModel.card.ref,\n      }));\n  },\n);\n\nexport const currentProjectSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).projectId,\n  ({ Project }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const projectModel = Project.withId(id);\n\n    if (!projectModel) {\n      return projectModel;\n    }\n\n    return projectModel.ref;\n  },\n);\n\nexport const membershipsForCurrentProjectSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).projectId,\n  (state) => currentUserIdSelector(state),\n  ({ Project }, id, currentUserId) => {\n    if (!id) {\n      return id;\n    }\n\n    const projectModel = Project.withId(id);\n\n    if (!projectModel) {\n      return projectModel;\n    }\n\n    return projectModel\n      .getOrderedMembershipsQuerySet()\n      .toModelArray()\n      .map((projectMembershipModel) => ({\n        ...projectMembershipModel.ref,\n        isPersisted: !isLocalId(projectMembershipModel.id),\n        user: {\n          ...projectMembershipModel.user.ref,\n          isCurrent: projectMembershipModel.user.id === currentUserId,\n        },\n      }));\n  },\n);\n\nexport const boardsForCurrentProjectSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).projectId,\n  ({ Project }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const projectModel = Project.withId(id);\n\n    if (!projectModel) {\n      return projectModel;\n    }\n\n    return projectModel\n      .getOrderedBoardsQuerySet()\n      .toRefArray()\n      .map((board) => ({\n        ...board,\n        isPersisted: !isLocalId(board.id),\n      }));\n  },\n);\n\nexport const currentBoardSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).boardId,\n  ({ Board }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const boardModel = Board.withId(id);\n\n    if (!boardModel) {\n      return boardModel;\n    }\n\n    return boardModel.ref;\n  },\n);\n\nexport const listIdsForCurrentBoardSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).boardId,\n  ({ Board }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const boardModel = Board.withId(id);\n\n    if (!boardModel) {\n      return boardModel;\n    }\n\n    return boardModel\n      .getOrderedListsQuerySet()\n      .toRefArray()\n      .map((list) => list.id);\n  },\n);\n\nexport const labelsForCurrentBoardSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).boardId,\n  ({ Board }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const boardModel = Board.withId(id);\n\n    if (!boardModel) {\n      return boardModel;\n    }\n\n    return boardModel.labels.toRefArray().map((label) => ({\n      ...label,\n      isPersisted: !isLocalId(label.id),\n    }));\n  },\n);\n\nexport const filterUsersForCurrentBoardSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).boardId,\n  ({ Board }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const boardModel = Board.withId(id);\n\n    if (!boardModel) {\n      return boardModel;\n    }\n\n    return boardModel.filterUsers.toRefArray();\n  },\n);\n\nexport const filterLabelsForCurrentBoardSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).boardId,\n  ({ Board }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const boardModel = Board.withId(id);\n\n    if (!boardModel) {\n      return boardModel;\n    }\n\n    return boardModel.filterLabels.toRefArray();\n  },\n);\n\nexport const currentCardSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).cardId,\n  ({ Card }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    return cardModel.ref;\n  },\n);\n\nexport const usersForCurrentCardSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).cardId,\n  ({ Card }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    return cardModel.users.toRefArray();\n  },\n);\n\nexport const labelsForCurrentCardSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).cardId,\n  ({ Card }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    return cardModel.labels.toRefArray();\n  },\n);\n\nexport const tasksForCurrentCardSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).cardId,\n  ({ Card }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    return cardModel\n      .getOrderedTasksQuerySet()\n      .toRefArray()\n      .map((task) => ({\n        ...task,\n        isPersisted: !isLocalId(task.id),\n      }));\n  },\n);\n\nexport const actionsForCurrentCardSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).cardId,\n  (state) => currentUserIdSelector(state),\n  ({ Card }, id, currentUserId) => {\n    if (!id) {\n      return id;\n    }\n\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    return cardModel\n      .getOrderedInCardActionsQuerySet()\n      .toModelArray()\n      .map((actionModel) => ({\n        ...actionModel.ref,\n        isPersisted: !isLocalId(actionModel.id),\n        user: {\n          ...actionModel.user.ref,\n          isCurrent: actionModel.user.id === currentUserId,\n        },\n      }));\n  },\n);\n\nexport const notificationIdsForCurrentCardSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => pathSelector(state).cardId,\n  ({ Card }, id) => {\n    if (!id) {\n      return id;\n    }\n\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    return cardModel\n      .getUnreadNotificationsQuerySet()\n      .toRefArray()\n      .map((notification) => notification.id);\n  },\n);\n","import { createSelector } from 'redux-orm';\n\nimport orm from '../orm';\nimport { dbSelector } from './common';\nimport { currentUserIdSelector } from './current';\n\nexport const allUsersSelector = createSelector(\n  orm,\n  dbSelector,\n  ({ User }) => User.getOrderedUndeletedQuerySet().toRefArray(),\n);\n\nexport const allUsersExceptCurrentSelector = createSelector(\n  orm,\n  dbSelector,\n  (state) => currentUserIdSelector(state),\n  ({ User }, currentUserId) => User.getOrderedUndeletedQuerySet()\n    .exclude({\n      id: currentUserId,\n    })\n    .toRefArray(),\n);\n","import { createSelector } from 'redux-orm';\n\nimport orm from '../orm';\nimport { dbSelector } from './common';\nimport { isLocalId } from '../utils/local-id';\n\nexport const makeBoardByIdSelector = () => createSelector(\n  orm,\n  dbSelector,\n  (_, id) => id,\n  ({ Board }, id) => {\n    const boardModel = Board.withId(id);\n\n    if (!boardModel) {\n      return boardModel;\n    }\n\n    return boardModel.ref;\n  },\n);\n\nexport const makeListByIdSelector = () => createSelector(\n  orm,\n  dbSelector,\n  (_, id) => id,\n  ({ List }, id) => {\n    const listModel = List.withId(id);\n\n    if (!listModel) {\n      return listModel;\n    }\n\n    return {\n      ...listModel.ref,\n      isPersisted: !isLocalId(id),\n    };\n  },\n);\n\nexport const makeCardIdsByListIdSelector = () => createSelector(\n  orm,\n  dbSelector,\n  (_, id) => id,\n  ({ List }, id) => {\n    const listModel = List.withId(id);\n\n    if (!listModel) {\n      return listModel;\n    }\n\n    return listModel.getOrderedFilteredCardsModelArray().map((cardModel) => cardModel.id);\n  },\n);\n\nexport const makeCardByIdSelector = () => createSelector(\n  orm,\n  dbSelector,\n  (_, id) => id,\n  ({ Card }, id) => {\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    return {\n      ...cardModel.ref,\n      isPersisted: !isLocalId(id),\n    };\n  },\n);\n\nexport const makeUsersByCardIdSelector = () => createSelector(\n  orm,\n  dbSelector,\n  (_, id) => id,\n  ({ Card }, id) => {\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    return cardModel.users.toRefArray();\n  },\n);\n\nexport const makeLabelsByCardIdSelector = () => createSelector(\n  orm,\n  dbSelector,\n  (_, id) => id,\n  ({ Card }, id) => {\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    return cardModel.labels.toRefArray();\n  },\n);\n\nexport const makeTasksByCardIdSelector = () => createSelector(\n  orm,\n  dbSelector,\n  (_, id) => id,\n  ({ Card }, id) => {\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    return cardModel.tasks.toRefArray();\n  },\n);\n\nexport const makeLastActionIdByCardIdSelector = () => createSelector(\n  orm,\n  dbSelector,\n  (_, id) => id,\n  ({ Card }, id) => {\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    const lastActionModel = cardModel.getOrderedInCardActionsQuerySet().last();\n\n    return lastActionModel && lastActionModel.id;\n  },\n);\n\nexport const makeNotificationsTotalByCardIdSelector = () => createSelector(\n  orm,\n  dbSelector,\n  (_, id) => id,\n  ({ Card }, id) => {\n    const cardModel = Card.withId(id);\n\n    if (!cardModel) {\n      return cardModel;\n    }\n\n    return cardModel.getUnreadNotificationsQuerySet().count();\n  },\n);\n\nexport const boardByIdSelector = makeBoardByIdSelector();\n\nexport const listByIdSelector = makeListByIdSelector();\n\nexport const cardIdsByListIdSelector = makeCardIdsByListIdSelector();\n\nexport const cardByIdSelector = makeCardByIdSelector();\n\nexport const usersByCardIdSelector = makeUsersByCardIdSelector();\n\nexport const labelsByCardIdSelector = makeLabelsByCardIdSelector();\n\nexport const tasksByCardIdSelector = makeTasksByCardIdSelector();\n\nexport const lastActionIdByCardIdSelector = makeLastActionIdByCardIdSelector();\n\nexport const notificationsTotalByCardIdSelector = makeNotificationsTotalByCardIdSelector();\n","import { createSelector } from 'redux-orm';\nimport isUndefined from 'lodash/isUndefined';\n\nimport orm from '../orm';\nimport { dbSelector } from './common';\nimport Config from '../constants/Config';\n\nconst nextPosition = (items, index, excludedId) => {\n  const filteredItems = isUndefined(excludedId)\n    ? items\n    : items.filter((item) => item.id !== excludedId);\n\n  if (isUndefined(index)) {\n    const lastItem = filteredItems[filteredItems.length - 1];\n\n    return (lastItem ? lastItem.position : 0) + Config.POSITION_GAP;\n  }\n\n  const prevItem = filteredItems[index - 1];\n  const nextItem = filteredItems[index];\n\n  const prevPosition = prevItem ? prevItem.position : 0;\n\n  if (!nextItem) {\n    return prevPosition + Config.POSITION_GAP;\n  }\n\n  return prevPosition + (nextItem.position - prevPosition) / 2;\n};\n\nexport const nextBoardPositionSelector = createSelector(\n  orm,\n  dbSelector,\n  (_, projectId) => projectId,\n  (_, __, index) => index,\n  (_, __, ___, excludedId) => excludedId,\n  ({ Project }, projectId, index, excludedId) => {\n    const projectModel = Project.withId(projectId);\n\n    if (!projectModel) {\n      return projectModel;\n    }\n\n    return nextPosition(projectModel.getOrderedBoardsQuerySet().toRefArray(), index, excludedId);\n  },\n);\n\nexport const nextListPositionSelector = createSelector(\n  orm,\n  dbSelector,\n  (_, boardId) => boardId,\n  (_, __, index) => index,\n  (_, __, ___, excludedId) => excludedId,\n  ({ Board }, boardId, index, excludedId) => {\n    const boardModel = Board.withId(boardId);\n\n    if (!boardModel) {\n      return boardModel;\n    }\n\n    return nextPosition(boardModel.getOrderedListsQuerySet().toRefArray(), index, excludedId);\n  },\n);\n\nexport const nextCardPositionSelector = createSelector(\n  orm,\n  dbSelector,\n  (_, listId) => listId,\n  (_, __, index) => index,\n  (_, __, ___, excludedId) => excludedId,\n  ({ List }, listId, index, excludedId) => {\n    const listModel = List.withId(listId);\n\n    if (!listModel) {\n      return listModel;\n    }\n\n    return nextPosition(listModel.getOrderedFilteredCardsModelArray(), index, excludedId);\n  },\n);\n","const DISCONNECTED = 'DISCONNECTED';\nconst RECONNECTED = 'RECONNECTED';\n\nexport default {\n  DISCONNECTED,\n  RECONNECTED,\n};\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const authenticate = (data) => ({\n  type: ActionTypes.AUTHENTICATE,\n  payload: {\n    data,\n  },\n});\n\nexport const clearAuthenticationError = () => ({\n  type: ActionTypes.AUTHENTICATION_ERROR_CLEAR,\n  payload: {},\n});\n\nexport const logout = () => ({\n  type: ActionTypes.LOGOUT,\n  payload: {},\n});\n\n/* Events */\n\nexport const authenticateRequested = (data) => ({\n  type: ActionTypes.AUTHENTICATE_REQUESTED,\n  payload: {\n    data,\n  },\n});\n\nexport const authenticateSucceeded = (accessToken) => ({\n  type: ActionTypes.AUTHENTICATE_SUCCEEDED,\n  payload: {\n    accessToken,\n  },\n});\n\nexport const authenticateFailed = (error) => ({\n  type: ActionTypes.AUTHENTICATE_FAILED,\n  payload: {\n    error,\n  },\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Events */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const appInitialized = () => ({\n  type: ActionTypes.APP_INITIALIZED,\n  payload: {},\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const openModal = (type) => ({\n  type: ActionTypes.MODAL_OPEN,\n  payload: {\n    type,\n  },\n});\n\nexport const closeModal = () => ({\n  type: ActionTypes.MODAL_CLOSE,\n  payload: {},\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const createUser = (data) => ({\n  type: ActionTypes.USER_CREATE,\n  payload: {\n    data,\n  },\n});\n\nexport const clearUserCreationError = () => ({\n  type: ActionTypes.USER_CREATION_ERROR_CLEAR,\n  payload: {},\n});\n\nexport const updateUser = (id, data) => ({\n  type: ActionTypes.USER_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const deleteUser = (id) => ({\n  type: ActionTypes.USER_DELETE,\n  payload: {\n    id,\n  },\n});\n\nexport const addUserToCard = (id, cardId, isCurrent) => ({\n  type: ActionTypes.USER_TO_CARD_ADD,\n  payload: {\n    id,\n    cardId,\n    isCurrent,\n  },\n});\n\nexport const removeUserFromCard = (id, cardId) => ({\n  type: ActionTypes.USER_FROM_CARD_REMOVE,\n  payload: {\n    id,\n    cardId,\n  },\n});\n\nexport const addUserToBoardFilter = (id, boardId) => ({\n  type: ActionTypes.USER_TO_BOARD_FILTER_ADD,\n  payload: {\n    id,\n    boardId,\n  },\n});\n\nexport const removeUserFromBoardFilter = (id, boardId) => ({\n  type: ActionTypes.USER_FROM_BOARD_FILTER_REMOVE,\n  payload: {\n    id,\n    boardId,\n  },\n});\n\n/* Events */\n\nexport const createUserRequested = (data) => ({\n  type: ActionTypes.USER_CREATE_REQUESTED,\n  payload: {\n    data,\n  },\n});\n\nexport const createUserSucceeded = (user) => ({\n  type: ActionTypes.USER_CREATE_SUCCEEDED,\n  payload: {\n    user,\n  },\n});\n\nexport const createUserFailed = (error) => ({\n  type: ActionTypes.USER_CREATE_FAILED,\n  payload: {\n    error,\n  },\n});\n\nexport const createUserReceived = (user) => ({\n  type: ActionTypes.USER_CREATE_RECEIVED,\n  payload: {\n    user,\n  },\n});\n\nexport const fetchCurrentUserRequested = () => ({\n  type: ActionTypes.CURRENT_USER_FETCH_REQUESTED,\n  payload: {},\n});\n\nexport const fetchCurrentUserSucceeded = (user) => ({\n  type: ActionTypes.CURRENT_USER_FETCH_SUCCEEDED,\n  payload: {\n    user,\n  },\n});\n\nexport const fetchCurrentUserFailed = (error) => ({\n  type: ActionTypes.CURRENT_USER_FETCH_FAILED,\n  payload: {\n    error,\n  },\n});\n\nexport const updateUserRequested = (id, data) => ({\n  type: ActionTypes.USER_UPDATE_REQUESTED,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const updateUserSucceeded = (user) => ({\n  type: ActionTypes.USER_UPDATE_SUCCEEDED,\n  payload: {\n    user,\n  },\n});\n\nexport const updateUserFailed = (id, error) => ({\n  type: ActionTypes.USER_UPDATE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const updateUserReceived = (user) => ({\n  type: ActionTypes.USER_UPDATE_RECEIVED,\n  payload: {\n    user,\n  },\n});\n\nexport const uploadUserAvatarRequested = (id) => ({\n  type: ActionTypes.USER_AVATAR_UPLOAD_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const uploadUserAvatarSucceeded = (user) => ({\n  type: ActionTypes.USER_AVATAR_UPLOAD_SUCCEEDED,\n  payload: {\n    user,\n  },\n});\n\nexport const uploadUserAvatarFailed = (id, error) => ({\n  type: ActionTypes.USER_AVATAR_UPLOAD_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const deleteUserRequested = (id) => ({\n  type: ActionTypes.USER_DELETE_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteUserSucceeded = (user) => ({\n  type: ActionTypes.USER_DELETE_SUCCEEDED,\n  payload: {\n    user,\n  },\n});\n\nexport const deleteUserFailed = (id, error) => ({\n  type: ActionTypes.USER_DELETE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const deleteUserReceived = (user) => ({\n  type: ActionTypes.USER_DELETE_RECEIVED,\n  payload: {\n    user,\n  },\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const createProject = (data, projectMembership) => ({\n  type: ActionTypes.PROJECT_CREATE,\n  payload: {\n    data,\n    projectMembership,\n  },\n});\n\nexport const updateProject = (id, data) => ({\n  type: ActionTypes.PROJECT_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const deleteProject = (id) => ({\n  type: ActionTypes.PROJECT_DELETE,\n  payload: {\n    id,\n  },\n});\n\n/* Events */\n\nexport const createProjectRequested = (data) => ({\n  type: ActionTypes.PROJECT_CREATE_REQUESTED,\n  payload: {\n    data,\n  },\n});\n\nexport const createProjectSucceeded = (project, users, projectMemberships, boards) => ({\n  type: ActionTypes.PROJECT_CREATE_SUCCEEDED,\n  payload: {\n    project,\n    users,\n    projectMemberships,\n    boards,\n  },\n});\n\nexport const createProjectFailed = (error) => ({\n  type: ActionTypes.PROJECT_CREATE_FAILED,\n  payload: {\n    error,\n  },\n});\n\nexport const createProjectReceived = (project, users, projectMemberships, boards) => ({\n  type: ActionTypes.PROJECT_CREATE_RECEIVED,\n  payload: {\n    project,\n    users,\n    projectMemberships,\n    boards,\n  },\n});\n\nexport const updateProjectRequested = (id, data) => ({\n  type: ActionTypes.PROJECT_UPDATE_REQUESTED,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const updateProjectSucceeded = (project) => ({\n  type: ActionTypes.PROJECT_UPDATE_SUCCEEDED,\n  payload: {\n    project,\n  },\n});\n\nexport const updateProjectFailed = (id, error) => ({\n  type: ActionTypes.PROJECT_UPDATE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const updateProjectReceived = (project) => ({\n  type: ActionTypes.PROJECT_UPDATE_RECEIVED,\n  payload: {\n    project,\n  },\n});\n\nexport const deleteProjectRequested = (id) => ({\n  type: ActionTypes.PROJECT_DELETE_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteProjectSucceeded = (project) => ({\n  type: ActionTypes.PROJECT_DELETE_SUCCEEDED,\n  payload: {\n    project,\n  },\n});\n\nexport const deleteProjectFailed = (id, error) => ({\n  type: ActionTypes.PROJECT_DELETE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const deleteProjectReceived = (project) => ({\n  type: ActionTypes.PROJECT_DELETE_RECEIVED,\n  payload: {\n    project,\n  },\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const createProjectMembership = (projectMembership) => ({\n  type: ActionTypes.PROJECT_MEMBERSHIP_CREATE,\n  payload: {\n    projectMembership,\n  },\n});\n\nexport const deleteProjectMembership = (id) => ({\n  type: ActionTypes.PROJECT_MEMBERSHIP_DELETE,\n  payload: {\n    id,\n  },\n});\n\n/* Events */\n\nexport const createProjectMembershipRequested = (localId, data) => ({\n  type: ActionTypes.PROJECT_MEMBERSHIP_CREATE_REQUESTED,\n  payload: {\n    localId,\n    data,\n  },\n});\n\nexport const createProjectMembershipSucceeded = (localId, projectMembership) => ({\n  type: ActionTypes.PROJECT_MEMBERSHIP_CREATE_SUCCEEDED,\n  payload: {\n    localId,\n    projectMembership,\n  },\n});\n\nexport const createProjectMembershipFailed = (localId, error) => ({\n  type: ActionTypes.PROJECT_MEMBERSHIP_CREATE_FAILED,\n  payload: {\n    localId,\n    error,\n  },\n});\n\nexport const createProjectMembershipReceived = (projectMembership, user) => ({\n  type: ActionTypes.PROJECT_MEMBERSHIP_CREATE_RECEIVED,\n  payload: {\n    projectMembership,\n    user,\n  },\n});\n\nexport const deleteProjectMembershipRequested = (id) => ({\n  type: ActionTypes.PROJECT_MEMBERSHIP_DELETE_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteProjectMembershipSucceeded = (projectMembership) => ({\n  type: ActionTypes.PROJECT_MEMBERSHIP_DELETE_SUCCEEDED,\n  payload: {\n    projectMembership,\n  },\n});\n\nexport const deleteProjectMembershipFailed = (id, error) => ({\n  type: ActionTypes.PROJECT_MEMBERSHIP_DELETE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const deleteProjectMembershipReceived = (projectMembership) => ({\n  type: ActionTypes.PROJECT_MEMBERSHIP_DELETE_RECEIVED,\n  payload: {\n    projectMembership,\n  },\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const createBoard = (board) => ({\n  type: ActionTypes.BOARD_CREATE,\n  payload: {\n    board,\n  },\n});\n\nexport const updateBoard = (id, data) => ({\n  type: ActionTypes.BOARD_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const deleteBoard = (id) => ({\n  type: ActionTypes.BOARD_DELETE,\n  payload: {\n    id,\n  },\n});\n\n/* Events */\n\nexport const createBoardRequested = (localId, data) => ({\n  type: ActionTypes.BOARD_CREATE_REQUESTED,\n  payload: {\n    localId,\n    data,\n  },\n});\n\nexport const createBoardSucceeded = (localId, board, lists, labels) => ({\n  type: ActionTypes.BOARD_CREATE_SUCCEEDED,\n  payload: {\n    localId,\n    board,\n    lists,\n    labels,\n  },\n});\n\nexport const createBoardFailed = (localId, error) => ({\n  type: ActionTypes.BOARD_CREATE_FAILED,\n  payload: {\n    localId,\n    error,\n  },\n});\n\nexport const createBoardReceived = (board, lists, labels) => ({\n  type: ActionTypes.BOARD_CREATE_RECEIVED,\n  payload: {\n    board,\n    lists,\n    labels,\n  },\n});\n\nexport const fetchBoardRequested = (id) => ({\n  type: ActionTypes.BOARD_FETCH_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const fetchBoardSucceeded = (\n  board,\n  lists,\n  labels,\n  cards,\n  cardMemberships,\n  cardLabels,\n  tasks,\n) => ({\n  type: ActionTypes.BOARD_FETCH_SUCCEEDED,\n  payload: {\n    board,\n    lists,\n    labels,\n    cards,\n    cardMemberships,\n    cardLabels,\n    tasks,\n  },\n});\n\nexport const fetchBoardFailed = (id, error) => ({\n  type: ActionTypes.BOARD_FETCH_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const updateBoardRequested = (id, data) => ({\n  type: ActionTypes.BOARD_UPDATE_REQUESTED,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const updateBoardSucceeded = (board) => ({\n  type: ActionTypes.BOARD_UPDATE_SUCCEEDED,\n  payload: {\n    board,\n  },\n});\n\nexport const updateBoardFailed = (id, error) => ({\n  type: ActionTypes.BOARD_UPDATE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const updateBoardReceived = (board) => ({\n  type: ActionTypes.BOARD_UPDATE_RECEIVED,\n  payload: {\n    board,\n  },\n});\n\nexport const deleteBoardRequested = (id) => ({\n  type: ActionTypes.BOARD_DELETE_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteBoardSucceeded = (board) => ({\n  type: ActionTypes.BOARD_DELETE_SUCCEEDED,\n  payload: {\n    board,\n  },\n});\n\nexport const deleteBoardFailed = (id, error) => ({\n  type: ActionTypes.BOARD_DELETE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const deleteBoardReceived = (board) => ({\n  type: ActionTypes.BOARD_DELETE_RECEIVED,\n  payload: {\n    board,\n  },\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const createList = (list) => ({\n  type: ActionTypes.LIST_CREATE,\n  payload: {\n    list,\n  },\n});\n\nexport const updateList = (id, data) => ({\n  type: ActionTypes.LIST_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const deleteList = (id) => ({\n  type: ActionTypes.LIST_DELETE,\n  payload: {\n    id,\n  },\n});\n\n/* Events */\n\nexport const createListRequested = (localId, data) => ({\n  type: ActionTypes.LIST_CREATE_REQUESTED,\n  payload: {\n    localId,\n    data,\n  },\n});\n\nexport const createListSucceeded = (localId, list) => ({\n  type: ActionTypes.LIST_CREATE_SUCCEEDED,\n  payload: {\n    localId,\n    list,\n  },\n});\n\nexport const createListFailed = (localId, error) => ({\n  type: ActionTypes.LIST_CREATE_FAILED,\n  payload: {\n    localId,\n    error,\n  },\n});\n\nexport const createListReceived = (list) => ({\n  type: ActionTypes.LIST_CREATE_RECEIVED,\n  payload: {\n    list,\n  },\n});\n\nexport const updateListRequested = (id, data) => ({\n  type: ActionTypes.LIST_UPDATE_REQUESTED,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const updateListSucceeded = (list) => ({\n  type: ActionTypes.LIST_UPDATE_SUCCEEDED,\n  payload: {\n    list,\n  },\n});\n\nexport const updateListFailed = (id, error) => ({\n  type: ActionTypes.LIST_UPDATE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const updateListReceived = (list) => ({\n  type: ActionTypes.LIST_UPDATE_RECEIVED,\n  payload: {\n    list,\n  },\n});\n\nexport const deleteListRequested = (id) => ({\n  type: ActionTypes.LIST_DELETE_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteListSucceeded = (list) => ({\n  type: ActionTypes.LIST_DELETE_SUCCEEDED,\n  payload: {\n    list,\n  },\n});\n\nexport const deleteListFailed = (id, error) => ({\n  type: ActionTypes.LIST_DELETE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const deleteListReceived = (list) => ({\n  type: ActionTypes.LIST_DELETE_RECEIVED,\n  payload: {\n    list,\n  },\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const createLabel = (label) => ({\n  type: ActionTypes.LABEL_CREATE,\n  payload: {\n    label,\n  },\n});\n\nexport const updateLabel = (id, data) => ({\n  type: ActionTypes.LABEL_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const deleteLabel = (id) => ({\n  type: ActionTypes.LABEL_DELETE,\n  payload: {\n    id,\n  },\n});\n\nexport const addLabelToCard = (id, cardId) => ({\n  type: ActionTypes.LABEL_TO_CARD_ADD,\n  payload: {\n    id,\n    cardId,\n  },\n});\n\nexport const removeLabelFromCard = (id, cardId) => ({\n  type: ActionTypes.LABEL_FROM_CARD_REMOVE,\n  payload: {\n    id,\n    cardId,\n  },\n});\n\nexport const addLabelToBoardFilter = (id, boardId) => ({\n  type: ActionTypes.LABEL_TO_BOARD_FILTER_ADD,\n  payload: {\n    id,\n    boardId,\n  },\n});\n\nexport const removeLabelFromBoardFilter = (id, boardId) => ({\n  type: ActionTypes.LABEL_FROM_BOARD_FILTER_REMOVE,\n  payload: {\n    id,\n    boardId,\n  },\n});\n\n/* Events */\n\nexport const createLabelRequested = (localId, data) => ({\n  type: ActionTypes.LABEL_CREATE_REQUESTED,\n  payload: {\n    localId,\n    data,\n  },\n});\n\nexport const createLabelSucceeded = (localId, label) => ({\n  type: ActionTypes.LABEL_CREATE_SUCCEEDED,\n  payload: {\n    localId,\n    label,\n  },\n});\n\nexport const createLabelFailed = (localId, error) => ({\n  type: ActionTypes.LABEL_CREATE_FAILED,\n  payload: {\n    localId,\n    error,\n  },\n});\n\nexport const createLabelReceived = (label) => ({\n  type: ActionTypes.LABEL_CREATE_RECEIVED,\n  payload: {\n    label,\n  },\n});\n\nexport const updateLabelRequested = (id, data) => ({\n  type: ActionTypes.LABEL_UPDATE_REQUESTED,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const updateLabelSucceeded = (label) => ({\n  type: ActionTypes.LABEL_UPDATE_SUCCEEDED,\n  payload: {\n    label,\n  },\n});\n\nexport const updateLabelFailed = (id, error) => ({\n  type: ActionTypes.LABEL_UPDATE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const updateLabelReceived = (label) => ({\n  type: ActionTypes.LABEL_UPDATE_RECEIVED,\n  payload: {\n    label,\n  },\n});\n\nexport const deleteLabelRequested = (id) => ({\n  type: ActionTypes.LABEL_DELETE_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteLabelSucceeded = (label) => ({\n  type: ActionTypes.LABEL_DELETE_SUCCEEDED,\n  payload: {\n    label,\n  },\n});\n\nexport const deleteLabelFailed = (id, error) => ({\n  type: ActionTypes.LABEL_DELETE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const deleteLabelReceived = (label) => ({\n  type: ActionTypes.LABEL_DELETE_RECEIVED,\n  payload: {\n    label,\n  },\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const createCard = (card) => ({\n  type: ActionTypes.CARD_CREATE,\n  payload: {\n    card,\n  },\n});\n\nexport const updateCard = (id, data) => ({\n  type: ActionTypes.CARD_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const deleteCard = (id) => ({\n  type: ActionTypes.CARD_DELETE,\n  payload: {\n    id,\n  },\n});\n\n/* Events */\n\nexport const createCardRequested = (localId, data) => ({\n  type: ActionTypes.CARD_CREATE_REQUESTED,\n  payload: {\n    localId,\n    data,\n  },\n});\n\nexport const createCardSucceeded = (localId, card) => ({\n  type: ActionTypes.CARD_CREATE_SUCCEEDED,\n  payload: {\n    localId,\n    card,\n  },\n});\n\nexport const createCardFailed = (localId, error) => ({\n  type: ActionTypes.CARD_CREATE_FAILED,\n  payload: {\n    localId,\n    error,\n  },\n});\n\nexport const createCardReceived = (card) => ({\n  type: ActionTypes.CARD_CREATE_RECEIVED,\n  payload: {\n    card,\n  },\n});\n\nexport const fetchCardRequested = (id) => ({\n  type: ActionTypes.CARD_FETCH_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const fetchCardSucceeded = (card) => ({\n  type: ActionTypes.CARD_FETCH_SUCCEEDED,\n  payload: {\n    card,\n  },\n});\n\nexport const fetchCardFailed = (id, error) => ({\n  type: ActionTypes.CARD_FETCH_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const updateCardRequested = (id, data) => ({\n  type: ActionTypes.CARD_UPDATE_REQUESTED,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const updateCardSucceeded = (card) => ({\n  type: ActionTypes.CARD_UPDATE_SUCCEEDED,\n  payload: {\n    card,\n  },\n});\n\nexport const updateCardFailed = (id, error) => ({\n  type: ActionTypes.CARD_UPDATE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const updateCardReceived = (card) => ({\n  type: ActionTypes.CARD_UPDATE_RECEIVED,\n  payload: {\n    card,\n  },\n});\n\nexport const deleteCardRequested = (id) => ({\n  type: ActionTypes.CARD_DELETE_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteCardSucceeded = (card) => ({\n  type: ActionTypes.CARD_DELETE_SUCCEEDED,\n  payload: {\n    card,\n  },\n});\n\nexport const deleteCardFailed = (id, error) => ({\n  type: ActionTypes.CARD_DELETE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const deleteCardReceived = (card) => ({\n  type: ActionTypes.CARD_DELETE_RECEIVED,\n  payload: {\n    card,\n  },\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const createTask = (task) => ({\n  type: ActionTypes.TASK_CREATE,\n  payload: {\n    task,\n  },\n});\n\nexport const updateTask = (id, data) => ({\n  type: ActionTypes.TASK_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const deleteTask = (id) => ({\n  type: ActionTypes.TASK_DELETE,\n  payload: {\n    id,\n  },\n});\n\n/* Events */\n\nexport const createTaskRequested = (localId, data) => ({\n  type: ActionTypes.TASK_CREATE_REQUESTED,\n  payload: {\n    localId,\n    data,\n  },\n});\n\nexport const createTaskSucceeded = (localId, task) => ({\n  type: ActionTypes.TASK_CREATE_SUCCEEDED,\n  payload: {\n    localId,\n    task,\n  },\n});\n\nexport const createTaskFailed = (localId, error) => ({\n  type: ActionTypes.TASK_CREATE_FAILED,\n  payload: {\n    localId,\n    error,\n  },\n});\n\nexport const createTaskReceived = (task) => ({\n  type: ActionTypes.TASK_CREATE_RECEIVED,\n  payload: {\n    task,\n  },\n});\n\nexport const updateTaskRequested = (id, data) => ({\n  type: ActionTypes.TASK_UPDATE_REQUESTED,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const updateTaskSucceeded = (task) => ({\n  type: ActionTypes.TASK_UPDATE_SUCCEEDED,\n  payload: {\n    task,\n  },\n});\n\nexport const updateTaskFailed = (id, error) => ({\n  type: ActionTypes.TASK_UPDATE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const updateTaskReceived = (task) => ({\n  type: ActionTypes.TASK_UPDATE_RECEIVED,\n  payload: {\n    task,\n  },\n});\n\nexport const deleteTaskRequested = (id) => ({\n  type: ActionTypes.TASK_DELETE_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteTaskSucceeded = (task) => ({\n  type: ActionTypes.TASK_DELETE_SUCCEEDED,\n  payload: {\n    task,\n  },\n});\n\nexport const deleteTaskFailed = (id, error) => ({\n  type: ActionTypes.TASK_DELETE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const deleteTaskReceived = (task) => ({\n  type: ActionTypes.TASK_DELETE_RECEIVED,\n  payload: {\n    task,\n  },\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const createCommentAction = (action) => ({\n  type: ActionTypes.COMMENT_ACTION_CREATE,\n  payload: {\n    action,\n  },\n});\n\nexport const updateCommentAction = (id, data) => ({\n  type: ActionTypes.COMMENT_ACTION_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const deleteCommentAction = (id) => ({\n  type: ActionTypes.COMMENT_ACTION_DELETE,\n  payload: {\n    id,\n  },\n});\n\n/* Events */\n\nexport const createCommentActionRequested = (localId, data) => ({\n  type: ActionTypes.COMMENT_ACTION_CREATE_REQUESTED,\n  payload: {\n    localId,\n    data,\n  },\n});\n\nexport const createCommentActionSucceeded = (localId, action) => ({\n  type: ActionTypes.COMMENT_ACTION_CREATE_SUCCEEDED,\n  payload: {\n    localId,\n    action,\n  },\n});\n\nexport const createCommentActionFailed = (localId, error) => ({\n  type: ActionTypes.COMMENT_ACTION_CREATE_FAILED,\n  payload: {\n    localId,\n    error,\n  },\n});\n\nexport const updateCommentActionRequested = (id, data) => ({\n  type: ActionTypes.COMMENT_ACTION_UPDATE_REQUESTED,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const updateCommentActionSucceeded = (action) => ({\n  type: ActionTypes.COMMENT_ACTION_UPDATE_SUCCEEDED,\n  payload: {\n    action,\n  },\n});\n\nexport const updateCommentActionFailed = (id, error) => ({\n  type: ActionTypes.COMMENT_ACTION_UPDATE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n\nexport const deleteCommentActionRequested = (id) => ({\n  type: ActionTypes.COMMENT_ACTION_DELETE_REQUESTED,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteCommentActionSucceeded = (action) => ({\n  type: ActionTypes.COMMENT_ACTION_DELETE_SUCCEEDED,\n  payload: {\n    action,\n  },\n});\n\nexport const deleteCommentActionFailed = (id, error) => ({\n  type: ActionTypes.COMMENT_ACTION_DELETE_FAILED,\n  payload: {\n    id,\n    error,\n  },\n});\n","import ActionTypes from '../constants/ActionTypes';\n\n/* Actions */\n\nexport const deleteNotifications = (ids) => ({\n  type: ActionTypes.NOTIFICATIONS_DELETE,\n  payload: {\n    ids,\n  },\n});\n\n/* Events */\n\nexport const fetchNotificationsRequested = () => ({\n  type: ActionTypes.NOTIFICATIONS_FETCH_REQUESTED,\n  payload: {},\n});\n\nexport const fetchNotificationsSucceeded = (notifications, users, cards, actions) => ({\n  type: ActionTypes.NOTIFICATIONS_FETCH_SUCCEEDED,\n  payload: {\n    notifications,\n    users,\n    cards,\n    actions,\n  },\n});\n\nexport const fetchNotificationsFailed = (error) => ({\n  type: ActionTypes.NOTIFICATIONS_FETCH_FAILED,\n  payload: {\n    error,\n  },\n});\n\nexport const deleteNotificationsRequested = (ids) => ({\n  type: ActionTypes.NOTIFICATIONS_DELETE_REQUESTED,\n  payload: {\n    ids,\n  },\n});\n\nexport const deleteNotificationsSucceeded = (notifications) => ({\n  type: ActionTypes.NOTIFICATIONS_DELETE_SUCCEEDED,\n  payload: {\n    notifications,\n  },\n});\n\nexport const deleteNotificationsFailed = (ids, error) => ({\n  type: ActionTypes.NOTIFICATIONS_DELETE_FAILED,\n  payload: {\n    ids,\n    error,\n  },\n});\n","import { call, put, select } from 'redux-saga/effects';\n\n// import { deleteNotificationsRequest } from '../requests';\nimport { notificationIdsForCurrentCardSelector } from '../../../selectors';\nimport { deleteNotifications } from '../../../actions';\n\nexport function* deleteNotificationsService(ids) {\n  yield put(deleteNotifications(ids));\n  // yield call(deleteNotificationsRequest, ids);\n}\n\nexport function* deleteNotificationsInCurrentCardService() {\n  const notificationIds = yield select(notificationIdsForCurrentCardSelector);\n\n  if (notificationIds && notificationIds.length > 0) {\n    yield call(deleteNotificationsService, notificationIds);\n  }\n}\n","import { call, put, select } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport ReactGA from 'react-ga';\n\nimport { deleteNotificationsInCurrentCardService } from './notifications';\n// import { fetchBoardRequest } from '../requests';\nimport {\n  // currentBoardSelector,\n  isAppInitializingSelector,\n  pathsMatchSelector,\n} from '../../../selectors';\nimport Paths from '../../../constants/Paths';\n\nexport function* goToRootService() {\n  yield put(push(Paths.ROOT));\n}\n\nexport function* goToProjectService(projectId) {\n  yield put(push(Paths.PROJECTS.replace(':id', projectId)));\n}\n\nexport function* goToBoardService(boardId) {\n  yield put(push(Paths.BOARDS.replace(':id', boardId)));\n}\n\nexport function* goToCardService(cardId) {\n  yield put(push(Paths.CARDS.replace(':id', cardId)));\n}\n\nexport function* runPathActionsService(pathsMatch) {\n  if (!pathsMatch) {\n    return;\n  }\n\n  switch (pathsMatch.path) {\n    case Paths.BOARDS:\n    case Paths.CARDS: {\n      /* const currentBoard = yield select(currentBoardSelector);\n\n      if (currentBoard && currentBoard.isFetching === null) {\n        yield call(fetchBoardRequest, currentBoard.id);\n      } */\n\n      if (pathsMatch.path === Paths.CARDS) {\n        yield call(deleteNotificationsInCurrentCardService);\n      }\n\n      break;\n    }\n    default:\n  }\n}\n\nexport function* locationChangedService(location) {\n  const pathsMatch = yield select(pathsMatchSelector);\n\n  if (pathsMatch) {\n    switch (pathsMatch.path) {\n      case Paths.LOGIN:\n        yield call(goToRootService);\n\n        break;\n      default:\n    }\n  }\n\n  const isAppInitializing = yield select(isAppInitializingSelector);\n\n  if (!isAppInitializing) {\n    yield call(runPathActionsService, pathsMatch);\n  }\n\n  yield call(ReactGA.pageview, location.pathname + location.search);\n}\n","import { put } from 'redux-saga/effects';\n\nimport { logout } from '../../../actions';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function* logoutService() {\n  yield put(logout());\n}\n","import { put } from 'redux-saga/effects';\n\nimport { closeModal, openModal } from '../../../actions';\n\nexport function* openModalService(type) {\n  yield put(openModal(type));\n}\n\nexport function* closeModalService() {\n  yield put(closeModal());\n}\n","const USERS = 'USERS';\n\nconst ADD_PROJECT = 'ADD_PROJECT';\n\nexport default {\n  USERS,\n  ADD_PROJECT,\n};\n","import fromPairs from 'lodash/fromPairs';\n\nimport enUS from './en-US/embed';\nimport ruRU from './ru-RU/embed';\n\nconst localePairs = [['en-US', enUS], ['ru-RU', ruRU]];\n\nexport const languages = localePairs.map((locale) => locale[0]);\n\nexport const embedLocales = fromPairs(localePairs);\n","export default {\n  format: {\n    date: 'M/d/yyyy',\n    time: 'p',\n    dateTime: '$t(format:date) $t(format:time)',\n    longDate: 'MMM d',\n    longDateTime: \"MMMM d 'at' p\",\n  },\n\n  translation: {\n    common: {\n      email: 'E-mail',\n      emailDoesNotExist: 'Email does not exist',\n      invalidPassword: 'Invalid password',\n      logInToPlanka: 'Log in to Planka',\n      noInternetConnection: 'No internet connection',\n      password: 'Password',\n      projectManagment: 'Project managment',\n      serverConnectionFailed: 'Server connection failed',\n      unknownError: 'Unknown error, try again later',\n\n      actions: 'Actions',\n      addComment: 'Add comment',\n      addMember_title: 'Add Member',\n      addUser_title: 'Add User',\n      administrator: 'Administrator',\n      all: 'All',\n      allChangesWillBeAutomaticallySavedAfterConnectionRestored:\n        'All changes will be automatically saved<br />after connection restored',\n      areYouSureYouWantToDeleteThisBoard: 'Are you sure you want to delete this board?',\n      areYouSureYouWantToDeleteThisCard: 'Are you sure you want to delete this card?',\n      areYouSureYouWantToDeleteThisComment: 'Are you sure you want to delete this comment?',\n      areYouSureYouWantToDeleteThisLabel: 'Are you sure you want to delete this label?',\n      areYouSureYouWantToDeleteThisList: 'Are you sure you want to delete this list?',\n      areYouSureYouWantToDeleteThisProject: 'Are you sure you want to delete this project?',\n      areYouSureYouWantToDeleteThisTask: 'Are you sure you want to delete this task?',\n      areYouSureYouWantToDeleteThisUser: 'Are you sure you want to delete this user?',\n      areYouSureYouWantToRemoveThisMemberFromProject:\n        'Are you sure you want to remove this member from project?',\n      boardNotFound_title: 'Board Not Found',\n      cardActions_title: 'Card Actions',\n      cardNotFound_title: 'Card Not Found',\n      cardOrActionAreDeleted: 'Card or action are deleted',\n      color: 'Color',\n      connectionRestored_title: 'Connection Restored',\n      createBoard_title: 'Create Board',\n      createLabel_title: 'Create Label',\n      createNewOneOrSelectExistingOne: 'Create a new one or select<br />an existing one',\n      createProject_title: 'Create Project',\n      date: 'Date',\n      deadline: 'Deadline',\n      deleteBoard_title: 'Delete Board',\n      deleteCard_title: 'Delete Card',\n      deleteComment_title: 'Delete Comment',\n      deleteLabel_title: 'Delete Label',\n      deleteList_title: 'Delete List',\n      deleteProject_title: 'Delete Project',\n      deleteTask_title: 'Delete Task',\n      deleteUser_title: 'Delete User',\n      description: 'Description',\n      editAvatar_title: 'Edit Avatar',\n      editBoard_title: 'Edit Board',\n      editDeadline_title: 'Edit Deadline',\n      editLabel_title: 'Edit Label',\n      editName_title: 'Edit Name',\n      editProject_title: 'Edit Project',\n      editTimer_title: 'Edit Timer',\n      enterCardTitle: 'Enter card title...',\n      enterDescription: 'Enter description...',\n      enterListTitle: 'Enter list title...',\n      enterProjectTitle: 'Enter project title',\n      enterTaskDescription: 'Enter task description...',\n      filterByLabels_title: 'Filter By Labels',\n      filterByMembers_title: 'Filter By Members',\n      hours: 'Hours',\n      labels: 'Labels',\n      listActions_title: 'List Actions',\n      members: 'Members',\n      minutes: 'Minutes',\n      name: 'Name',\n      noConnectionToServer: 'No connection to server',\n      notifications: 'Notifications',\n      noUnreadNotifications: 'No unread notifications',\n      openBoard_title: 'Open Board',\n      pageNotFound_title: 'Page Not Found',\n      projectNotFound_title: 'Project Not Found',\n      refreshPageToLoadLastDataAndReceiveUpdates:\n        '<0>Refresh the page</0> to load last data<br />and receive updates',\n      removeMember_title: 'Remove Member',\n      seconds: 'Seconds',\n      taskActions_title: 'Task Actions',\n      tasks: 'Tasks',\n      time: 'Time',\n      timer: 'Timer',\n      title: 'Title',\n      userAddedThisCardToList: '<0>{{user}}</0><1> added this card to {{list}}</1>',\n      userIsAlreadyExist: 'User is already exist',\n      userLeftNewCommentToCard: '{{user}} left a new comment «{{comment}}» to <2>{{card}}</2>',\n      userMovedCardFromListToList: '{{user}} moved <2>{{card}}</2> from {{fromList}} to {{toList}}',\n      userMovedThisCardFromListToList:\n        '<0>{{user}}</0><1> moved this card from {{fromList}} to {{toList}}</1>',\n      users: 'Users',\n      writeComment: 'Write a comment...',\n    },\n\n    action: {\n      logIn: 'Log in',\n\n      addAnotherCard: 'Add another card',\n      addAnotherList: 'Add another list',\n      addAnotherTask: 'Add another task',\n      addCard: 'Add card',\n      addCard_title: 'Add Card',\n      addComment: 'Add comment',\n      addList: 'Add list',\n      addMoreDetailedDescription: 'Add more detailed description',\n      addTask: 'Add task',\n      addToCard: 'Add to card',\n      addUser: 'Add user',\n      createBoard: 'Create board',\n      createLabel: 'Create label',\n      createNewLabel: 'Create new label',\n      createProject: 'Create project',\n      delete: 'Delete',\n      deleteAvatar: 'Delete avatar',\n      deleteBoard: 'Delete board',\n      deleteCard: 'Delete card',\n      deleteCard_title: 'Delete Card',\n      deleteComment: 'Delete comment',\n      deleteLabel: 'Delete label',\n      deleteList: 'Delete list',\n      deleteList_title: 'Delete List',\n      deleteProject: 'Delete project',\n      deleteTask: 'Delete task',\n      deleteTask_title: 'Delete Task',\n      deleteUser: 'Delete user',\n      edit: 'Edit',\n      editAvatar_title: 'Edit Avatar',\n      editDeadline_title: 'Edit Deadline',\n      editDescription_title: 'Edit Description',\n      editName_title: 'Edit Name',\n      editTask_title: 'Edit Task',\n      editTimer_title: 'Edit Timer',\n      editTitle_title: 'Edit Title',\n      logOut_title: 'Log Out',\n      remove: 'Remove',\n      removeFromProject: 'Remove from project',\n      removeMember: 'Remove member',\n      save: 'Save',\n      start: 'Start',\n      stop: 'Stop',\n      subscribe: 'Subscribe',\n      unsubscribe: 'Unsubscribe',\n      uploadNewAvatar: 'Upload new avatar',\n    },\n  },\n};\n","import dateFns from 'date-fns/locale/ru';\n\nexport default {\n  dateFns,\n\n  format: {\n    date: 'P',\n    time: 'HH:mm',\n    dateTime: '$t(format:date) $t(format:time)',\n    longDate: 'd MMM',\n    longDateTime: \"d MMMM 'в' p\",\n  },\n\n  translation: {\n    common: {\n      email: 'E-mail',\n      emailDoesNotExist: 'Неверный e-mail',\n      invalidPassword: 'Неверный пароль',\n      logInToPlanka: 'Вход в Planka',\n      noInternetConnection: 'Нет соединения',\n      password: 'Пароль',\n      projectManagment: 'Управление проектами',\n      serverConnectionFailed: 'Не могу подключиться к серверу',\n      unknownError: 'Что-то пошло не так, попробуйте позже',\n\n      actions: 'Действия',\n      addComment: 'Добавление комментария',\n      addMember: 'Добавление участника',\n      addUser: 'Добавление пользователя',\n      administrator: 'Администратор',\n      all: 'Все',\n      allChangesWillBeAutomaticallySavedAfterConnectionRestored:\n        'Все изменения сохранятся автоматически,<br />как только подключение восстановится',\n      areYouSureYouWantToDeleteThisBoard: 'Вы уверены, что хотите удалить эту доску?',\n      areYouSureYouWantToDeleteThisCard: 'Вы уверены, что хотите удалить эту карточку?',\n      areYouSureYouWantToDeleteThisComment: 'Вы уверены, что хотите удалить этот комментарий?',\n      areYouSureYouWantToDeleteThisLabel: 'Вы уверены, что хотите удалить эту метку?',\n      areYouSureYouWantToDeleteThisList: 'Вы уверены, что хотите удалить этот список?',\n      areYouSureYouWantToDeleteThisProject: 'Вы уверены, что хотите удалить этот проект?',\n      areYouSureYouWantToDeleteThisTask: 'Вы уверены, что хотите удалить эту задачу?',\n      areYouSureYouWantToDeleteThisUser: 'Вы уверены, что хотите удалить этого пользователя?',\n      areYouSureYouWantToRemoveThisMemberFromProject:\n        'Вы уверены, что хотите удалить этого участника из проекта?',\n      boardNotFound: 'Доска не найдена',\n      cardActions: 'Действия с карточкой',\n      cardNotFound: 'Карточка не найдена',\n      cardOrActionAreDeleted: 'Карточка или действие удалены',\n      color: 'Цвет',\n      connectionRestored: 'Соединение восстановлено',\n      createBoard: 'Создание доски',\n      createLabel: 'Создание метки',\n      createNewOneOrSelectExistingOne: 'Создайте новую или выберите<br />уже существующую',\n      createProject: 'Создание проекта',\n      date: 'Дата',\n      deadline: 'Срок',\n      deleteBoard: 'Удаление доски',\n      deleteCard: 'Удаление карточки',\n      deleteComment: 'Удаление комментария',\n      deleteLabel: 'Удаление метки',\n      deleteList: 'Удаление списка',\n      deleteProject: 'Удаление проекта',\n      deleteTask: 'Удаление задачи',\n      deleteUser: 'Удаление пользователя',\n      description: 'Описание',\n      editAvatar: 'Изменение аватара',\n      editBoard: 'Изменение доски',\n      editDeadline: 'Изменение срока',\n      editLabel: 'Изменения метки',\n      editName: 'Изменение имени',\n      editProject: 'Изменение проекта',\n      editTimer: 'Изменение таймера',\n      enterCardTitle: 'Введите заголовок для этой карточки...',\n      enterDescription: 'Введите описание...',\n      enterListTitle: 'Введите заголовок списка...',\n      enterProjectTitle: 'Введите название проекта',\n      enterTaskDescription: 'Введите описание задачи...',\n      filterByLabels: 'Фильтр по меткам',\n      filterByMembers: 'Фильтр по участникам',\n      hours: 'Часы',\n      labels: 'Метки',\n      listActions: 'Действия со списком',\n      members: 'Участники',\n      minutes: 'Минуты',\n      name: 'Имя',\n      noConnectionToServer: 'Нет соединения с сервером',\n      notifications: 'Уведомления',\n      noUnreadNotifications: 'Уведомлений нет',\n      openBoard: 'Откройте доску',\n      pageNotFound: 'Страница не найдена',\n      projectNotFound: 'Доска не найдена',\n      refreshPageToLoadLastDataAndReceiveUpdates:\n        '<0>Обновите страницу</0>, чтобы загрузить<br />актуальные данные и получать обновления',\n      removeMember: 'Удаление участника',\n      seconds: 'Секунды',\n      taskActions: 'Действия с задачей',\n      tasks: 'Задачи',\n      time: 'Время',\n      timer: 'Таймер',\n      title: 'Название',\n      userAddedThisCardToList: '<0>{{user}}</0><1> добавил(а) эту карточку в {{list}}</1>',\n      userIsAlreadyExist: 'Пользователь уже существует',\n      userLeftNewCommentToCard: '{{user}} оставил(а) комментарий «{{comment}}» к <2>{{card}}</2>',\n      userMovedCardFromListToList:\n        '{{user}} переместил(а) <2>{{card}}</2> из {{fromList}} в {{toList}}',\n      userMovedThisCardFromListToList:\n        '<0>{{user}}</0><1> переместил(а) эту карточку из {{fromList}} в {{toList}}</1>',\n      users: 'Пользователи',\n      writeComment: 'Напишите комментарий...',\n    },\n\n    action: {\n      logIn: 'Войти',\n\n      addAnotherCard: 'Добавить еще одну карточку',\n      addAnotherList: 'Добавить еще один список',\n      addAnotherTask: 'Добавить еще одну задачу',\n      addCard: 'Добавить карточку',\n      addComment: 'Добавить комментарий',\n      addList: 'Добавить список',\n      addMoreDetailedDescription: 'Добавить более подробное описание',\n      addTask: 'Добавить задачу',\n      addToCard: 'Добавить на карточку',\n      addUser: 'Добавить пользователя',\n      createBoard: 'Создать доску',\n      createLabel: 'Создать метку',\n      createNewLabel: 'Создать новую метку',\n      createProject: 'Создать проект',\n      delete: 'Удалить',\n      deleteAvatar: 'Удалить аватар',\n      deleteBoard: 'Удалить доску',\n      deleteCard: 'Удалить карточку',\n      deleteComment: 'Удалить комментарий',\n      deleteLabel: 'Удалить метку',\n      deleteList: 'Удалить список',\n      deleteProject: 'Удалить проект',\n      deleteTask: 'Удалить задачу',\n      deleteUser: 'Удалить пользователя',\n      edit: 'Изменить',\n      editAvatar: 'Изменить аватар',\n      editDeadline: 'Изменить срок',\n      editDescription: 'Изменить описание',\n      editName: 'Изменить имя',\n      editTask: 'Изменить задачу',\n      editTimer: 'Изменить таймер',\n      editTitle: 'Изменить название',\n      logOut: 'Выйти',\n      remove: 'Убрать',\n      removeFromProject: 'Удалить из проекта',\n      removeMember: 'Удалить участника',\n      save: 'Сохранить',\n      start: 'Начать',\n      stop: 'Остановить',\n      subscribe: 'Подписаться',\n      unsubscribe: 'Отписаться',\n      uploadNewAvatar: 'Загрузить новый аватар',\n    },\n  },\n};\n","import i18n from 'i18next';\nimport languageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport formatDate from 'date-fns/format';\nimport parseDate from 'date-fns/parse';\nimport { registerLocale, setDefaultLocale } from 'react-datepicker';\n\nimport { embedLocales, languages } from './locales';\n\ni18n.dateFns = {\n  locales: {},\n  addLocale(language, locale) {\n    this.locales[language] = locale;\n\n    registerLocale(language, locale);\n  },\n  getLocale(language = i18n.language) {\n    return this.locales[language];\n  },\n  format(date, format, { language, ...options } = {}) {\n    return formatDate(date, format, {\n      locale: this.getLocale(language),\n      ...options,\n    });\n  },\n  parse(dateString, format, backupDate, { language, ...options } = {}) {\n    return parseDate(dateString, format, backupDate, {\n      locale: this.getLocale(language),\n      ...options,\n    });\n  },\n};\n\nconst formatDatePostProcessor = {\n  type: 'postProcessor',\n  name: 'formatDate',\n  process(value, _, options) {\n    return i18n.dateFns.format(options.value, value);\n  },\n};\n\nconst parseDatePostProcessor = {\n  type: 'postProcessor',\n  name: 'parseDate',\n  process(value, _, options) {\n    return i18n.dateFns.parse(options.value, value, new Date());\n  },\n};\n\ni18n\n  .use(languageDetector)\n  .use(formatDatePostProcessor)\n  .use(parseDatePostProcessor)\n  .use(initReactI18next)\n  .init({\n    resources: embedLocales,\n    fallbackLng: false,\n    whitelist: languages,\n    load: 'currentOnly',\n    interpolation: {\n      escapeValue: false,\n      format(value, format, language) {\n        if (value instanceof Date) {\n          return i18n.dateFns.format(value, format, {\n            language,\n          });\n        }\n\n        return value;\n      },\n    },\n    react: {\n      useSuspense: false,\n    },\n    debug: process.env.NODE_ENV !== 'production',\n  });\n\ni18n.loadAppLocale = (language) => import(`./locales/${language}/app`).then((module) => {\n  const locale = module.default;\n\n  Object.keys(locale).forEach((namespace) => {\n    if (namespace === 'dateFns') {\n      i18n.dateFns.addLocale(language, locale[namespace]);\n    } else {\n      i18n.addResourceBundle(language, namespace, locale[namespace], true, true);\n    }\n  });\n});\n\nsetDefaultLocale(i18n.language);\n\ni18n.on('languageChanged', (language) => {\n  setDefaultLocale(language);\n});\n\nexport default i18n;\n","import { call, put, select } from 'redux-saga/effects';\n\nimport { runPathActionsService } from './router';\n/* import {\n  fetchCardRequest,\n  fetchCurrentUserRequest,\n  fetchNotificationsRequest,\n  fetchProjectsRequest,\n  fetchUsersRequest,\n} from '../requests'; */\nimport { pathsMatchSelector } from '../../../selectors';\nimport { appInitialized } from '../../../actions';\nimport i18n from '../../../i18n';\n// import Paths from '../../../constants/Paths';\n\nexport function* loadLocaleService(language) {\n  try {\n    yield call(i18n.loadAppLocale, language);\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport function* initializeAppService() {\n  /* const {\n    payload: {\n      user: { isAdmin },\n    },\n  } = yield call(fetchCurrentUserRequest); // TODO: success check\n\n  if (isAdmin) {\n    yield call(fetchUsersRequest);\n  }\n\n  yield call(fetchProjectsRequest); */\n\n  const pathsMatch = yield select(pathsMatchSelector);\n\n  /* if (pathsMatch && pathsMatch.path === Paths.CARDS) {\n    yield call(fetchCardRequest, pathsMatch.params.id);\n  }\n\n  yield call(fetchNotificationsRequest); */\n  yield call(runPathActionsService, pathsMatch);\n  // yield call(loadLocaleService, i18n.language);\n\n  yield put(appInitialized());\n}\n","import { call, put, select } from 'redux-saga/effects';\n\n/* import {\n  createCardMembershipRequest,\n  createUserRequest,\n  deleteCardMembershipRequest,\n  deleteUserRequest,\n  updateUserRequest,\n  uploadUserAvatarRequest,\n} from '../requests'; */\nimport { currentUserIdSelector, pathSelector } from '../../../selectors';\nimport {\n  addUserToBoardFilter,\n  addUserToCard,\n  clearUserCreationError,\n  createUser,\n  deleteUser,\n  updateUser,\n  removeUserFromBoardFilter,\n  removeUserFromCard,\n} from '../../../actions';\n\nexport function* createUserService(data) {\n  yield put(createUser(data));\n  // yield call(createUserRequest, data);\n}\n\nexport function* clearUserCreationErrorService() {\n  yield put(clearUserCreationError());\n}\n\nexport function* updateUserService(id, data) {\n  yield put(updateUser(id, data));\n  // yield call(updateUserRequest, id, data);\n}\n\nexport function* updateCurrentUserService(data) {\n  const id = yield select(currentUserIdSelector);\n\n  yield call(updateUserService, id, data);\n}\n\nexport function* uploadCurrentUserAvatarService(/* file */) {\n  /* const id = yield select(currentUserIdSelector);\n\n  yield call(uploadUserAvatarRequest, id, file); */\n}\n\nexport function* deleteUserService(id) {\n  yield put(deleteUser(id));\n  // yield call(deleteUserRequest, id);\n}\n\nexport function* addUserToCardService(id, cardId) {\n  const currentUserId = yield select(currentUserIdSelector);\n\n  yield put(addUserToCard(id, cardId, id === currentUserId));\n  // yield call(createCardMembershipRequest, cardId, id);\n}\n\nexport function* addUserToCurrentCardService(id) {\n  const { cardId } = yield select(pathSelector);\n\n  yield call(addUserToCardService, id, cardId);\n}\n\nexport function* removeUserFromCardService(id, cardId) {\n  yield put(removeUserFromCard(id, cardId));\n  // yield call(deleteCardMembershipRequest, cardId, id);\n}\n\nexport function* removeUserFromCurrentCardService(id) {\n  const { cardId } = yield select(pathSelector);\n\n  yield call(removeUserFromCardService, id, cardId);\n}\n\nexport function* addUserToBoardFilterService(id, boardId) {\n  yield put(addUserToBoardFilter(id, boardId));\n}\n\nexport function* addUserToFilterInCurrentBoardService(id) {\n  const { boardId } = yield select(pathSelector);\n\n  yield call(addUserToBoardFilterService, id, boardId);\n}\n\nexport function* removeUserFromBoardFilterService(id, boardId) {\n  yield put(removeUserFromBoardFilter(id, boardId));\n}\n\nexport function* removeUserFromFilterInCurrentBoardService(id) {\n  const { boardId } = yield select(pathSelector);\n\n  yield call(removeUserFromBoardFilterService, id, boardId);\n}\n","import { call, put, select } from 'redux-saga/effects';\n\nimport { goToProjectService, goToRootService } from './router';\n// import { createProjectRequest, deleteProjectRequest, updateProjectRequest } from '../requests';\nimport { currentUserIdSelector, maxIdSelector, pathSelector } from '../../../selectors';\nimport { createProject, deleteProject, updateProject } from '../../../actions';\nimport { nextLocalId } from '../../../utils/local-id';\nimport { Project, ProjectMembership } from '../../../models';\n\nexport function* createProjectService(data) {\n  const userId = yield select(currentUserIdSelector);\n  const localId = nextLocalId(yield select(maxIdSelector, Project.modelName));\n  // eslint-disable-next-line max-len\n  const projectMembershipLocalId = nextLocalId(yield select(maxIdSelector, ProjectMembership.modelName));\n\n  yield put(createProject({\n    ...data,\n    id: localId,\n  }, {\n    userId,\n    id: projectMembershipLocalId,\n    projectId: localId,\n  }));\n\n  /* const {\n    success,\n    payload: { project },\n  } = yield call(createProjectRequest, data);\n\n  if (success) { */\n  yield call(goToProjectService, localId);\n  // }\n}\n\nexport function* updateProjectService(id, data) {\n  yield put(updateProject(id, data));\n  // yield call(updateProjectRequest, id, data);\n}\n\nexport function* updateCurrentProjectService(data) {\n  const { projectId } = yield select(pathSelector);\n\n  yield call(updateProjectService, projectId, data);\n}\n\nexport function* deleteProjectService(id) {\n  const { projectId } = yield select(pathSelector);\n\n  if (id === projectId) {\n    yield call(goToRootService);\n  }\n\n  yield put(deleteProject(id));\n  // yield call(deleteProjectRequest, id);\n}\n\nexport function* deleteCurrentProjectService() {\n  const { projectId } = yield select(pathSelector);\n\n  yield call(deleteProjectService, projectId);\n}\n","import { call, put, select } from 'redux-saga/effects';\n\n// import { createProjectMembershipRequest, deleteProjectMembershipRequest } from '../requests';\nimport { maxIdSelector, pathSelector } from '../../../selectors';\nimport { createProjectMembership, deleteProjectMembership } from '../../../actions';\nimport { nextLocalId } from '../../../utils/local-id';\nimport { ProjectMembership } from '../../../models';\n\nexport function* createProjectMembershipService(projectId, data) {\n  const localId = nextLocalId(yield select(maxIdSelector, ProjectMembership.modelName));\n\n  yield put(\n    createProjectMembership({\n      ...data,\n      projectId,\n      id: localId,\n    }),\n  );\n\n  // yield call(createProjectMembershipRequest, projectId, localId, data);\n}\n\nexport function* createMembershipInCurrentProjectService(data) {\n  const { projectId } = yield select(pathSelector);\n\n  yield call(createProjectMembershipService, projectId, data);\n}\n\nexport function* deleteProjectMembershipService(id) {\n  yield put(deleteProjectMembership(id));\n  // yield call(deleteProjectMembershipRequest, id);\n}\n","import { call, put, select } from 'redux-saga/effects';\n\nimport { goToBoardService, goToProjectService } from './router';\n// import { createBoardRequest, deleteBoardRequest, updateBoardRequest } from '../requests';\nimport {\n  boardByIdSelector,\n  maxIdSelector,\n  nextBoardPositionSelector,\n  pathSelector,\n} from '../../../selectors';\nimport { createBoard, deleteBoard, updateBoard } from '../../../actions';\nimport { nextLocalId } from '../../../utils/local-id';\nimport { Board } from '../../../models';\n\nexport function* createBoardService(projectId, data) {\n  const nextData = {\n    ...data,\n    position: yield select(nextBoardPositionSelector, projectId),\n  };\n\n  const localId = nextLocalId(yield select(maxIdSelector, Board.modelName));\n\n  yield put(\n    createBoard({\n      ...nextData,\n      projectId,\n      id: localId,\n    }),\n  );\n\n  /* const {\n    success,\n    payload: { board },\n  } = yield call(createBoardRequest, projectId, localId, nextData);\n\n  if (success) { */\n  yield call(goToBoardService, localId);\n  // }\n}\n\nexport function* createBoardInCurrentProjectService(data) {\n  const { projectId } = yield select(pathSelector);\n\n  yield call(createBoardService, projectId, data);\n}\n\nexport function* updateBoardService(id, data) {\n  yield put(updateBoard(id, data));\n  // yield call(updateBoardRequest, id, data);\n}\n\nexport function* moveBoardService(id, index) {\n  const { projectId } = yield select(boardByIdSelector, id);\n  const position = yield select(nextBoardPositionSelector, projectId, index, id);\n\n  yield call(updateBoardService, id, {\n    position,\n  });\n}\n\nexport function* deleteBoardService(id) {\n  const { boardId, projectId } = yield select(pathSelector);\n\n  if (id === boardId) {\n    yield call(goToProjectService, projectId);\n  }\n\n  yield put(deleteBoard(id));\n  // yield call(deleteBoardRequest, id);\n}\n","import { call, put, select } from 'redux-saga/effects';\n\n// import { createListRequest, deleteListRequest, updateListRequest } from '../requests';\nimport {\n  listByIdSelector,\n  maxIdSelector,\n  nextListPositionSelector,\n  pathSelector,\n} from '../../../selectors';\nimport { createList, deleteList, updateList } from '../../../actions';\nimport { nextLocalId } from '../../../utils/local-id';\nimport { List } from '../../../models';\n\nexport function* createListService(boardId, data) {\n  const nextData = {\n    ...data,\n    position: yield select(nextListPositionSelector, boardId),\n  };\n\n  const localId = nextLocalId(yield select(maxIdSelector, List.modelName));\n\n  yield put(\n    createList({\n      ...nextData,\n      boardId,\n      id: localId,\n    }),\n  );\n\n  // yield call(createListRequest, boardId, localId, nextData);\n}\n\nexport function* createListInCurrentBoardService(data) {\n  const { boardId } = yield select(pathSelector);\n\n  yield call(createListService, boardId, data);\n}\n\nexport function* updateListService(id, data) {\n  yield put(updateList(id, data));\n  // yield call(updateListRequest, id, data);\n}\n\nexport function* moveListService(id, index) {\n  const { boardId } = yield select(listByIdSelector, id);\n  const position = yield select(nextListPositionSelector, boardId, index, id);\n\n  yield call(updateListService, id, {\n    position,\n  });\n}\n\nexport function* deleteListService(id) {\n  yield put(deleteList(id));\n  // yield call(deleteListRequest, id);\n}\n","import { call, put, select } from 'redux-saga/effects';\n\n/* import {\n  createCardLabelRequest,\n  createLabelRequest,\n  deleteCardLabelRequest,\n  deleteLabelRequest,\n  updateLabelRequest,\n} from '../requests'; */\nimport { maxIdSelector, pathSelector } from '../../../selectors';\nimport {\n  addLabelToBoardFilter,\n  addLabelToCard,\n  createLabel,\n  deleteLabel,\n  removeLabelFromBoardFilter,\n  removeLabelFromCard,\n  updateLabel,\n} from '../../../actions';\nimport { nextLocalId } from '../../../utils/local-id';\nimport { Label } from '../../../models';\n\nexport function* createLabelService(boardId, data) {\n  const localId = nextLocalId(yield select(maxIdSelector, Label.modelName));\n\n  yield put(\n    createLabel({\n      ...data,\n      boardId,\n      id: localId,\n    }),\n  );\n\n  // yield call(createLabelRequest, boardId, localId, data);\n}\n\nexport function* createLabelInCurrentBoardService(data) {\n  const { boardId } = yield select(pathSelector);\n\n  yield call(createLabelService, boardId, data);\n}\n\nexport function* updateLabelService(id, data) {\n  yield put(updateLabel(id, data));\n  // yield call(updateLabelRequest, id, data);\n}\n\nexport function* deleteLabelService(id) {\n  yield put(deleteLabel(id));\n  // yield call(deleteLabelRequest, id);\n}\n\nexport function* addLabelToCardService(id, cardId) {\n  yield put(addLabelToCard(id, cardId));\n  // yield call(createCardLabelRequest, cardId, id);\n}\n\nexport function* addLabelToCurrentCardService(id) {\n  const { cardId } = yield select(pathSelector);\n\n  yield call(addLabelToCardService, id, cardId);\n}\n\nexport function* removeLabelFromCardService(id, cardId) {\n  yield put(removeLabelFromCard(id, cardId));\n  // yield call(deleteCardLabelRequest, cardId, id);\n}\n\nexport function* removeLabelFromCurrentCardService(id) {\n  const { cardId } = yield select(pathSelector);\n\n  yield call(removeLabelFromCardService, id, cardId);\n}\n\nexport function* addLabelToBoardFilterService(id, boardId) {\n  yield put(addLabelToBoardFilter(id, boardId));\n}\n\nexport function* addLabelToFilterInCurrentBoardService(id) {\n  const { boardId } = yield select(pathSelector);\n\n  yield call(addLabelToBoardFilterService, id, boardId);\n}\n\nexport function* removeLabelFromBoardFilterService(id, boardId) {\n  yield put(removeLabelFromBoardFilter(id, boardId));\n}\n\nexport function* removeLabelFromFilterInCurrentBoardService(id) {\n  const { boardId } = yield select(pathSelector);\n\n  yield call(removeLabelFromBoardFilterService, id, boardId);\n}\n","import { call, put, select } from 'redux-saga/effects';\n\nimport { goToBoardService } from './router';\n// import { createCardRequest, deleteCardRequest, updateCardRequest } from '../requests';\nimport {\n  listByIdSelector, maxIdSelector, nextCardPositionSelector, pathSelector,\n} from '../../../selectors';\nimport { createCard, deleteCard, updateCard } from '../../../actions';\nimport { nextLocalId } from '../../../utils/local-id';\nimport { Card } from '../../../models';\n\nexport function* createCardService(listId, data) {\n  const { boardId } = yield select(listByIdSelector, listId);\n\n  const nextData = {\n    ...data,\n    boardId,\n    position: yield select(nextCardPositionSelector, listId),\n  };\n\n  const localId = nextLocalId(yield select(maxIdSelector, Card.modelName));\n\n  yield put(\n    createCard({\n      ...nextData,\n      listId,\n      id: localId,\n    }),\n  );\n\n  // yield call(createCardRequest, listId, localId, nextData);\n}\n\nexport function* updateCardService(id, data) {\n  yield put(updateCard(id, data));\n  // yield call(updateCardRequest, id, data);\n}\n\nexport function* updateCurrentCardService(data) {\n  const { cardId } = yield select(pathSelector);\n\n  yield call(updateCardService, cardId, data);\n}\n\nexport function* moveCardService(id, listId, index) {\n  const position = yield select(nextCardPositionSelector, listId, index, id);\n\n  yield call(updateCardService, id, {\n    listId,\n    position,\n  });\n}\n\nexport function* deleteCardService(id) {\n  const { cardId, boardId } = yield select(pathSelector);\n\n  if (id === cardId) {\n    yield call(goToBoardService, boardId);\n  }\n\n  yield put(deleteCard(id));\n  // yield call(deleteCardRequest, id);\n}\n\nexport function* deleteCurrentCardService() {\n  const { cardId } = yield select(pathSelector);\n\n  yield call(deleteCardService, cardId);\n}\n","import { call, put, select } from 'redux-saga/effects';\n\n// import { createTaskRequest, deleteTaskRequest, updateTaskRequest } from '../requests';\nimport { maxIdSelector, pathSelector } from '../../../selectors';\nimport { createTask, deleteTask, updateTask } from '../../../actions';\nimport { nextLocalId } from '../../../utils/local-id';\nimport { Task } from '../../../models';\n\nexport function* createTaskService(cardId, data) {\n  const localId = nextLocalId(yield select(maxIdSelector, Task.modelName));\n\n  yield put(\n    createTask({\n      ...data,\n      cardId,\n      id: localId,\n    }),\n  );\n\n  // yield call(createTaskRequest, cardId, localId, data);\n}\n\nexport function* createTaskInCurrentCardService(data) {\n  const { cardId } = yield select(pathSelector);\n\n  yield call(createTaskService, cardId, data);\n}\n\nexport function* updateTaskService(id, data) {\n  yield put(updateTask(id, data));\n  // yield call(updateTaskRequest, id, data);\n}\n\nexport function* deleteTaskService(id) {\n  yield put(deleteTask(id));\n  // yield call(deleteTaskRequest, id);\n}\n","import { call, select } from 'redux-saga/effects';\n\n// import { fetchActionsRequest } from '../requests';\nimport { /* lastActionIdByCardIdSelector, */ pathSelector } from '../../../selectors';\n\nexport function* fetchActionsService(/* cardId */) {\n  /* const lastId = yield select(lastActionIdByCardIdSelector, cardId);\n\n  yield call(fetchActionsRequest, cardId, lastId); */\n}\n\nexport function* fetchActionsInCurrentCardService() {\n  const { cardId } = yield select(pathSelector);\n\n  yield call(fetchActionsService, cardId);\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport const ActionTypes = {\n  CREATE_CARD: 'createCard',\n  MOVE_CARD: 'moveCard',\n  COMMENT_CARD: 'commentCard',\n};\n","import { call, put, select } from 'redux-saga/effects';\n\n/* import {\n  createCommentActionRequest,\n  deleteCommentActionRequest,\n  updateCommentActionRequest,\n} from '../requests'; */\nimport { currentUserIdSelector, maxIdSelector, pathSelector } from '../../../selectors';\nimport { createCommentAction, deleteCommentAction, updateCommentAction } from '../../../actions';\nimport { nextLocalId } from '../../../utils/local-id';\nimport { Action } from '../../../models';\nimport { ActionTypes } from '../../../constants/Enums';\n\nexport function* createCommentActionService(cardId, data) {\n  const localId = nextLocalId(yield select(maxIdSelector, Action.modelName));\n  const userId = yield select(currentUserIdSelector);\n\n  yield put(\n    createCommentAction({\n      cardId,\n      userId,\n      data,\n      id: localId,\n      type: ActionTypes.COMMENT_CARD,\n    }),\n  );\n\n  // yield call(createCommentActionRequest, cardId, localId, data);\n}\n\nexport function* createCommentActionInCurrentCardService(data) {\n  const { cardId } = yield select(pathSelector);\n\n  yield call(createCommentActionService, cardId, data);\n}\n\nexport function* updateCommentActionService(id, data) {\n  yield put(updateCommentAction(id, data));\n  // yield call(updateCommentActionRequest, id, data);\n}\n\nexport function* deleteCommentActionService(id) {\n  yield put(deleteCommentAction(id));\n  // yield call(deleteCommentActionRequest, id);\n}\n","import { call } from 'redux-saga/effects';\n\nimport { deleteNotificationsService } from './notifications';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function* deleteNotificationService(id) {\n  yield call(deleteNotificationsService, [id]);\n}\n","import { takeEvery } from 'redux-saga/effects';\nimport { LOCATION_CHANGE } from 'connected-react-router';\n\nimport { locationChangedService } from '../services';\n\nexport default function* () {\n  yield takeEvery(LOCATION_CHANGE, ({ payload: { location } }) => locationChangedService(location));\n}\n","const PREFIX = '@entry';\n\nexport default {\n  PREFIX,\n\n  /* Login */\n\n  AUTHENTICATE: `${PREFIX}/AUTHENTICATE`,\n  AUTHENTICATION_ERROR_CLEAR: `${PREFIX}/AUTHENTICATION_ERROR_CLEAR`,\n  LOGOUT: `${PREFIX}/LOGOUT`,\n\n  /* Modal */\n\n  MODAL_OPEN: `${PREFIX}/MODAL_OPEN`,\n  MODAL_CLOSE: `${PREFIX}/MODAL_CLOSE`,\n\n  /* User */\n\n  USER_CREATE: `${PREFIX}/USER_CREATE`,\n  USER_CREATION_ERROR_CLEAR: `${PREFIX}/USER_CREATION_ERROR_CLEAR`,\n  USER_UPDATE: `${PREFIX}/USER_UPDATE`,\n  CURRENT_USER_UPDATE: `${PREFIX}/CURRENT_USER_UPDATE`,\n  CURRENT_USER_AVATAR_UPLOAD: `${PREFIX}/CURRENT_USER_AVATAR_UPLOAD`,\n  USER_DELETE: `${PREFIX}/USER_DELETE`,\n  USER_TO_CARD_ADD: `${PREFIX}/USER_TO_CARD_ADD`,\n  USER_TO_CURRENT_CARD_ADD: `${PREFIX}/USER_TO_CURRENT_CARD_ADD`,\n  USER_FROM_CARD_REMOVE: `${PREFIX}/USER_FROM_CARD_REMOVE`,\n  USER_FROM_CURRENT_CARD_REMOVE: `${PREFIX}/USER_FROM_CURRENT_CARD_REMOVE`,\n  USER_TO_FILTER_IN_CURRENT_BOARD_ADD: `${PREFIX}/USER_TO_FILTER_IN_CURRENT_BOARD_ADD`,\n  USER_FROM_FILTER_IN_CURRENT_BOARD_REMOVE: `${PREFIX}/USER_FROM_FILTER_IN_CURRENT_BOARD_REMOVE`,\n\n  /* Project */\n\n  PROJECT_CREATE: `${PREFIX}/PROJECT_CREATE`,\n  CURRENT_PROJECT_UPDATE: `${PREFIX}/CURRENT_PROJECT_UPDATE`,\n  CURRENT_PROJECT_DELETE: `${PREFIX}/CURRENT_PROJECT_DELETE`,\n\n  /* Project membership */\n\n  MEMBERSHIP_IN_CURRENT_PROJECT_CREATE: `${PREFIX}/MEMBERSHIP_IN_CURRENT_PROJECT_CREATE`,\n  PROJECT_MEMBERSHIP_DELETE: `${PREFIX}/PROJECT_MEMBERSHIP_DELETE`,\n\n  /* Board */\n\n  BOARD_IN_CURRENT_PROJECT_CREATE: `${PREFIX}/BOARD_IN_CURRENT_PROJECT_CREATE`,\n  BOARD_UPDATE: `${PREFIX}/BOARD_UPDATE`,\n  BOARD_MOVE: `${PREFIX}/BOARD_MOVE`,\n  BOARD_DELETE: `${PREFIX}/BOARD_DELETE`,\n\n  /* List */\n\n  LIST_IN_CURRENT_BOARD_CREATE: `${PREFIX}/LIST_IN_CURRENT_BOARD_CREATE`,\n  LIST_UPDATE: `${PREFIX}/LIST_UPDATE`,\n  LIST_MOVE: `${PREFIX}/LIST_MOVE`,\n  LIST_DELETE: `${PREFIX}/LIST_DELETE`,\n\n  /* Label */\n\n  LABEL_IN_CURRENT_BOARD_CREATE: `${PREFIX}/LABEL_IN_CURRENT_BOARD_CREATE`,\n  LABEL_UPDATE: `${PREFIX}/LABEL_UPDATE`,\n  LABEL_DELETE: `${PREFIX}/LABEL_DELETE`,\n  LABEL_TO_CARD_ADD: `${PREFIX}/LABEL_TO_CARD_ADD`,\n  LABEL_TO_CURRENT_CARD_ADD: `${PREFIX}/LABEL_TO_CURRENT_CARD_ADD`,\n  LABEL_FROM_CARD_REMOVE: `${PREFIX}/LABEL_FROM_CARD_REMOVE`,\n  LABEL_FROM_CURRENT_CARD_REMOVE: `${PREFIX}/LABEL_FROM_CURRENT_CARD_REMOVE`,\n  LABEL_TO_FILTER_IN_CURRENT_BOARD_ADD: `${PREFIX}/LABEL_TO_FILTER_IN_CURRENT_BOARD_ADD`,\n  LABEL_FROM_FILTER_IN_CURRENT_BOARD_REMOVE: `${PREFIX}/LABEL_FROM_FILTER_IN_CURRENT_BOARD_REMOVE`,\n\n  /* Card */\n\n  CARD_CREATE: `${PREFIX}/CARD_CREATE`,\n  CARD_UPDATE: `${PREFIX}/CARD_UPDATE`,\n  CURRENT_CARD_UPDATE: `${PREFIX}/CURRENT_CARD_UPDATE`,\n  CARD_MOVE: `${PREFIX}/CARD_MOVE`,\n  CARD_DELETE: `${PREFIX}/CARD_DELETE`,\n  CURRENT_CARD_DELETE: `${PREFIX}/CURRENT_CARD_DELETE`,\n\n  /* Task */\n\n  TASK_IN_CURRENT_CARD_CREATE: `${PREFIX}/TASK_IN_CURRENT_CARD_CREATE`,\n  TASK_UPDATE: `${PREFIX}/TASK_UPDATE`,\n  TASK_DELETE: `${PREFIX}/TASK_DELETE`,\n\n  /* Actions */\n\n  ACTIONS_IN_CURRENT_CARD_FETCH: `${PREFIX}/ACTIONS_IN_CURRENT_CARD_FETCH`,\n\n  /* Comment action */\n\n  COMMENT_ACTION_IN_CURRENT_CARD_CREATE: `${PREFIX}/COMMENT_ACTION_IN_CURRENT_CARD_CREATE`,\n  COMMENT_ACTION_UPDATE: `${PREFIX}/COMMENT_ACTION_UPDATE`,\n  COMMENT_ACTION_DELETE: `${PREFIX}/COMMENT_ACTION_DELETE`,\n\n  /* Notification */\n\n  NOTIFICATION_DELETE: `${PREFIX}/NOTIFICATION_DELETE`,\n};\n","import { takeLatest } from 'redux-saga/effects';\n\nimport { logoutService } from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  yield takeLatest(EntryActionTypes.LOGOUT, () => logoutService());\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { closeModalService, openModalService } from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  yield all([\n    takeLatest(EntryActionTypes.MODAL_OPEN, ({ payload: { type } }) => openModalService(type)),\n    takeLatest(EntryActionTypes.MODAL_CLOSE, () => closeModalService()),\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport {\n  addUserToCardService,\n  addUserToCurrentCardService,\n  addUserToFilterInCurrentBoardService,\n  clearUserCreationErrorService,\n  createUserService,\n  deleteUserService,\n  removeUserFromCardService,\n  removeUserFromCurrentCardService,\n  removeUserFromFilterInCurrentBoardService,\n  updateUserService,\n  updateCurrentUserService,\n  uploadCurrentUserAvatarService,\n} from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  yield all([\n    takeLatest(EntryActionTypes.USER_CREATE, ({ payload: { data } }) => createUserService(data)),\n    takeLatest(EntryActionTypes.USER_CREATION_ERROR_CLEAR, () => clearUserCreationErrorService()),\n    /* eslint-disable max-len */\n    takeLatest(EntryActionTypes.USER_UPDATE, ({ payload: { id, data } }) => updateUserService(id, data)),\n    takeLatest(EntryActionTypes.CURRENT_USER_UPDATE, ({ payload: { data } }) => updateCurrentUserService(data)),\n    takeLatest(EntryActionTypes.CURRENT_USER_AVATAR_UPLOAD, ({ payload: { file } }) => uploadCurrentUserAvatarService(file)),\n    /* eslint-enable max-len */\n    takeLatest(EntryActionTypes.USER_DELETE, ({ payload: { id } }) => deleteUserService(id)),\n    /* eslint-disable max-len */\n    takeLatest(EntryActionTypes.USER_TO_CARD_ADD, ({ payload: { id, cardId } }) => addUserToCardService(id, cardId)),\n    takeLatest(EntryActionTypes.USER_TO_CURRENT_CARD_ADD, ({ payload: { id } }) => addUserToCurrentCardService(id)),\n    takeLatest(EntryActionTypes.USER_FROM_CARD_REMOVE, ({ payload: { id, cardId } }) => removeUserFromCardService(id, cardId)),\n    takeLatest(EntryActionTypes.USER_FROM_CURRENT_CARD_REMOVE, ({ payload: { id } }) => removeUserFromCurrentCardService(id)),\n    takeLatest(EntryActionTypes.USER_TO_FILTER_IN_CURRENT_BOARD_ADD, ({ payload: { id } }) => addUserToFilterInCurrentBoardService(id)),\n    takeLatest(EntryActionTypes.USER_FROM_FILTER_IN_CURRENT_BOARD_REMOVE, ({ payload: { id } }) => removeUserFromFilterInCurrentBoardService(id)),\n    /* eslint-enable max-len */\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport {\n  createProjectService,\n  deleteCurrentProjectService,\n  updateCurrentProjectService,\n} from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  yield all([\n    /* eslint-disable max-len */\n    takeLatest(EntryActionTypes.PROJECT_CREATE, ({ payload: { data } }) => createProjectService(data)),\n    takeLatest(EntryActionTypes.CURRENT_PROJECT_UPDATE, ({ payload: { data } }) => updateCurrentProjectService(data)),\n    /* eslint-enable max-len */\n    takeLatest(EntryActionTypes.CURRENT_PROJECT_DELETE, () => deleteCurrentProjectService()),\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport {\n  createMembershipInCurrentProjectService,\n  deleteProjectMembershipService,\n} from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  yield all([\n    /* eslint-disable max-len */\n    takeLatest(EntryActionTypes.MEMBERSHIP_IN_CURRENT_PROJECT_CREATE, ({ payload: { data } }) => createMembershipInCurrentProjectService(data)),\n    takeLatest(EntryActionTypes.PROJECT_MEMBERSHIP_DELETE, ({ payload: { id } }) => deleteProjectMembershipService(id)),\n    /* eslint-enable max-len */\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport {\n  createBoardInCurrentProjectService,\n  deleteBoardService,\n  moveBoardService,\n  updateBoardService,\n} from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  yield all([\n    /* eslint-disable max-len */\n    takeLatest(EntryActionTypes.BOARD_IN_CURRENT_PROJECT_CREATE, ({ payload: { data } }) => createBoardInCurrentProjectService(data)),\n    takeLatest(EntryActionTypes.BOARD_UPDATE, ({ payload: { id, data } }) => updateBoardService(id, data)),\n    takeLatest(EntryActionTypes.BOARD_MOVE, ({ payload: { id, index } }) => moveBoardService(id, index)),\n    /* eslint-enable max-len */\n    takeLatest(EntryActionTypes.BOARD_DELETE, ({ payload: { id } }) => deleteBoardService(id)),\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport {\n  createListInCurrentBoardService,\n  deleteListService,\n  moveListService,\n  updateListService,\n} from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  yield all([\n    /* eslint-disable max-len */\n    takeLatest(EntryActionTypes.LIST_IN_CURRENT_BOARD_CREATE, ({ payload: { data } }) => createListInCurrentBoardService(data)),\n    takeLatest(EntryActionTypes.LIST_UPDATE, ({ payload: { id, data } }) => updateListService(id, data)),\n    takeLatest(EntryActionTypes.LIST_MOVE, ({ payload: { id, index } }) => moveListService(id, index)),\n    /* eslint-enable max-len */\n    takeLatest(EntryActionTypes.LIST_DELETE, ({ payload: { id } }) => deleteListService(id)),\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport {\n  addLabelToCardService,\n  addLabelToCurrentCardService,\n  addLabelToFilterInCurrentBoardService,\n  createLabelInCurrentBoardService,\n  deleteLabelService,\n  removeLabelFromCardService,\n  removeLabelFromCurrentCardService,\n  removeLabelFromFilterInCurrentBoardService,\n  updateLabelService,\n} from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  yield all([\n    /* eslint-disable max-len */\n    takeLatest(EntryActionTypes.LABEL_IN_CURRENT_BOARD_CREATE, ({ payload: { data } }) => createLabelInCurrentBoardService(data)),\n    takeLatest(EntryActionTypes.LABEL_UPDATE, ({ payload: { id, data } }) => updateLabelService(id, data)),\n    /* eslint-enable max-len */\n    takeLatest(EntryActionTypes.LABEL_DELETE, ({ payload: { id } }) => deleteLabelService(id)),\n    /* eslint-disable max-len */\n    takeLatest(EntryActionTypes.LABEL_TO_CARD_ADD, ({ payload: { id, cardId } }) => addLabelToCardService(id, cardId)),\n    takeLatest(EntryActionTypes.LABEL_TO_CURRENT_CARD_ADD, ({ payload: { id } }) => addLabelToCurrentCardService(id)),\n    takeLatest(EntryActionTypes.LABEL_FROM_CARD_REMOVE, ({ payload: { id, cardId } }) => removeLabelFromCardService(id, cardId)),\n    takeLatest(EntryActionTypes.LABEL_FROM_CURRENT_CARD_REMOVE, ({ payload: { id } }) => removeLabelFromCurrentCardService(id)),\n    takeLatest(EntryActionTypes.LABEL_TO_FILTER_IN_CURRENT_BOARD_ADD, ({ payload: { id } }) => addLabelToFilterInCurrentBoardService(id)),\n    takeLatest(EntryActionTypes.LABEL_FROM_FILTER_IN_CURRENT_BOARD_REMOVE, ({ payload: { id } }) => removeLabelFromFilterInCurrentBoardService(id)),\n    /* eslint-enable max-len */\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport {\n  createCardService,\n  deleteCardService,\n  deleteCurrentCardService,\n  moveCardService,\n  updateCardService,\n  updateCurrentCardService,\n} from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  yield all([\n    /* eslint-disable max-len */\n    takeLatest(EntryActionTypes.CARD_CREATE, ({ payload: { listId, data } }) => createCardService(listId, data)),\n    takeLatest(EntryActionTypes.CARD_UPDATE, ({ payload: { id, data } }) => updateCardService(id, data)),\n    takeLatest(EntryActionTypes.CURRENT_CARD_UPDATE, ({ payload: { data } }) => updateCurrentCardService(data)),\n    takeLatest(EntryActionTypes.CARD_MOVE, ({ payload: { id, listId, index } }) => moveCardService(id, listId, index)),\n    /* eslint-enable max-len */\n    takeLatest(EntryActionTypes.CARD_DELETE, ({ payload: { id } }) => deleteCardService(id)),\n    takeLatest(EntryActionTypes.CURRENT_CARD_DELETE, () => deleteCurrentCardService()),\n  ]);\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { createTaskInCurrentCardService, deleteTaskService, updateTaskService } from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  yield all([\n    /* eslint-disable max-len */\n    takeLatest(EntryActionTypes.TASK_IN_CURRENT_CARD_CREATE, ({ payload: { data } }) => createTaskInCurrentCardService(data)),\n    takeLatest(EntryActionTypes.TASK_UPDATE, ({ payload: { id, data } }) => updateTaskService(id, data)),\n    /* eslint-enable max-len */\n    takeLatest(EntryActionTypes.TASK_DELETE, ({ payload: { id } }) => deleteTaskService(id)),\n  ]);\n}\n","import { takeLatest } from 'redux-saga/effects';\n\nimport { fetchActionsInCurrentCardService } from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  // eslint-disable-next-line max-len\n  yield takeLatest(EntryActionTypes.ACTIONS_IN_CURRENT_CARD_FETCH, () => fetchActionsInCurrentCardService());\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport {\n  createCommentActionInCurrentCardService,\n  deleteCommentActionService,\n  updateCommentActionService,\n} from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  yield all([\n    /* eslint-disable max-len */\n    takeLatest(EntryActionTypes.COMMENT_ACTION_IN_CURRENT_CARD_CREATE, ({ payload: { data } }) => createCommentActionInCurrentCardService(data)),\n    takeLatest(EntryActionTypes.COMMENT_ACTION_UPDATE, ({ payload: { id, data } }) => updateCommentActionService(id, data)),\n    takeLatest(EntryActionTypes.COMMENT_ACTION_DELETE, ({ payload: { id } }) => deleteCommentActionService(id)),\n    /* eslint-enable max-len */\n  ]);\n}\n","import { takeLatest } from 'redux-saga/effects';\n\nimport { deleteNotificationService } from '../services';\nimport EntryActionTypes from '../../../constants/EntryActionTypes';\n\nexport default function* () {\n  // eslint-disable-next-line max-len\n  yield takeLatest(EntryActionTypes.NOTIFICATION_DELETE, ({ payload: { id } }) => deleteNotificationService(id));\n}\n","import router from './router';\n// import socket from './socket';\nimport login from './login';\nimport modal from './modal';\nimport user from './user';\nimport project from './project';\nimport projectMembership from './project-membership';\nimport board from './board';\nimport list from './list';\nimport label from './label';\nimport card from './card';\nimport task from './task';\nimport actions from './actions';\nimport commentAction from './comment-action';\nimport notification from './notification';\n\nexport default [\n  router,\n  // socket,\n  login,\n  modal,\n  user,\n  project,\n  projectMembership,\n  board,\n  list,\n  label,\n  card,\n  task,\n  actions,\n  commentAction,\n  notification,\n];\n","import {\n  all, call, fork, take,\n} from 'redux-saga/effects';\n\nimport watchers from './watchers';\nimport { initializeAppService } from './services';\n/* import { socket } from '../../api';\nimport { removeAccessToken } from '../../utils/access-token-storage'; */\nimport ActionTypes from '../../constants/ActionTypes';\n// import Paths from '../../constants/Paths';\n\nexport default function* () {\n  yield all(watchers.map((watcher) => fork(watcher)));\n\n  // yield call([socket, socket.connect]);\n  yield call(initializeAppService);\n\n  yield take(ActionTypes.LOGOUT);\n  /* yield call(removeAccessToken);\n\n  window.location.href = Paths.LOGIN; */\n\n  window.location.reload(true);\n}\n","import { call /* , select */ } from 'redux-saga/effects';\n\n// import loginSaga from './login';\nimport appSaga from './app';\n// import { accessTokenSelector } from '../selectors';\n\nexport default function* () {\n  /* const accessToken = yield select(accessTokenSelector);\n\n  if (!accessToken) {\n    yield call(loginSaga);\n  } */\n\n  yield call(appSaga);\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\nimport history from './history';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, routerMiddleware(history)];\n\nif (process.env.NODE_ENV !== 'production') {\n  const { logger } = require('redux-logger'); // eslint-disable-line global-require\n\n  middlewares.push(logger);\n}\n\nconst preloadedState = {\n  db: {\n    User: {\n      items: [\n        1,\n        2,\n        3,\n      ],\n      itemsById: {\n        1: {\n          id: 1,\n          createdAt: new Date('2019-08-30T23:31:59.000Z'),\n          updatedAt: new Date('2019-08-30T23:31:59.000Z'),\n          email: 'user1@mail.com',\n          isAdmin: true,\n          name: 'User One',\n          avatar: null,\n          deletedAt: null,\n          isAvatarUploading: false,\n        },\n        2: {\n          id: 2,\n          createdAt: new Date('2019-08-30T23:31:59.000Z'),\n          updatedAt: new Date('2019-08-30T23:31:59.000Z'),\n          email: 'user2@mail.com',\n          isAdmin: true,\n          name: 'User Two',\n          avatar: null,\n          deletedAt: null,\n          isAvatarUploading: false,\n        },\n        3: {\n          id: 3,\n          createdAt: new Date('2019-08-30T23:31:59.000Z'),\n          updatedAt: new Date('2019-08-30T23:31:59.000Z'),\n          email: 'user3@mail.com',\n          isAdmin: true,\n          name: 'User Three',\n          avatar: null,\n          deletedAt: null,\n          isAvatarUploading: false,\n        },\n      },\n      indexes: {},\n      meta: {\n        maxId: 3,\n      },\n    },\n    Project: {\n      items: [\n        1,\n      ],\n      itemsById: {\n        1: {\n          id: 1,\n          createdAt: new Date('2019-09-04T14:08:18.000Z'),\n          updatedAt: new Date('2019-09-04T15:17:25.000Z'),\n          name: 'Demo project',\n        },\n      },\n      indexes: {},\n      meta: {\n        maxId: 1,\n      },\n    },\n    ProjectMembership: {\n      items: [\n        1,\n        3,\n        4,\n      ],\n      itemsById: {\n        1: {\n          id: 1,\n          createdAt: new Date('2019-09-04T14:08:18.000Z'),\n          updatedAt: null,\n          projectId: 1,\n          userId: 1,\n        },\n        3: {\n          id: 3,\n          createdAt: new Date('2019-09-04T15:21:33.000Z'),\n          updatedAt: null,\n          projectId: 1,\n          userId: 2,\n        },\n        4: {\n          id: 4,\n          createdAt: new Date('2019-09-04T15:21:35.000Z'),\n          updatedAt: null,\n          projectId: 1,\n          userId: 3,\n        },\n      },\n      indexes: {\n        projectId: {\n          1: [\n            1,\n            3,\n            4,\n          ],\n        },\n        userId: {\n          1: [\n            1,\n          ],\n          2: [\n            3,\n          ],\n          3: [\n            4,\n          ],\n        },\n      },\n      meta: {\n        maxId: 4,\n      },\n    },\n    Board: {\n      items: [\n        1,\n        2,\n      ],\n      itemsById: {\n        1: {\n          id: 1,\n          createdAt: new Date('2019-09-04T14:08:27.000Z'),\n          updatedAt: null,\n          position: 65535,\n          name: 'Marketing',\n          projectId: 1,\n          isFetching: false,\n        },\n        2: {\n          id: 2,\n          createdAt: new Date('2019-09-04T14:08:30.000Z'),\n          updatedAt: new Date('2019-09-04T15:22:40.000Z'),\n          position: 131070,\n          name: 'Development',\n          projectId: 1,\n          isFetching: false,\n        },\n      },\n      indexes: {\n        projectId: {\n          1: [\n            1,\n            2,\n          ],\n        },\n      },\n      meta: {\n        maxId: 4,\n      },\n    },\n    List: {\n      items: [\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n      ],\n      itemsById: {\n        1: {\n          id: 1,\n          createdAt: new Date('2019-09-04T15:23:10.000Z'),\n          updatedAt: null,\n          position: 65535,\n          name: 'Ideas',\n          boardId: 1,\n        },\n        2: {\n          id: 2,\n          createdAt: new Date('2019-09-04T15:23:11.000Z'),\n          updatedAt: null,\n          position: 131070,\n          name: 'Todo',\n          boardId: 1,\n        },\n        3: {\n          id: 3,\n          createdAt: new Date('2019-09-04T15:23:12.000Z'),\n          updatedAt: null,\n          position: 196605,\n          name: 'Doing',\n          boardId: 1,\n        },\n        4: {\n          id: 4,\n          createdAt: new Date('2019-09-04T15:23:13.000Z'),\n          updatedAt: null,\n          position: 262140,\n          name: 'Done',\n          boardId: 1,\n        },\n        5: {\n          id: 5,\n          createdAt: new Date('2019-09-04T15:23:17.000Z'),\n          updatedAt: null,\n          position: 65535,\n          name: 'Bugs',\n          boardId: 2,\n        },\n        6: {\n          id: 6,\n          createdAt: new Date('2019-09-04T15:23:18.000Z'),\n          updatedAt: null,\n          position: 131070,\n          name: 'Todo',\n          boardId: 2,\n        },\n        7: {\n          id: 7,\n          createdAt: new Date('2019-09-04T15:23:20.000Z'),\n          updatedAt: null,\n          position: 196605,\n          name: 'Doing',\n          boardId: 2,\n        },\n        8: {\n          id: 8,\n          createdAt: new Date('2019-09-04T15:23:20.000Z'),\n          updatedAt: null,\n          position: 262140,\n          name: 'Done',\n          boardId: 2,\n        },\n      },\n      indexes: {\n        boardId: {\n          1: [\n            1,\n            2,\n            3,\n            4,\n          ],\n          2: [\n            5,\n            6,\n            7,\n            8,\n          ],\n        },\n      },\n      meta: {\n        maxId: 15.156761059011199,\n      },\n    },\n    Label: {\n      items: [\n        1,\n        2,\n        4,\n        5,\n        6,\n      ],\n      itemsById: {\n        1: {\n          id: 1,\n          createdAt: new Date('2019-09-04T15:30:31.000Z'),\n          updatedAt: null,\n          name: 'Label 1',\n          color: 'black',\n          boardId: 1,\n        },\n        2: {\n          id: 2,\n          createdAt: new Date('2019-09-04T15:32:27.000Z'),\n          updatedAt: null,\n          name: 'Label 2',\n          color: 'red',\n          boardId: 1,\n        },\n        4: {\n          id: 4,\n          createdAt: new Date('2019-09-04T15:36:50.000Z'),\n          updatedAt: null,\n          name: 'GitHub',\n          color: 'black',\n          boardId: 2,\n        },\n        5: {\n          id: 5,\n          createdAt: new Date('2019-09-04T15:37:15.000Z'),\n          updatedAt: null,\n          name: 'Server',\n          color: 'green',\n          boardId: 2,\n        },\n        6: {\n          id: 6,\n          createdAt: new Date('2019-09-04T15:37:18.000Z'),\n          updatedAt: null,\n          name: 'Client',\n          color: 'yellow',\n          boardId: 2,\n        },\n      },\n      indexes: {\n        boardId: {\n          1: [\n            1,\n            2,\n          ],\n          2: [\n            4,\n            5,\n            6,\n          ],\n        },\n      },\n      meta: {\n        maxId: 11.156761103151,\n      },\n    },\n    Card: {\n      items: [\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n      ],\n      itemsById: {\n        1: {\n          id: 1,\n          createdAt: new Date('2019-09-04T15:24:26.000Z'),\n          updatedAt: new Date('2019-09-04T15:40:17.000Z'),\n          position: 32767.5,\n          name: 'Markdown description example',\n          description: '# h1 Heading\\n## h2 Heading\\n### h3 Heading\\n#### h4 Heading\\n##### h5 Heading\\n###### h6 Heading\\n\\n\\n## Horizontal Rules\\n\\n___\\n---\\n***\\n\\n\\n## Emphasis\\n\\n**This is bold text**\\n__This is bold text__\\n*This is italic text*\\n_This is italic text_\\n~~Strikethrough~~\\n\\n\\n## Lists\\n\\n### Unordered\\n\\n+ Create a list by starting a line with `+`, `-`, or `*`\\n+ Sub-lists are made by indenting 2 spaces:\\n  - Marker character change forces new list start:\\n    * Ac tristique libero volutpat at\\n    + Facilisis in pretium nisl aliquet\\n    - Nulla volutpat aliquam velit\\n+ Very easy!\\n\\n### Ordered\\n\\n1. Lorem ipsum dolor sit amet\\n2. Consectetur adipiscing elit\\n3. Integer molestie lorem at massa\\n\\n\\n1. You can use sequential numbers...\\n1. ...or keep all the numbers as `1.`\\n\\n\\n## Links\\n\\n[link text](https://github.com/plankanban/planka)\\n\\n[link with title](https://github.com/plankanban/planka \"title text!\")\\n\\nAutoconverted link https://github.com/plankanban/planka\\n\\n\\n## Images\\n\\n![Minion](https://octodex.github.com/images/minion.png)\\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")',\n          deadline: new Date('2019-12-31T07:00:00.000Z'),\n          timer: null,\n          listId: 3,\n          boardId: 1,\n          isSubscribed: true,\n          isActionsFetching: false,\n          isAllActionsFetched: true,\n        },\n        2: {\n          id: 2,\n          createdAt: new Date('2019-09-04T15:25:17.000Z'),\n          updatedAt: null,\n          position: 131070,\n          name: 'Another amazing idea',\n          description: null,\n          deadline: null,\n          timer: null,\n          listId: 1,\n          boardId: 1,\n          isSubscribed: false,\n          isActionsFetching: false,\n          isAllActionsFetched: false,\n        },\n        3: {\n          id: 3,\n          createdAt: new Date('2019-09-04T15:26:11.000Z'),\n          updatedAt: null,\n          position: 65535,\n          name: 'Fill Instagram account',\n          description: 'Very big description..',\n          deadline: new Date('2019-09-28T07:00:00.000Z'),\n          timer: {\n            startedAt: new Date('2019-09-04T15:27:04.776Z'),\n            total: 79204,\n          },\n          listId: 3,\n          boardId: 1,\n          isSubscribed: true,\n          isActionsFetching: false,\n          isAllActionsFetched: true,\n        },\n        4: {\n          id: 4,\n          createdAt: new Date('2019-09-04T15:29:53.000Z'),\n          updatedAt: null,\n          position: 131070,\n          name: 'Amazing idea 1',\n          description: null,\n          deadline: null,\n          timer: null,\n          listId: 2,\n          boardId: 1,\n          isSubscribed: false,\n          isActionsFetching: false,\n          isAllActionsFetched: false,\n        },\n        5: {\n          id: 5,\n          createdAt: new Date('2019-09-04T15:29:55.000Z'),\n          updatedAt: null,\n          position: 196605,\n          name: 'Amazing idea 2',\n          description: null,\n          deadline: new Date('2019-11-30T07:00:00.000Z'),\n          timer: null,\n          listId: 2,\n          boardId: 1,\n          isSubscribed: false,\n          isActionsFetching: false,\n          isAllActionsFetched: false,\n        },\n        6: {\n          id: 6,\n          createdAt: new Date('2019-09-04T15:29:56.000Z'),\n          updatedAt: null,\n          position: 262140,\n          name: 'Amazing idea 3',\n          description: null,\n          deadline: null,\n          timer: null,\n          listId: 2,\n          boardId: 1,\n          isSubscribed: false,\n          isActionsFetching: false,\n          isAllActionsFetched: false,\n        },\n        7: {\n          id: 7,\n          createdAt: new Date('2019-09-04T15:34:27.000Z'),\n          updatedAt: null,\n          position: 65535,\n          name: 'Public boards',\n          description: null,\n          deadline: null,\n          timer: null,\n          listId: 6,\n          boardId: 2,\n          isSubscribed: true,\n          isActionsFetching: false,\n          isAllActionsFetched: true,\n        },\n        8: {\n          id: 8,\n          createdAt: new Date('2019-09-04T15:34:40.000Z'),\n          updatedAt: null,\n          position: 131070,\n          name: 'Docker',\n          description: null,\n          deadline: null,\n          timer: null,\n          listId: 6,\n          boardId: 2,\n          isSubscribed: false,\n          isActionsFetching: false,\n          isAllActionsFetched: true,\n        },\n        9: {\n          id: 9,\n          createdAt: new Date('2019-09-04T15:34:53.000Z'),\n          updatedAt: new Date('2019-09-04T15:35:37.000Z'),\n          position: 65535,\n          name: 'Online demo',\n          description: null,\n          deadline: new Date('2019-09-05T07:00:00.000Z'),\n          timer: {\n            total: 7202,\n            startedAt: new Date('2019-09-04T15:35:37.241Z'),\n          },\n          listId: 7,\n          boardId: 2,\n          isSubscribed: true,\n          isActionsFetching: false,\n          isAllActionsFetched: true,\n        },\n        10: {\n          id: 10,\n          createdAt: new Date('2019-09-04T15:36:20.000Z'),\n          updatedAt: null,\n          position: 65535,\n          name: 'Filters',\n          description: null,\n          deadline: null,\n          timer: null,\n          listId: 8,\n          boardId: 2,\n          isSubscribed: true,\n          isActionsFetching: false,\n          isAllActionsFetched: false,\n        },\n        11: {\n          id: 11,\n          createdAt: new Date('2019-09-04T15:36:22.000Z'),\n          updatedAt: null,\n          position: 131070,\n          name: 'Notifications',\n          description: null,\n          deadline: null,\n          timer: null,\n          listId: 8,\n          boardId: 2,\n          isSubscribed: false,\n          isActionsFetching: false,\n          isAllActionsFetched: false,\n        },\n      },\n      indexes: {\n        listId: {\n          1: [\n            2,\n          ],\n          2: [\n            4,\n            5,\n            6,\n          ],\n          3: [\n            3,\n            1,\n          ],\n          6: [\n            7,\n            8,\n          ],\n          7: [\n            9,\n          ],\n          8: [\n            10,\n            11,\n          ],\n        },\n        boardId: {\n          1: [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n          ],\n          2: [\n            7,\n            8,\n            9,\n            10,\n            11,\n          ],\n        },\n      },\n      meta: {\n        maxId: 21.1567610666438,\n      },\n    },\n    Task: {\n      items: [\n        1,\n        2,\n        3,\n        4,\n        5,\n      ],\n      itemsById: {\n        1: {\n          id: 1,\n          createdAt: new Date('2019-09-04T15:27:18.000Z'),\n          updatedAt: null,\n          name: 'Create account',\n          isCompleted: true,\n          cardId: 3,\n        },\n        2: {\n          id: 2,\n          createdAt: new Date('2019-09-04T15:27:23.000Z'),\n          updatedAt: null,\n          name: 'Make a post',\n          isCompleted: false,\n          cardId: 3,\n        },\n        3: {\n          id: 3,\n          createdAt: new Date('2019-09-04T15:38:45.000Z'),\n          updatedAt: null,\n          name: 'Create GitHub Pages repo',\n          isCompleted: true,\n          cardId: 9,\n        },\n        4: {\n          id: 4,\n          createdAt: new Date('2019-09-04T15:39:01.000Z'),\n          updatedAt: null,\n          name: 'Change code for offline version',\n          isCompleted: true,\n          cardId: 9,\n        },\n        5: {\n          id: 5,\n          createdAt: new Date('2019-09-04T15:39:07.000Z'),\n          updatedAt: null,\n          name: 'Deploy',\n          isCompleted: false,\n          cardId: 9,\n        },\n      },\n      indexes: {\n        cardId: {\n          3: [\n            1,\n            2,\n          ],\n          9: [\n            3,\n            4,\n            5,\n          ],\n        },\n      },\n      meta: {\n        maxId: 9.1567610838953,\n      },\n    },\n    Action: {\n      items: [\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        16,\n      ],\n      itemsById: {\n        1: {\n          id: 1,\n          createdAt: new Date('2019-09-04T15:24:26.000Z'),\n          updatedAt: null,\n          type: 'createCard',\n          data: {\n            list: {\n              id: 1,\n              name: 'Ideas',\n            },\n          },\n          cardId: 1,\n          userId: 1,\n          isInCard: true,\n        },\n        2: {\n          id: 2,\n          createdAt: new Date('2019-09-04T15:25:17.000Z'),\n          updatedAt: null,\n          type: 'createCard',\n          data: {\n            list: {\n              id: 1,\n              name: 'Ideas',\n            },\n          },\n          cardId: 2,\n          userId: 1,\n          isInCard: true,\n        },\n        3: {\n          id: 3,\n          createdAt: new Date('2019-09-04T15:26:11.000Z'),\n          updatedAt: null,\n          type: 'createCard',\n          data: {\n            list: {\n              id: 3,\n              name: 'Doing',\n            },\n          },\n          cardId: 3,\n          userId: 1,\n          isInCard: true,\n        },\n        4: {\n          id: 4,\n          createdAt: new Date('2019-09-04T15:29:43.000Z'),\n          updatedAt: null,\n          type: 'moveCard',\n          data: {\n            toList: {\n              id: 2,\n              name: 'Todo',\n            },\n            fromList: {\n              id: 1,\n              name: 'Ideas',\n            },\n          },\n          cardId: 1,\n          userId: 1,\n          isInCard: true,\n        },\n        5: {\n          id: 5,\n          createdAt: new Date('2019-09-04T15:29:53.000Z'),\n          updatedAt: null,\n          type: 'createCard',\n          data: {\n            list: {\n              id: 2,\n              name: 'Todo',\n            },\n          },\n          cardId: 4,\n          userId: 1,\n          isInCard: true,\n        },\n        6: {\n          id: 6,\n          createdAt: new Date('2019-09-04T15:29:55.000Z'),\n          updatedAt: null,\n          type: 'createCard',\n          data: {\n            list: {\n              id: 2,\n              name: 'Todo',\n            },\n          },\n          cardId: 5,\n          userId: 1,\n          isInCard: true,\n        },\n        7: {\n          id: 7,\n          createdAt: new Date('2019-09-04T15:29:56.000Z'),\n          updatedAt: null,\n          type: 'createCard',\n          data: {\n            list: {\n              id: 2,\n              name: 'Todo',\n            },\n          },\n          cardId: 6,\n          userId: 1,\n          isInCard: true,\n        },\n        8: {\n          id: 8,\n          createdAt: new Date('2019-09-04T15:34:27.000Z'),\n          updatedAt: null,\n          type: 'createCard',\n          data: {\n            list: {\n              id: 6,\n              name: 'Todo',\n            },\n          },\n          cardId: 7,\n          userId: 1,\n          isInCard: true,\n        },\n        9: {\n          id: 9,\n          createdAt: new Date('2019-09-04T15:34:40.000Z'),\n          updatedAt: null,\n          type: 'createCard',\n          data: {\n            list: {\n              id: 6,\n              name: 'Todo',\n            },\n          },\n          cardId: 8,\n          userId: 1,\n          isInCard: true,\n        },\n        10: {\n          id: 10,\n          createdAt: new Date('2019-09-04T15:34:53.000Z'),\n          updatedAt: null,\n          type: 'createCard',\n          data: {\n            list: {\n              id: 6,\n              name: 'Todo',\n            },\n          },\n          cardId: 9,\n          userId: 1,\n          isInCard: true,\n        },\n        11: {\n          id: 11,\n          createdAt: new Date('2019-09-04T15:35:23.000Z'),\n          updatedAt: null,\n          type: 'moveCard',\n          data: {\n            toList: {\n              id: 7,\n              name: 'Doing',\n            },\n            fromList: {\n              id: 6,\n              name: 'Todo',\n            },\n          },\n          cardId: 9,\n          userId: 1,\n          isInCard: true,\n        },\n        12: {\n          id: 12,\n          createdAt: new Date('2019-09-04T15:36:20.000Z'),\n          updatedAt: null,\n          type: 'createCard',\n          data: {\n            list: {\n              id: 8,\n              name: 'Done',\n            },\n          },\n          cardId: 10,\n          userId: 1,\n          isInCard: true,\n        },\n        13: {\n          id: 13,\n          createdAt: new Date('2019-09-04T15:36:22.000Z'),\n          updatedAt: null,\n          type: 'createCard',\n          data: {\n            list: {\n              id: 8,\n              name: 'Done',\n            },\n          },\n          cardId: 11,\n          userId: 1,\n          isInCard: true,\n        },\n        14: {\n          id: 14,\n          createdAt: new Date('2019-09-04T15:40:17.000Z'),\n          updatedAt: null,\n          type: 'moveCard',\n          data: {\n            toList: {\n              id: 3,\n              name: 'Doing',\n            },\n            fromList: {\n              id: 2,\n              name: 'Todo',\n            },\n          },\n          cardId: 1,\n          userId: 2,\n          isInCard: true,\n        },\n        16: {\n          id: 16,\n          createdAt: new Date('2019-09-04T15:41:53.000Z'),\n          updatedAt: null,\n          type: 'commentCard',\n          data: {\n            text: 'You are doing a good job!',\n          },\n          cardId: 9,\n          userId: 2,\n          isInCard: true,\n        },\n      },\n      indexes: {\n        cardId: {\n          1: [\n            1,\n            4,\n            14,\n          ],\n          2: [\n            2,\n          ],\n          3: [\n            3,\n          ],\n          4: [\n            5,\n          ],\n          5: [\n            6,\n          ],\n          6: [\n            7,\n          ],\n          7: [\n            8,\n          ],\n          8: [\n            9,\n          ],\n          9: [\n            10,\n            11,\n            16,\n          ],\n          10: [\n            12,\n          ],\n          11: [\n            13,\n          ],\n        },\n        userId: {\n          1: [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n          ],\n          2: [\n            14,\n            16,\n          ],\n        },\n      },\n      meta: {\n        maxId: 16,\n      },\n    },\n    Notification: {\n      items: [\n        2,\n        5,\n      ],\n      itemsById: {\n        2: {\n          id: 2,\n          createdAt: new Date('2019-09-04T15:40:17.000Z'),\n          updatedAt: null,\n          isRead: false,\n          userId: 1,\n          actionId: 14,\n          cardId: 1,\n        },\n        5: {\n          id: 5,\n          createdAt: new Date('2019-09-04T15:41:53.000Z'),\n          updatedAt: null,\n          isRead: false,\n          userId: 1,\n          actionId: 16,\n          cardId: 9,\n        },\n      },\n      indexes: {\n        userId: {\n          1: [\n            2,\n            5,\n          ],\n        },\n        actionId: {\n          14: [\n            2,\n          ],\n          16: [\n            5,\n          ],\n        },\n        cardId: {\n          1: [\n            2,\n          ],\n          9: [\n            5,\n          ],\n        },\n      },\n      meta: {\n        maxId: 5,\n      },\n    },\n    BoardFilterUsers: {\n      items: [],\n      itemsById: {},\n      indexes: {\n        fromBoardId: {\n          2: [],\n        },\n        toUserId: {\n          1: [],\n        },\n      },\n      meta: {\n        maxId: 1,\n      },\n    },\n    BoardFilterLabels: {\n      items: [],\n      itemsById: {},\n      indexes: {\n        fromBoardId: {\n          2: [],\n        },\n        toLabelId: {\n          4: [],\n          5: [],\n          6: [],\n        },\n      },\n      meta: {\n        maxId: 2,\n      },\n    },\n    CardUsers: {\n      items: [\n        0,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n      ],\n      itemsById: {\n        0: {\n          toUserId: 1,\n          fromCardId: 1,\n          id: 0,\n        },\n        1: {\n          toUserId: 2,\n          fromCardId: 2,\n          id: 1,\n        },\n        2: {\n          toUserId: 3,\n          fromCardId: 3,\n          id: 2,\n        },\n        3: {\n          toUserId: 3,\n          fromCardId: 4,\n          id: 3,\n        },\n        4: {\n          toUserId: 2,\n          fromCardId: 4,\n          id: 4,\n        },\n        5: {\n          toUserId: 1,\n          fromCardId: 7,\n          id: 5,\n        },\n        6: {\n          toUserId: 2,\n          fromCardId: 8,\n          id: 6,\n        },\n        7: {\n          toUserId: 3,\n          fromCardId: 9,\n          id: 7,\n        },\n        8: {\n          toUserId: 1,\n          fromCardId: 10,\n          id: 8,\n        },\n        9: {\n          toUserId: 3,\n          fromCardId: 11,\n          id: 9,\n        },\n        10: {\n          toUserId: 1,\n          fromCardId: 9,\n          id: 10,\n        },\n      },\n      indexes: {\n        fromCardId: {\n          1: [\n            0,\n          ],\n          2: [\n            1,\n          ],\n          3: [\n            2,\n          ],\n          4: [\n            3,\n            4,\n          ],\n          7: [\n            5,\n          ],\n          8: [\n            6,\n          ],\n          9: [\n            7,\n            10,\n          ],\n          10: [\n            8,\n          ],\n          11: [\n            9,\n          ],\n        },\n        toUserId: {\n          1: [\n            0,\n            5,\n            8,\n            10,\n          ],\n          2: [\n            1,\n            4,\n            6,\n          ],\n          3: [\n            2,\n            3,\n            7,\n            9,\n          ],\n        },\n      },\n      meta: {\n        maxId: 10,\n      },\n    },\n    CardLabels: {\n      items: [\n        1,\n        2,\n        3,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n      ],\n      itemsById: {\n        1: {\n          toLabelId: 1,\n          fromCardId: 5,\n          id: 1,\n        },\n        2: {\n          toLabelId: 1,\n          fromCardId: 6,\n          id: 2,\n        },\n        3: {\n          toLabelId: 2,\n          fromCardId: 6,\n          id: 3,\n        },\n        7: {\n          toLabelId: 4,\n          fromCardId: 9,\n          id: 7,\n        },\n        8: {\n          toLabelId: 5,\n          fromCardId: 10,\n          id: 8,\n        },\n        9: {\n          toLabelId: 6,\n          fromCardId: 10,\n          id: 9,\n        },\n        10: {\n          toLabelId: 5,\n          fromCardId: 11,\n          id: 10,\n        },\n        11: {\n          toLabelId: 6,\n          fromCardId: 11,\n          id: 11,\n        },\n        12: {\n          toLabelId: 5,\n          fromCardId: 7,\n          id: 12,\n        },\n        13: {\n          toLabelId: 6,\n          fromCardId: 7,\n          id: 13,\n        },\n        14: {\n          toLabelId: 4,\n          fromCardId: 8,\n          id: 14,\n        },\n        15: {\n          toLabelId: 6,\n          fromCardId: 9,\n          id: 15,\n        },\n      },\n      indexes: {\n        fromCardId: {\n          5: [\n            1,\n          ],\n          6: [\n            2,\n            3,\n          ],\n          7: [\n            12,\n            13,\n          ],\n          8: [\n            14,\n          ],\n          9: [\n            7,\n            15,\n          ],\n          10: [\n            8,\n            9,\n          ],\n          11: [\n            10,\n            11,\n          ],\n        },\n        toLabelId: {\n          1: [\n            1,\n            2,\n          ],\n          2: [\n            3,\n          ],\n          3: [],\n          4: [\n            7,\n            14,\n          ],\n          5: [\n            8,\n            10,\n            12,\n          ],\n          6: [\n            9,\n            11,\n            13,\n            15,\n          ],\n        },\n      },\n      meta: {\n        maxId: 15,\n      },\n    },\n  },\n  auth: {\n    userId: 1,\n  },\n  app: {\n    isInitializing: false,\n    currentModal: null,\n  },\n};\n\nexport default createStore(rootReducer, preloadedState, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\nexport const authenticate = (data) => ({\n  type: EntryActionTypes.AUTHENTICATE,\n  payload: {\n    data,\n  },\n});\n\nexport const clearAuthenticationError = () => ({\n  type: EntryActionTypes.AUTHENTICATION_ERROR_CLEAR,\n  payload: {},\n});\n\nexport const logout = () => ({\n  type: EntryActionTypes.LOGOUT,\n  payload: {},\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\nimport ModalTypes from '../../constants/ModalTypes';\n\nexport const openUsersModal = () => ({\n  type: EntryActionTypes.MODAL_OPEN,\n  payload: {\n    type: ModalTypes.USERS,\n  },\n});\n\nexport const openAddProjectModal = () => ({\n  type: EntryActionTypes.MODAL_OPEN,\n  payload: {\n    type: ModalTypes.ADD_PROJECT,\n  },\n});\n\nexport const closeModal = () => ({\n  type: EntryActionTypes.MODAL_CLOSE,\n  payload: {},\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\nexport const createUser = (data) => ({\n  type: EntryActionTypes.USER_CREATE,\n  payload: {\n    data,\n  },\n});\n\nexport const clearUserCreationError = () => ({\n  type: EntryActionTypes.USER_CREATION_ERROR_CLEAR,\n  payload: {},\n});\n\nexport const updateUser = (id, data) => ({\n  type: EntryActionTypes.USER_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const updateCurrentUser = (data) => ({\n  type: EntryActionTypes.CURRENT_USER_UPDATE,\n  payload: {\n    data,\n  },\n});\n\nexport const uploadCurrentUserAvatar = (file) => ({\n  type: EntryActionTypes.CURRENT_USER_AVATAR_UPLOAD,\n  payload: {\n    file,\n  },\n});\n\nexport const deleteUser = (id) => ({\n  type: EntryActionTypes.USER_DELETE,\n  payload: {\n    id,\n  },\n});\n\nexport const addUserToCard = (id, cardId) => ({\n  type: EntryActionTypes.USER_TO_CARD_ADD,\n  payload: {\n    id,\n    cardId,\n  },\n});\n\nexport const addUserToCurrentCard = (id) => ({\n  type: EntryActionTypes.USER_TO_CURRENT_CARD_ADD,\n  payload: {\n    id,\n  },\n});\n\nexport const removeUserFromCard = (id, cardId) => ({\n  type: EntryActionTypes.USER_FROM_CARD_REMOVE,\n  payload: {\n    id,\n    cardId,\n  },\n});\n\nexport const removeUserFromCurrentCard = (id) => ({\n  type: EntryActionTypes.USER_FROM_CURRENT_CARD_REMOVE,\n  payload: {\n    id,\n  },\n});\n\nexport const addUserToFilterInCurrentBoard = (id) => ({\n  type: EntryActionTypes.USER_TO_FILTER_IN_CURRENT_BOARD_ADD,\n  payload: {\n    id,\n  },\n});\n\nexport const removeUserFromFilterInCurrentBoard = (id) => ({\n  type: EntryActionTypes.USER_FROM_FILTER_IN_CURRENT_BOARD_REMOVE,\n  payload: {\n    id,\n  },\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\nexport const createProject = (data) => ({\n  type: EntryActionTypes.PROJECT_CREATE,\n  payload: {\n    data,\n  },\n});\n\nexport const updateCurrentProject = (data) => ({\n  type: EntryActionTypes.CURRENT_PROJECT_UPDATE,\n  payload: {\n    data,\n  },\n});\n\nexport const deleteCurrentProject = () => ({\n  type: EntryActionTypes.CURRENT_PROJECT_DELETE,\n  payload: {},\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\nexport const createMembershipInCurrentProject = (data) => ({\n  type: EntryActionTypes.MEMBERSHIP_IN_CURRENT_PROJECT_CREATE,\n  payload: {\n    data,\n  },\n});\n\nexport const deleteProjectMembership = (id) => ({\n  type: EntryActionTypes.PROJECT_MEMBERSHIP_DELETE,\n  payload: {\n    id,\n  },\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\nexport const createBoardInCurrentProject = (data) => ({\n  type: EntryActionTypes.BOARD_IN_CURRENT_PROJECT_CREATE,\n  payload: {\n    data,\n  },\n});\n\nexport const updateBoard = (id, data) => ({\n  type: EntryActionTypes.BOARD_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const moveBoard = (id, index) => ({\n  type: EntryActionTypes.BOARD_MOVE,\n  payload: {\n    id,\n    index,\n  },\n});\n\nexport const deleteBoard = (id) => ({\n  type: EntryActionTypes.BOARD_DELETE,\n  payload: {\n    id,\n  },\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\nexport const createListInCurrentBoard = (data) => ({\n  type: EntryActionTypes.LIST_IN_CURRENT_BOARD_CREATE,\n  payload: {\n    data,\n  },\n});\n\nexport const updateList = (id, data) => ({\n  type: EntryActionTypes.LIST_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const moveList = (id, index) => ({\n  type: EntryActionTypes.LIST_MOVE,\n  payload: {\n    id,\n    index,\n  },\n});\n\nexport const deleteList = (id) => ({\n  type: EntryActionTypes.LIST_DELETE,\n  payload: {\n    id,\n  },\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\nexport const createLabelInCurrentBoard = (data) => ({\n  type: EntryActionTypes.LABEL_IN_CURRENT_BOARD_CREATE,\n  payload: {\n    data,\n  },\n});\n\nexport const updateLabel = (id, data) => ({\n  type: EntryActionTypes.LABEL_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const deleteLabel = (id) => ({\n  type: EntryActionTypes.LABEL_DELETE,\n  payload: {\n    id,\n  },\n});\n\nexport const addLabelToCard = (id, cardId) => ({\n  type: EntryActionTypes.LABEL_TO_CARD_ADD,\n  payload: {\n    id,\n    cardId,\n  },\n});\n\nexport const addLabelToCurrentCard = (id) => ({\n  type: EntryActionTypes.LABEL_TO_CURRENT_CARD_ADD,\n  payload: {\n    id,\n  },\n});\n\nexport const removeLabelFromCard = (id, cardId) => ({\n  type: EntryActionTypes.LABEL_FROM_CARD_REMOVE,\n  payload: {\n    id,\n    cardId,\n  },\n});\n\nexport const removeLabelFromCurrentCard = (id) => ({\n  type: EntryActionTypes.LABEL_FROM_CURRENT_CARD_REMOVE,\n  payload: {\n    id,\n  },\n});\n\nexport const addLabelToFilterInCurrentBoard = (id) => ({\n  type: EntryActionTypes.LABEL_TO_FILTER_IN_CURRENT_BOARD_ADD,\n  payload: {\n    id,\n  },\n});\n\nexport const removeLabelFromFilterInCurrentBoard = (id) => ({\n  type: EntryActionTypes.LABEL_FROM_FILTER_IN_CURRENT_BOARD_REMOVE,\n  payload: {\n    id,\n  },\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\nexport const createCard = (listId, data) => ({\n  type: EntryActionTypes.CARD_CREATE,\n  payload: {\n    listId,\n    data,\n  },\n});\n\nexport const updateCard = (id, data) => ({\n  type: EntryActionTypes.CARD_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const updateCurrentCard = (data) => ({\n  type: EntryActionTypes.CURRENT_CARD_UPDATE,\n  payload: {\n    data,\n  },\n});\n\nexport const moveCard = (id, listId, index) => ({\n  type: EntryActionTypes.CARD_MOVE,\n  payload: {\n    id,\n    listId,\n    index,\n  },\n});\n\nexport const deleteCard = (id) => ({\n  type: EntryActionTypes.CARD_DELETE,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteCurrentCard = () => ({\n  type: EntryActionTypes.CURRENT_CARD_DELETE,\n  payload: {},\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\nexport const createTaskInCurrentCard = (data) => ({\n  type: EntryActionTypes.TASK_IN_CURRENT_CARD_CREATE,\n  payload: {\n    data,\n  },\n});\n\nexport const updateTask = (id, data) => ({\n  type: EntryActionTypes.TASK_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const deleteTask = (id) => ({\n  type: EntryActionTypes.TASK_DELETE,\n  payload: {\n    id,\n  },\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const fetchActionsInCurrentCard = () => ({\n  type: EntryActionTypes.ACTIONS_IN_CURRENT_CARD_FETCH,\n  payload: {},\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\nexport const createCommentActionInCurrentCard = (data) => ({\n  type: EntryActionTypes.COMMENT_ACTION_IN_CURRENT_CARD_CREATE,\n  payload: {\n    data,\n  },\n});\n\nexport const updateCommentAction = (id, data) => ({\n  type: EntryActionTypes.COMMENT_ACTION_UPDATE,\n  payload: {\n    id,\n    data,\n  },\n});\n\nexport const deleteCommentAction = (id) => ({\n  type: EntryActionTypes.COMMENT_ACTION_DELETE,\n  payload: {\n    id,\n  },\n});\n","import EntryActionTypes from '../../constants/EntryActionTypes';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const deleteNotification = (id) => ({\n  type: EntryActionTypes.NOTIFICATION_DELETE,\n  payload: {\n    id,\n  },\n});\n","import InputMask from 'react-input-mask';\n\nexport default class MaskedInput extends InputMask {\n  focus() {\n    this.getInputDOMNode().focus();\n  }\n\n  select() {\n    this.getInputDOMNode().select();\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input as SemanticUIInput } from 'semantic-ui-react';\n\nimport MaskedInput from './MaskedInput';\n\nconst Input = React.forwardRef(({ mask, maskChar, ...props }, ref) => {\n  const nextProps = props;\n\n  if (mask) {\n    nextProps.input = <MaskedInput mask={mask} maskChar={maskChar} />;\n  }\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <SemanticUIInput {...nextProps} ref={ref} />;\n});\n\nInput.propTypes = {\n  mask: PropTypes.string,\n  maskChar: PropTypes.string,\n};\n\nInput.defaultProps = {\n  mask: undefined,\n  maskChar: undefined,\n};\n\nexport default React.memo(Input);\n","import Input from './Input';\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Popup as SemanticUIPopup } from 'semantic-ui-react';\n\nimport styles from './PopupHeader.module.css';\n\nconst PopupHeader = React.memo(({ children, onBack }) => (\n  <SemanticUIPopup.Header className={styles.wrapper}>\n    {onBack && <Button icon=\"angle left\" onClick={onBack} className={styles.backButton} />}\n    <div className={styles.content}>{children}</div>\n  </SemanticUIPopup.Header>\n));\n\nPopupHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  onBack: PropTypes.func,\n};\n\nPopupHeader.defaultProps = {\n  onBack: undefined,\n};\n\nexport default PopupHeader;\n","import { Popup as SemanticUIPopup } from 'semantic-ui-react';\n\nimport PopupHeader from './PopupHeader';\n\nexport default class Popup extends SemanticUIPopup {\n  static Header = PopupHeader;\n}\n","import Popup from './Popup';\n\nexport default Popup;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\n\nconst Markdown = React.memo(({ linkStopPropagation, ...props }) => {\n  const handleLinkClick = useCallback((event) => {\n    event.stopPropagation();\n  }, []);\n\n  const linkRenderer = useCallback(\n    /* eslint-disable jsx-a11y/anchor-has-content,\n                      jsx-a11y/click-events-have-key-events,\n                      jsx-a11y/no-static-element-interactions,\n                      react/jsx-props-no-spreading */\n    (linkProps) => <a {...linkProps} onClick={handleLinkClick} />,\n    /* eslint-enable jsx-a11y/anchor-has-content,\n                     jsx-a11y/click-events-have-key-events,\n                     jsx-a11y/no-static-element-interactions,\n                     react/jsx-props-no-spreading */\n    [handleLinkClick],\n  );\n\n  let renderers;\n\n  if (linkStopPropagation) {\n    renderers = {\n      link: linkRenderer,\n    };\n  }\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <ReactMarkdown {...props} renderers={renderers} />;\n});\n\nMarkdown.propTypes = {\n  linkStopPropagation: PropTypes.bool,\n};\n\nMarkdown.defaultProps = {\n  linkStopPropagation: false,\n};\n\nexport default Markdown;\n","import Markdown from './Markdown';\n\nexport default Markdown;\n","import DragScroller from './DragScroller';\n\nexport default DragScroller;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst DragScroller = React.memo(({ children, ...props }) => {\n  const wrapper = useRef(null);\n  const prevPosition = useRef(null);\n\n  const handleMouseDown = useCallback(\n    (event) => {\n      if (event.target !== wrapper.current && !event.target.dataset.dragScroller) {\n        return;\n      }\n\n      prevPosition.current = event.clientX;\n    },\n    [wrapper],\n  );\n\n  const handleWindowMouseMove = useCallback(\n    (event) => {\n      if (!prevPosition.current) {\n        return;\n      }\n\n      event.preventDefault();\n\n      const position = event.clientX;\n\n      wrapper.current.scrollLeft -= -prevPosition.current + position;\n      prevPosition.current = position;\n    },\n    [wrapper, prevPosition],\n  );\n\n  const handleWindowMouseUp = useCallback(() => {\n    prevPosition.current = null;\n  }, [prevPosition]);\n\n  useEffect(() => {\n    window.addEventListener('mouseup', handleWindowMouseUp);\n    window.addEventListener('mousemove', handleWindowMouseMove);\n\n    return () => {\n      window.removeEventListener('mouseup', handleWindowMouseUp);\n      window.removeEventListener('mousemove', handleWindowMouseMove);\n    };\n  }, [handleWindowMouseUp, handleWindowMouseMove]);\n\n  return (\n    /* eslint-disable jsx-a11y/no-static-element-interactions, react/jsx-props-no-spreading */\n    <div {...props} ref={wrapper} onMouseDown={handleMouseDown}>\n      {/* eslint-enable jsx-a11y/no-static-element-interactions, react/jsx-props-no-spreading */}\n      {children}\n    </div>\n  );\n});\n\nDragScroller.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default DragScroller;\n","import dequal from 'dequal';\nimport { useRef } from 'react';\n\nexport default (value) => {\n  const currentValue = useRef();\n\n  if (!dequal(value, currentValue.current)) {\n    currentValue.current = value;\n  }\n\n  return currentValue.current;\n};\n","import { useEffect } from 'react';\n\nimport useDeepCompareMemoize from './use-deep-compare-memoize';\n\nexport default (effect, dependencies) => {\n  useEffect(effect, useDeepCompareMemoize(dependencies));\n};\n","import { useCallback } from 'react';\n\nimport useDeepCompareMemoize from './use-deep-compare-memoize';\n\n// eslint-disable-next-line max-len\nexport default (callback, dependencies) => useCallback(callback, useDeepCompareMemoize(dependencies));\n","import { useEffect, useRef } from 'react';\n\nexport default (value) => {\n  const prevValue = useRef();\n\n  useEffect(() => {\n    prevValue.current = value;\n  }, [value]);\n\n  return prevValue.current;\n};\n","import { useCallback, useState } from 'react';\n\nexport default (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = useCallback(({ target: { value: nextValue } }) => {\n    setValue(nextValue);\n  }, []);\n\n  return [value, handleChange, setValue];\n};\n","import { useCallback, useState } from 'react';\n\nexport default (initialData) => {\n  const [data, setData] = useState(initialData);\n\n  const handleFieldChange = useCallback(({ target: { name: fieldName } }, { value }) => {\n    setData((prevData) => ({\n      ...prevData,\n      [fieldName]: value,\n    }));\n  }, []);\n\n  return [data, handleFieldChange, setData];\n};\n","import { useCallback, useState } from 'react';\n\nconst createStep = (type, params = {}) => {\n  if (!type) {\n    return null;\n  }\n\n  return {\n    type,\n    params,\n  };\n};\n\nexport default (initialType, initialParams) => {\n  const [step, setStep] = useState(() => createStep(initialType, initialParams));\n\n  const openStep = useCallback((type, params) => {\n    setStep(createStep(type, params));\n  }, []);\n\n  const handleBack = useCallback(() => {\n    setStep(null);\n  }, []);\n\n  return [step, openStep, handleBack];\n};\n","import { useCallback, useState } from 'react';\n\nexport default (defaultState = false) => {\n  const [state, setState] = useState(defaultState);\n\n  const toggle = useCallback(() => {\n    setState((prevState) => !prevState);\n  }, []);\n\n  return [state, toggle];\n};\n","import { useCallback, useEffect, useRef } from 'react';\n\nexport default (isOpened, close) => {\n  const isClosable = useRef(null);\n\n  const handleFieldBlur = useCallback(() => {\n    if (isClosable.current) {\n      close();\n    }\n  }, [close]);\n\n  const handleControlMouseOver = useCallback(() => {\n    isClosable.current = false;\n  }, []);\n\n  const handleControlMouseOut = useCallback(() => {\n    isClosable.current = true;\n  }, []);\n\n  useEffect(() => {\n    if (isOpened) {\n      isClosable.current = true;\n    } else {\n      isClosable.current = null;\n    }\n  }, [isOpened]);\n\n  return [handleFieldBlur, handleControlMouseOver, handleControlMouseOut];\n};\n","import { useEffect, useRef } from 'react';\n\nexport default (callback, dependencies) => {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      callback();\n    } else {\n      isMounted.current = true;\n    }\n  }, dependencies); // eslint-disable-line react-hooks/exhaustive-deps\n};\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport isEmail from 'validator/lib/isEmail';\nimport {\n  Form, Grid, Header, Message,\n} from 'semantic-ui-react';\nimport { Input } from '../../lib/custom-ui';\n\nimport {\n  useDeepCompareCallback,\n  useDeepCompareEffect,\n  useDidUpdate,\n  useForm,\n  usePrevious,\n  useToggle,\n} from '../../hooks';\n\nimport styles from './Login.module.css';\n\nconst Login = React.memo(\n  ({\n    defaultData, isSubmitting, error, onAuthenticate, onMessageDismiss,\n  }) => {\n    const [t] = useTranslation();\n    const wasSubmitting = usePrevious(isSubmitting);\n\n    const [data, handleFieldChange, setData] = useForm(() => ({\n      email: '',\n      password: '',\n      ...defaultData,\n    }));\n\n    const [focusPasswordFieldState, focusPasswordField] = useToggle();\n\n    const emailField = useRef(null);\n    const passwordField = useRef(null);\n\n    const handleSubmit = useDeepCompareCallback(() => {\n      const cleanData = {\n        ...data,\n        email: data.email.trim(),\n      };\n\n      if (!isEmail(cleanData.email)) {\n        emailField.current.select();\n        return;\n      }\n\n      if (!cleanData.password) {\n        passwordField.current.focus();\n        return;\n      }\n\n      onAuthenticate(cleanData);\n    }, [onAuthenticate, data]);\n\n    useEffect(() => {\n      emailField.current.select();\n    }, []);\n\n    useDeepCompareEffect(() => {\n      if (wasSubmitting && !isSubmitting && error) {\n        switch (error.message) {\n          case 'emailDoesNotExist':\n            emailField.current.select();\n\n            break;\n          case 'invalidPassword':\n            setData((prevData) => ({\n              ...prevData,\n              password: '',\n            }));\n            focusPasswordField();\n\n            break;\n          default:\n        }\n      }\n    }, [isSubmitting, wasSubmitting, error, setData, focusPasswordField]);\n\n    useDidUpdate(() => {\n      passwordField.current.focus();\n    }, [focusPasswordFieldState]);\n\n    return (\n      <div className={styles.fullHeight}>\n        <Grid verticalAlign=\"middle\" className={styles.fullHeightPaddingFix}>\n          <Grid.Column widescreen={4} largeScreen={5} computer={6} tablet={16} mobile={16}>\n            <Grid verticalAlign=\"middle\" className={styles.fullHeightPaddingFix}>\n              <Grid.Column>\n                <div className={styles.loginWrapper}>\n                  <Header\n                    as=\"h1\"\n                    textAlign=\"center\"\n                    content={t('common.logInToPlanka')}\n                    className={styles.formTitle}\n                  />\n                  <div>\n                    {error && (\n                      <Message\n                        // eslint-disable-next-line react/jsx-props-no-spreading\n                        {...{\n                          [error.type || 'error']: true,\n                        }}\n                        visible\n                        content={t(`common.${error.message}`)}\n                        onDismiss={onMessageDismiss}\n                      />\n                    )}\n                    <Form size=\"large\" onSubmit={handleSubmit}>\n                      <div className={styles.inputWrapper}>\n                        <div className={styles.inputLabel}>{t('common.email')}</div>\n                        <Input\n                          fluid\n                          ref={emailField}\n                          name=\"email\"\n                          value={data.email}\n                          readOnly={isSubmitting}\n                          className={styles.input}\n                          onChange={handleFieldChange}\n                        />\n                      </div>\n                      <div className={styles.inputWrapper}>\n                        <div className={styles.inputLabel}>{t('common.password')}</div>\n                        <Input\n                          fluid\n                          ref={passwordField}\n                          type=\"password\"\n                          name=\"password\"\n                          value={data.password}\n                          readOnly={isSubmitting}\n                          className={styles.input}\n                          onChange={handleFieldChange}\n                        />\n                      </div>\n                      <Form.Button\n                        primary\n                        size=\"large\"\n                        icon=\"right arrow\"\n                        labelPosition=\"right\"\n                        content={t('action.logIn')}\n                        floated=\"right\"\n                        loading={isSubmitting}\n                        disabled={isSubmitting}\n                      />\n                    </Form>\n                  </div>\n                </div>\n              </Grid.Column>\n            </Grid>\n          </Grid.Column>\n          <Grid.Column\n            widescreen={12}\n            largeScreen={11}\n            computer={10}\n            only=\"computer\"\n            className={classNames(styles.cover, styles.fullHeight)}\n          >\n            <div className={styles.descriptionWrapperOverlay} />\n            <div className={styles.descriptionWrapper}>\n              <Header inverted as=\"h1\" content=\"Planka\" className={styles.descriptionTitle} />\n              <Header\n                inverted\n                as=\"h2\"\n                content={t('common.projectManagment')}\n                className={styles.descriptionSubtitle}\n              />\n            </div>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  },\n);\n\nLogin.propTypes = {\n  defaultData: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isSubmitting: PropTypes.bool.isRequired,\n  error: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onAuthenticate: PropTypes.func.isRequired,\n  onMessageDismiss: PropTypes.func.isRequired,\n};\n\nLogin.defaultProps = {\n  error: undefined,\n};\n\nexport default Login;\n","import Login from './Login';\n\nexport default Login;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { authenticate, clearAuthenticationError } from '../actions/entry';\nimport Login from '../components/Login';\n\nconst mapStateToProps = ({ login: { data: defaultData, isSubmitting, error: externalError } }) => {\n  let error;\n\n  if (externalError) {\n    switch (externalError.message) {\n      case 'Email does not exist':\n        error = {\n          message: 'emailDoesNotExist',\n        };\n\n        break;\n      case 'Password is not valid':\n        error = {\n          message: 'invalidPassword',\n        };\n\n        break;\n      case 'Failed to fetch':\n        error = {\n          type: 'warning',\n          message: 'noInternetConnection',\n        };\n\n        break;\n      case 'Network request failed':\n        error = {\n          type: 'warning',\n          message: 'serverConnectionFailed',\n        };\n\n        break;\n      default:\n        error = {\n          type: 'warning',\n          message: 'unknownError',\n        };\n    }\n  }\n\n  return {\n    defaultData,\n    isSubmitting,\n    error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    onAuthenticate: authenticate,\n    onMessageDismiss: clearAuthenticationError,\n  },\n  dispatch,\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Login);\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Popup as SemanticUIPopup } from 'semantic-ui-react';\n\nimport styles from './Popup.module.css';\n\nexport default (WrappedComponent) => {\n  const Popup = React.memo(({ children, ...props }) => {\n    const [isOpened, setIsOpened] = useState(false);\n\n    const handleOpen = useCallback(() => {\n      setIsOpened(true);\n    }, []);\n\n    const handleClose = useCallback(() => {\n      setIsOpened(false);\n    }, []);\n\n    const handleMouseDown = useCallback((event) => {\n      event.stopPropagation();\n    }, []);\n\n    const handleClick = useCallback((event) => {\n      event.stopPropagation();\n    }, []);\n\n    const handleTriggerClick = useCallback(\n      (event) => {\n        event.stopPropagation();\n\n        const { onClick } = children;\n\n        if (onClick) {\n          onClick(event);\n        }\n      },\n      [children],\n    );\n\n    const tigger = React.cloneElement(children, {\n      onClick: handleTriggerClick,\n    });\n\n    return (\n      <SemanticUIPopup\n        basic\n        wide\n        trigger={tigger}\n        on=\"click\"\n        open={isOpened}\n        position=\"bottom left\"\n        className={styles.wrapper}\n        onOpen={handleOpen}\n        onClose={handleClose}\n        onMouseDown={handleMouseDown}\n        onClick={handleClick}\n      >\n        <Button icon=\"close\" onClick={handleClose} className={styles.closeButton} />\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <WrappedComponent {...props} onClose={handleClose} />\n      </SemanticUIPopup>\n    );\n  });\n\n  Popup.propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n\n  return Popup;\n};\n","export default () => {\n  document.dispatchEvent(new MouseEvent('click')); // FIXME: hack\n};\n","import initials from 'initials';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './User.module.css';\n\nconst SIZES = {\n  TINY: 'tiny',\n  SMALL: 'small',\n  MEDIUM: 'medium',\n  LARGE: 'large',\n};\n\n// TODO: move to styles\nconst STYLES = {\n  tiny: {\n    fontSize: '10px',\n    fontWeight: '400',\n    height: '20px',\n    padding: '5.5px 0px 4.5px',\n    width: '20px',\n  },\n  small: {\n    fontSize: '12px',\n    fontWeight: '400',\n    height: '24px',\n    lineHeight: '20px',\n    padding: '2px 0px',\n    width: '24px',\n  },\n  medium: {\n    fontSize: '14px',\n    fontWeight: '500',\n    height: '32px',\n    padding: '10px 0',\n    width: '32px',\n  },\n  large: {\n    fontSize: '14px',\n    fontWeight: '500',\n    height: '36px',\n    padding: '12px 0 10px',\n    width: '36px',\n  },\n};\n\nconst COLORS = [\n  '#2ecc71', // Emerald\n  '#3498db', // Peter river\n  '#8e44ad', // Wisteria\n  '#e67e22', // Carrot\n  '#e74c3c', // Alizarin\n  '#1abc9c', // Turquoise\n  '#2c3e50', // Midnight blue\n];\n\nconst getColor = (name) => {\n  let sum = 0;\n  for (let i = 0; i < name.length; i += 1) {\n    sum += name.charCodeAt(i);\n  }\n\n  return COLORS[sum % COLORS.length];\n};\n\nconst User = React.memo(({\n  name, avatar, size, isDisabled, onClick,\n}) => {\n  const style = {\n    ...STYLES[size],\n    background: avatar ? `url(\"${avatar}\")` : getColor(name),\n  };\n\n  const contentNode = (\n    <span\n      title={name}\n      className={classNames(styles.wrapper, onClick && styles.hoverable)}\n      style={style}\n    >\n      {!avatar && <span className={styles.initials}>{initials(name)}</span>}\n    </span>\n  );\n\n  return onClick ? (\n    <button type=\"button\" disabled={isDisabled} className={styles.button} onClick={onClick}>\n      {contentNode}\n    </button>\n  ) : (\n    contentNode\n  );\n});\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  size: PropTypes.oneOf(Object.values(SIZES)),\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nUser.defaultProps = {\n  avatar: undefined,\n  size: SIZES.MEDIUM,\n  isDisabled: false,\n  onClick: undefined,\n};\n\nexport default User;\n","import User from './User';\n\nexport default User;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport { withPopup } from '../../lib/popup';\nimport { Popup } from '../../lib/custom-ui';\n\nimport Paths from '../../constants/Paths';\nimport { ActionTypes } from '../../constants/Enums';\nimport User from '../User';\n\nimport styles from './NotificationsPopup.module.css';\n\nconst NotificationsStep = React.memo(({ items, onDelete, onClose }) => {\n  const [t] = useTranslation();\n\n  const handleDelete = useCallback(\n    (id) => {\n      onDelete(id);\n    },\n    [onDelete],\n  );\n\n  const renderItemContent = useCallback(\n    ({ action, card }) => {\n      switch (action.type) {\n        case ActionTypes.MOVE_CARD:\n          return (\n            <Trans\n              i18nKey=\"common.userMovedCardFromListToList\"\n              values={{\n                user: action.user.name,\n                card: card.name,\n                fromList: action.data.fromList.name,\n                toList: action.data.toList.name,\n              }}\n            >\n              {action.user.name}\n              {' moved '}\n              <Link to={Paths.CARDS.replace(':id', card.id)} onClick={onClose}>\n                {card.name}\n              </Link>\n              {' from '}\n              {action.data.fromList.name}\n              {' to '}\n              {action.data.toList.name}\n            </Trans>\n          );\n        case ActionTypes.COMMENT_CARD:\n          return (\n            <Trans\n              i18nKey=\"common.userLeftNewCommentToCard\"\n              values={{\n                user: action.user.name,\n                comment: action.data.text,\n                card: card.name,\n              }}\n            >\n              {action.user.name}\n              {` left a new comment «${action.data.text}» to `}\n              <Link to={Paths.CARDS.replace(':id', card.id)} onClick={onClose}>\n                {card.name}\n              </Link>\n            </Trans>\n          );\n        default:\n      }\n\n      return null;\n    },\n    [onClose],\n  );\n\n  return (\n    <>\n      <Popup.Header>{t('common.notifications')}</Popup.Header>\n      <Popup.Content>\n        {items.length > 0\n          ? items.map((item) => (\n            <div key={item.id} className={styles.wrapper}>\n              {item.card && item.action ? (\n                <>\n                  <User\n                    name={item.action.user.name}\n                    avatar={item.action.user.avatar}\n                    size=\"large\"\n                  />\n                  <span className={styles.content}>{renderItemContent(item)}</span>\n                </>\n              ) : (\n                <div className={styles.deletedContent}>{t('common.cardOrActionAreDeleted')}</div>\n              )}\n              <Button\n                type=\"button\"\n                icon=\"close\"\n                className={styles.button}\n                onClick={() => handleDelete(item.id)}\n              />\n            </div>\n          ))\n          : t('common.noUnreadNotifications')}\n      </Popup.Content>\n    </>\n  );\n});\n\nNotificationsStep.propTypes = {\n  items: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n  onDelete: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default withPopup(NotificationsStep);\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form } from 'semantic-ui-react';\nimport { Input, Popup } from '../../../lib/custom-ui';\n\nimport { useField } from '../../../hooks';\n\nimport styles from './EditNameStep.module.css';\n\nconst EditNameStep = React.memo(({\n  defaultValue, onUpdate, onBack, onClose,\n}) => {\n  const [t] = useTranslation();\n  const [value, handleFieldChange] = useField(defaultValue);\n\n  const field = useRef(null);\n\n  const handleSubmit = useCallback(() => {\n    const cleanValue = value.trim();\n\n    if (!cleanValue) {\n      field.current.select();\n      return;\n    }\n\n    if (cleanValue !== defaultValue) {\n      onUpdate(cleanValue);\n    }\n\n    onClose();\n  }, [defaultValue, onUpdate, onClose, value]);\n\n  useEffect(() => {\n    field.current.select();\n  }, []);\n\n  return (\n    <>\n      <Popup.Header onBack={onBack}>\n        {t('common.editName', {\n          context: 'title',\n        })}\n      </Popup.Header>\n      <Popup.Content>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            fluid\n            ref={field}\n            value={value}\n            className={styles.field}\n            onChange={handleFieldChange}\n          />\n          <Button positive content={t('action.save')} />\n        </Form>\n      </Popup.Content>\n    </>\n  );\n});\n\nEditNameStep.propTypes = {\n  defaultValue: PropTypes.string.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onBack: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default EditNameStep;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Menu } from 'semantic-ui-react';\nimport { withPopup } from '../../../lib/popup';\nimport { Popup } from '../../../lib/custom-ui';\n\nimport { useSteps } from '../../../hooks';\nimport EditNameStep from './EditNameStep';\n// import EditAvatarStep from './EditAvatarStep';\n\nimport styles from './UserPopup.module.css';\n\nconst StepTypes = {\n  EDIT_NAME: 'EDIT_NAME',\n  // EDIT_AVATAR: 'EDIT_AVATAR',\n};\n\nconst UserStep = React.memo(\n  ({\n    name, /* avatar, isAvatarUploading , */ onUpdate, /* onAvatarUpload, */ onLogout, onClose,\n  }) => {\n    const [t] = useTranslation();\n    const [step, openStep, handleBack] = useSteps();\n\n    const handleNameEditClick = useCallback(() => {\n      openStep(StepTypes.EDIT_NAME);\n    }, [openStep]);\n\n    /* const handleAvatarEditClick = useCallback(() => {\n      openStep(StepTypes.EDIT_AVATAR);\n    }, [openStep]); */\n\n    const handleNameUpdate = useCallback(\n      (newName) => {\n        onUpdate({\n          name: newName,\n        });\n      },\n      [onUpdate],\n    );\n\n    /* const handleAvatarClear = useCallback(() => {\n      onUpdate({\n        avatar: null,\n      });\n    }, [onUpdate]); */\n\n    if (step) {\n      switch (step.type) {\n        case StepTypes.EDIT_NAME:\n          return (\n            <EditNameStep\n              defaultValue={name}\n              onUpdate={handleNameUpdate}\n              onBack={handleBack}\n              onClose={onClose}\n            />\n          );\n        /* case StepTypes.EDIT_AVATAR:\n          return (\n            <EditAvatarStep\n              defaultValue={avatar}\n              name={name}\n              isUploading={isAvatarUploading}\n              onUpload={onAvatarUpload}\n              onClear={handleAvatarClear}\n              onBack={handleBack}\n            />\n          ); */\n        default:\n      }\n    }\n\n    return (\n      <>\n        <Popup.Header>{name}</Popup.Header>\n        <Popup.Content>\n          <Menu secondary vertical className={styles.menu}>\n            <Menu.Item className={styles.menuItem} onClick={handleNameEditClick}>\n              {t('action.editName', {\n                context: 'title',\n              })}\n            </Menu.Item>\n            {/* <Menu.Item className={styles.menuItem} onClick={handleAvatarEditClick}>\n              {t('action.editAvatar', {\n                context: 'title',\n              })}\n            </Menu.Item> */}\n            <Menu.Item className={styles.menuItem} onClick={onLogout}>\n              {t('action.logOut', {\n                context: 'title',\n              })}\n            </Menu.Item>\n          </Menu>\n        </Popup.Content>\n      </>\n    );\n  },\n);\n\nUserStep.propTypes = {\n  name: PropTypes.string.isRequired,\n  /* eslint-disable react/no-unused-prop-types */\n  avatar: PropTypes.string,\n  isAvatarUploading: PropTypes.bool.isRequired,\n  /* eslint-enable react/no-unused-prop-types */\n  onUpdate: PropTypes.func.isRequired,\n  onAvatarUpload: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n  onLogout: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nUserStep.defaultProps = {\n  avatar: undefined,\n};\n\nexport default withPopup(UserStep);\n","import UserPopup from './UserPopup';\n\nexport default UserPopup;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nimport Paths from '../../constants/Paths';\nimport NotificationsPopup from './NotificationsPopup';\nimport UserPopup from './UserPopup';\n\nimport styles from './Header.module.css';\n\nconst Header = React.memo(\n  ({\n    user,\n    notifications,\n    // isEditable,\n    onUserUpdate,\n    onUserAvatarUpload,\n    onNotificationDelete,\n    // onUsers,\n    onLogout,\n  }) => { // eslint-disable-line arrow-body-style\n    // const [t] = useTranslation();\n\n    return (\n      <div className={styles.wrapper}>\n        <Link to={Paths.ROOT} className={styles.logo}>\n          Planka\n        </Link>\n        <Menu inverted size=\"large\" className={styles.menu}>\n          {/* isEditable && (\n            <Menu.Item className={styles.item} onClick={onUsers}>\n              {t('common.users', {\n                context: 'title',\n              })}\n            </Menu.Item>\n          ) */}\n          <Menu.Menu position=\"right\">\n            <NotificationsPopup items={notifications} onDelete={onNotificationDelete}>\n              <Menu.Item className={styles.item}>\n                <Icon name=\"bell\" className={styles.icon} />\n                {notifications.length > 0 && (\n                  <span className={styles.notification}>{notifications.length}</span>\n                )}\n              </Menu.Item>\n            </NotificationsPopup>\n            <UserPopup\n              name={user.name}\n              avatar={user.avatar}\n              isAvatarUploading={user.isAvatarUploading}\n              onUpdate={onUserUpdate}\n              onAvatarUpload={onUserAvatarUpload}\n              onLogout={onLogout}\n            >\n              <Menu.Item className={styles.item}>{user.name}</Menu.Item>\n            </UserPopup>\n          </Menu.Menu>\n        </Menu>\n      </div>\n    );\n  },\n);\n\nHeader.propTypes = {\n  /* eslint-disable react/forbid-prop-types */\n  user: PropTypes.object.isRequired,\n  notifications: PropTypes.array.isRequired,\n  /* eslint-enable react/forbid-prop-types */\n  isEditable: PropTypes.bool.isRequired, // eslint-disable-line react/no-unused-prop-types\n  onUserUpdate: PropTypes.func.isRequired,\n  onUserAvatarUpload: PropTypes.func.isRequired,\n  onNotificationDelete: PropTypes.func.isRequired,\n  onUsers: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n  onLogout: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { currentUserSelector, notificationsForCurrentUserSelector } from '../selectors';\nimport {\n  deleteNotification,\n  logout,\n  openUsersModal,\n  updateCurrentUser,\n  uploadCurrentUserAvatar,\n} from '../actions/entry';\nimport Header from '../components/Header';\n\nconst mapStateToProps = (state) => {\n  const currentUser = currentUserSelector(state);\n  const notifications = notificationsForCurrentUserSelector(state);\n\n  return {\n    notifications,\n    user: currentUser,\n    isEditable: currentUser.isAdmin,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    onUserUpdate: updateCurrentUser,\n    onUserAvatarUpload: uploadCurrentUserAvatar,\n    onNotificationDelete: deleteNotification,\n    onUsers: openUsersModal, // TODO: rename\n    onLogout: logout,\n  },\n  dispatch,\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header);\n","const BOARD = 'BOARD';\nconst LIST = 'LIST';\nconst CARD = 'CARD';\n\nexport default {\n  BOARD,\n  LIST,\n  CARD,\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Progress } from 'semantic-ui-react';\n\nimport { useToggle } from '../../hooks';\n\nimport styles from './Tasks.module.css';\n\nconst Tasks = React.memo(({ items }) => {\n  const [isOpened, toggleOpened] = useToggle();\n\n  const handleToggleClick = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      toggleOpened();\n    },\n    [toggleOpened],\n  );\n\n  const completedItems = items.filter((item) => item.isCompleted);\n\n  return (\n    <>\n      {/* eslint-disable jsx-a11y/click-events-have-key-events,\n                         jsx-a11y/no-static-element-interactions */}\n      <div className={styles.button} onClick={handleToggleClick}>\n        {/* eslint-enable jsx-a11y/click-events-have-key-events,\n                          jsx-a11y/no-static-element-interactions */}\n        <span className={styles.progressWrapper}>\n          <Progress\n            autoSuccess\n            value={completedItems.length}\n            total={items.length}\n            color=\"blue\"\n            size=\"tiny\"\n            className={styles.progress}\n          />\n        </span>\n        <span\n          className={classNames(styles.count, isOpened ? styles.countOpened : styles.countClosed)}\n        >\n          {completedItems.length}\n          {'/'}\n          {items.length}\n        </span>\n      </div>\n      {isOpened && (\n        <ul className={styles.tasks}>\n          {items.map((item) => (\n            <li\n              key={item.id}\n              className={classNames(styles.task, item.isCompleted && styles.taskCompleted)}\n            >\n              {item.name}\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n});\n\nTasks.propTypes = {\n  items: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport default Tasks;\n","import React, {\n  useCallback, useEffect, useImperativeHandle, useRef, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { Button, Form, TextArea } from 'semantic-ui-react';\n\nimport { useClosableForm, useField } from '../../hooks';\n\nimport styles from './EditName.module.css';\n\nconst EditName = React.forwardRef(({ children, defaultValue, onUpdate }, ref) => {\n  const [t] = useTranslation();\n  const [isOpened, setIsOpened] = useState(false);\n  const [value, handleFieldChange, setValue] = useField(defaultValue);\n\n  const field = useRef(null);\n\n  const open = useCallback(() => {\n    setIsOpened(true);\n    setValue(defaultValue);\n  }, [defaultValue, setValue]);\n\n  const close = useCallback(() => {\n    setIsOpened(false);\n    setValue(null);\n  }, [setValue]);\n\n  const submit = useCallback(() => {\n    const cleanValue = value.trim();\n\n    if (!cleanValue) {\n      field.current.ref.current.select();\n      return;\n    }\n\n    if (cleanValue !== defaultValue) {\n      onUpdate(cleanValue);\n    }\n\n    close();\n  }, [defaultValue, onUpdate, value, close]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n\n  const handleFieldKeyDown = useCallback(\n    (event) => {\n      switch (event.key) {\n        case 'Enter':\n          event.preventDefault();\n\n          submit();\n\n          break;\n        case 'Escape':\n          close();\n\n          break;\n        default:\n      }\n    },\n    [close, submit],\n  );\n\n  const [handleFieldBlur, handleControlMouseOver, handleControlMouseOut] = useClosableForm(\n    isOpened,\n    close,\n  );\n\n  const handleSubmit = useCallback(() => {\n    submit();\n  }, [submit]);\n\n  useEffect(() => {\n    if (isOpened) {\n      field.current.ref.current.select();\n    }\n  }, [isOpened]);\n\n  if (!isOpened) {\n    return children;\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className={styles.fieldWrapper}>\n        <TextArea\n          ref={field}\n          as={TextareaAutosize}\n          value={value}\n          minRows={3}\n          maxRows={8}\n          spellCheck={false}\n          className={styles.field}\n          onKeyDown={handleFieldKeyDown}\n          onChange={handleFieldChange}\n          onBlur={handleFieldBlur}\n        />\n      </div>\n      <div className={styles.controls}>\n        {/* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */}\n        <Button\n          positive\n          content={t('action.save')}\n          className={styles.submitButton}\n          onMouseOver={handleControlMouseOver}\n          onMouseOut={handleControlMouseOut}\n        />\n      </div>\n    </Form>\n  );\n});\n\nEditName.propTypes = {\n  children: PropTypes.element.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n};\n\nexport default React.memo(EditName);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Menu } from 'semantic-ui-react';\n\nimport User from '../User';\n\nimport styles from './Item.module.css';\n\nconst Item = React.memo(({\n  isPersisted, isActive, user, onUserSelect, onUserDeselect,\n}) => {\n  const handleToggleClick = useCallback(() => {\n    if (isActive) {\n      onUserDeselect();\n    } else {\n      onUserSelect();\n    }\n  }, [isActive, onUserSelect, onUserDeselect]);\n\n  return (\n    <Menu.Item\n      active={isActive}\n      disabled={!isPersisted}\n      className={classNames(styles.menuItem, isActive && styles.menuItemActive)}\n      onClick={handleToggleClick}\n    >\n      <span className={styles.user}>\n        <User name={user.name} avatar={user.avatar} />\n      </span>\n      <div className={classNames(styles.menuItemText, isActive && styles.menuItemTextActive)}>\n        {user.name}\n      </div>\n    </Menu.Item>\n  );\n});\n\nItem.propTypes = {\n  isPersisted: PropTypes.bool.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  onUserSelect: PropTypes.func.isRequired,\n  onUserDeselect: PropTypes.func.isRequired,\n};\n\nexport default Item;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Menu } from 'semantic-ui-react';\nimport { Popup } from '../../lib/custom-ui';\n\nimport Item from './Item';\n\nimport styles from './ProjectMembershipsStep.module.css';\n\nconst ProjectMembershipsStep = React.memo(\n  ({\n    items, currentUserIds, title, onUserSelect, onUserDeselect, onBack,\n  }) => {\n    const [t] = useTranslation();\n\n    const handleUserSelect = useCallback(\n      (id) => {\n        onUserSelect(id);\n      },\n      [onUserSelect],\n    );\n\n    const handleUserDeselect = useCallback(\n      (id) => {\n        onUserDeselect(id);\n      },\n      [onUserDeselect],\n    );\n\n    return (\n      <>\n        <Popup.Header onBack={onBack}>{t(title)}</Popup.Header>\n        <Popup.Content>\n          <Menu secondary vertical className={styles.menu}>\n            {items.map((item) => (\n              <Item\n                key={item.id}\n                isPersisted={item.isPersisted}\n                isActive={currentUserIds.includes(item.user.id)}\n                user={item.user}\n                onUserSelect={() => handleUserSelect(item.user.id)}\n                onUserDeselect={() => handleUserDeselect(item.user.id)}\n              />\n            ))}\n          </Menu>\n        </Popup.Content>\n      </>\n    );\n  },\n);\n\nProjectMembershipsStep.propTypes = {\n  /* eslint-disable react/forbid-prop-types */\n  items: PropTypes.array.isRequired,\n  currentUserIds: PropTypes.array.isRequired,\n  /* eslint-enable react/forbid-prop-types */\n  title: PropTypes.string,\n  onUserSelect: PropTypes.func.isRequired,\n  onUserDeselect: PropTypes.func.isRequired,\n  onBack: PropTypes.func,\n};\n\nProjectMembershipsStep.defaultProps = {\n  title: 'common.members',\n  onBack: undefined,\n};\n\nexport default ProjectMembershipsStep;\n","import ProjectMembershipsStep from './ProjectMembershipsStep';\n\nexport default ProjectMembershipsStep;\n","import fromPairs from 'lodash/fromPairs';\n\nconst PAIRS = [\n  ['green', '#61bd4f'],\n  ['yellow', '#f2d600'],\n  ['orange', '#ff9f1a'],\n  ['red', '#eb5a46'],\n  ['purple', '#c377e0'],\n  ['blue', '#0079bf'],\n  ['sky', '#00c2e0'],\n  ['lime', '#51e898'],\n  ['pink', '#ff78cb'],\n  ['black', '#355263'],\n];\n\nconst KEYS = PAIRS.map((pair) => pair[0]);\n\nconst MAP = fromPairs(PAIRS);\n\nexport default {\n  PAIRS,\n  KEYS,\n  MAP,\n};\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'semantic-ui-react';\nimport { Input } from '../../lib/custom-ui';\n\nimport LabelColors from '../../constants/LabelColors';\n\nimport styles from './Editor.module.css';\n\nconst Editor = React.memo(({ data, onFieldChange }) => {\n  const [t] = useTranslation();\n\n  const nameField = useRef(null);\n\n  useEffect(() => {\n    nameField.current.select();\n  }, []);\n\n  return (\n    <>\n      <div className={styles.text}>{t('common.title')}</div>\n      <Input\n        fluid\n        ref={nameField}\n        name=\"name\"\n        value={data.name}\n        className={styles.field}\n        onChange={onFieldChange}\n      />\n      <div className={styles.text}>{t('common.color')}</div>\n      <div className={styles.colorButtons}>\n        {LabelColors.PAIRS.map(([name, hex]) => (\n          <Button\n            key={name}\n            type=\"button\"\n            name=\"color\"\n            value={name}\n            className={classNames(\n              styles.colorButton,\n              name === data.color && styles.colorButtonActive,\n            )}\n            style={{\n              background: hex,\n            }}\n            onClick={onFieldChange}\n          />\n        ))}\n      </div>\n    </>\n  );\n});\n\nEditor.propTypes = {\n  data: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  onFieldChange: PropTypes.func.isRequired,\n};\n\nexport default Editor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form } from 'semantic-ui-react';\nimport { Popup } from '../../lib/custom-ui';\n\nimport { useDeepCompareCallback, useForm } from '../../hooks';\nimport LabelColors from '../../constants/LabelColors';\nimport Editor from './Editor';\n\nimport styles from './AddStep.module.css';\n\nconst AddStep = React.memo(({ onCreate, onBack }) => {\n  const [t] = useTranslation();\n\n  const [data, handleFieldChange] = useForm(() => ({\n    name: '',\n    color: LabelColors.KEYS[0],\n  }));\n\n  const handleSubmit = useDeepCompareCallback(() => {\n    const cleanData = {\n      ...data,\n      name: data.name.trim() || null,\n    };\n\n    onCreate(cleanData);\n    onBack();\n  }, [data, onCreate, onBack]);\n\n  return (\n    <>\n      <Popup.Header onBack={onBack}>\n        {t('common.createLabel', {\n          context: 'title',\n        })}\n      </Popup.Header>\n      <Popup.Content>\n        <Form onSubmit={handleSubmit}>\n          <Editor data={data} onFieldChange={handleFieldChange} />\n          <Button positive content={t('action.createLabel')} className={styles.submitButton} />\n        </Form>\n      </Popup.Content>\n    </>\n  );\n});\n\nAddStep.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n  onBack: PropTypes.func.isRequired,\n};\n\nexport default AddStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport { Popup } from '../../lib/custom-ui';\n\nimport styles from './DeleteStep.module.css';\n\nconst DeleteStep = React.memo(({\n  title, content, buttonContent, onConfirm, onBack,\n}) => (\n  <>\n    <Popup.Header onBack={onBack}>{title}</Popup.Header>\n    <Popup.Content>\n      <div className={styles.content}>{content}</div>\n      <Button fluid negative content={buttonContent} onClick={onConfirm} />\n    </Popup.Content>\n  </>\n));\n\nDeleteStep.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  buttonContent: PropTypes.string.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  onBack: PropTypes.func,\n};\n\nDeleteStep.defaultProps = {\n  onBack: undefined,\n};\n\nexport default DeleteStep;\n","import DeleteStep from './DeleteStep';\n\nexport default DeleteStep;\n","import dequal from 'dequal';\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form } from 'semantic-ui-react';\nimport { Popup } from '../../lib/custom-ui';\n\nimport { useDeepCompareCallback, useForm, useSteps } from '../../hooks';\nimport LabelColors from '../../constants/LabelColors';\nimport Editor from './Editor';\nimport DeleteStep from '../DeleteStep';\n\nimport styles from './EditStep.module.css';\n\nconst StepTypes = {\n  DELETE: 'DELETE',\n};\n\nconst EditStep = React.memo(({\n  defaultData, onUpdate, onDelete, onBack,\n}) => {\n  const [t] = useTranslation();\n\n  const [data, handleFieldChange] = useForm(() => ({\n    color: LabelColors.KEYS[0],\n    ...defaultData,\n    name: defaultData.name || '',\n  }));\n\n  const [step, openStep, handleBack] = useSteps();\n\n  const handleSubmit = useDeepCompareCallback(() => {\n    const cleanData = {\n      ...data,\n      name: data.name.trim() || null,\n    };\n\n    if (!dequal(cleanData, defaultData)) {\n      onUpdate(cleanData);\n    }\n\n    onBack();\n  }, [defaultData, data, onUpdate, onBack]);\n\n  const handleDeleteClick = useCallback(() => {\n    openStep(StepTypes.DELETE);\n  }, [openStep]);\n\n  if (step && step.type === StepTypes.DELETE) {\n    return (\n      <DeleteStep\n        title={t('common.deleteLabel', {\n          context: 'title',\n        })}\n        content={t('common.areYouSureYouWantToDeleteThisLabel')}\n        buttonContent={t('action.deleteLabel')}\n        onConfirm={onDelete}\n        onBack={handleBack}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popup.Header onBack={onBack}>\n        {t('common.editLabel', {\n          context: 'title',\n        })}\n      </Popup.Header>\n      <Popup.Content>\n        <Form onSubmit={handleSubmit}>\n          <Editor data={data} onFieldChange={handleFieldChange} />\n          <Button positive content={t('action.save')} />\n        </Form>\n        <Button\n          content={t('action.delete')}\n          className={styles.deleteButton}\n          onClick={handleDeleteClick}\n        />\n      </Popup.Content>\n    </>\n  );\n});\n\nEditStep.propTypes = {\n  defaultData: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onBack: PropTypes.func.isRequired,\n};\n\nexport default EditStep;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button } from 'semantic-ui-react';\n\nimport LabelColors from '../../constants/LabelColors';\n\nimport styles from './Item.module.css';\n\nconst Item = React.memo(({\n  name, color, isPersisted, isActive, onSelect, onDeselect, onEdit,\n}) => {\n  const handleToggleClick = useCallback(() => {\n    if (isActive) {\n      onDeselect();\n    } else {\n      onSelect();\n    }\n  }, [isActive, onSelect, onDeselect]);\n\n  return (\n    <div className={styles.wrapper}>\n      <Button\n        fluid\n        content={name}\n        active={isActive}\n        disabled={!isPersisted}\n        className={classNames(styles.labelButton, isActive && styles.labelButtonActive)}\n        style={{\n          background: LabelColors.MAP[color],\n        }}\n        onClick={handleToggleClick}\n      />\n      <Button\n        icon=\"pencil\"\n        size=\"small\"\n        disabled={!isPersisted}\n        className={styles.editButton}\n        onClick={onEdit}\n      />\n    </div>\n  );\n});\n\nItem.propTypes = {\n  name: PropTypes.string,\n  color: PropTypes.string.isRequired,\n  isPersisted: PropTypes.bool.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onDeselect: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\n\nItem.defaultProps = {\n  name: undefined,\n};\n\nexport default Item;\n","import pick from 'lodash/pick';\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'semantic-ui-react';\nimport { Popup } from '../../lib/custom-ui';\n\nimport { useSteps } from '../../hooks';\nimport AddStep from './AddStep';\nimport EditStep from './EditStep';\nimport Item from './Item';\n\nimport styles from './LabelsStep.module.css';\n\nconst StepTypes = {\n  ADD: 'ADD',\n  EDIT: 'EDIT',\n};\n\nconst LabelsStep = React.memo(\n  ({\n    items, currentIds, title, onSelect, onDeselect, onCreate, onUpdate, onDelete, onBack,\n  }) => {\n    const [t] = useTranslation();\n    const [step, openStep, handleBack] = useSteps();\n\n    const handleAddClick = useCallback(() => {\n      openStep(StepTypes.ADD);\n    }, [openStep]);\n\n    const handleEdit = useCallback(\n      (id) => {\n        openStep(StepTypes.EDIT, {\n          id,\n        });\n      },\n      [openStep],\n    );\n\n    const handleSelect = useCallback(\n      (id) => {\n        onSelect(id);\n      },\n      [onSelect],\n    );\n\n    const handleDeselect = useCallback(\n      (id) => {\n        onDeselect(id);\n      },\n      [onDeselect],\n    );\n\n    const handleUpdate = useCallback(\n      (id, data) => {\n        onUpdate(id, data);\n      },\n      [onUpdate],\n    );\n\n    const handleDelete = useCallback(\n      (id) => {\n        onDelete(id);\n      },\n      [onDelete],\n    );\n\n    if (step) {\n      switch (step.type) {\n        case StepTypes.ADD:\n          return <AddStep onCreate={onCreate} onBack={handleBack} />;\n        case StepTypes.EDIT: {\n          const currentItem = items.find((item) => item.id === step.params.id);\n\n          if (currentItem) {\n            return (\n              <EditStep\n                defaultData={pick(currentItem, ['name', 'color'])}\n                onUpdate={(data) => handleUpdate(currentItem.id, data)}\n                onDelete={() => handleDelete(currentItem.id)}\n                onBack={handleBack}\n              />\n            );\n          }\n\n          openStep(null);\n\n          break;\n        }\n        default:\n      }\n    }\n\n    return (\n      <>\n        <Popup.Header onBack={onBack}>{t(title)}</Popup.Header>\n        <Popup.Content>\n          {items.map((item) => (\n            <Item\n              key={item.id}\n              name={item.name}\n              color={item.color}\n              isPersisted={item.isPersisted}\n              isActive={currentIds.includes(item.id)}\n              onSelect={() => handleSelect(item.id)}\n              onDeselect={() => handleDeselect(item.id)}\n              onEdit={() => handleEdit(item.id)}\n            />\n          ))}\n          <Button\n            fluid\n            content={t('action.createNewLabel')}\n            className={styles.addButton}\n            onClick={handleAddClick}\n          />\n        </Popup.Content>\n      </>\n    );\n  },\n);\n\nLabelsStep.propTypes = {\n  /* eslint-disable react/forbid-prop-types */\n  items: PropTypes.array.isRequired,\n  currentIds: PropTypes.array.isRequired,\n  /* eslint-enable react/forbid-prop-types */\n  title: PropTypes.string,\n  onSelect: PropTypes.func.isRequired,\n  onDeselect: PropTypes.func.isRequired,\n  onCreate: PropTypes.func.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onBack: PropTypes.func,\n};\n\nLabelsStep.defaultProps = {\n  title: 'common.labels',\n  onBack: undefined,\n};\n\nexport default LabelsStep;\n","import LabelsStep from './LabelsStep';\n\nexport default LabelsStep;\n","import React, {\n  useCallback, useEffect, useMemo, useRef,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport DatePicker from 'react-datepicker';\nimport { Button, Form } from 'semantic-ui-react';\nimport { Input, Popup } from '../../lib/custom-ui';\n\nimport {\n  useDeepCompareCallback, useDidUpdate, useForm, useToggle,\n} from '../../hooks';\n\nimport styles from './EditDeadlineStep.module.css';\n\nconst EditDeadlineStep = React.memo(({\n  defaultValue, onUpdate, onBack, onClose,\n}) => {\n  const [t] = useTranslation();\n\n  const [data, handleFieldChange, setData] = useForm(() => {\n    const date = defaultValue || new Date().setHours(12, 0, 0, 0);\n\n    return {\n      date: t('format:date', {\n        postProcess: 'formatDate',\n        value: date,\n      }),\n      time: t('format:time', {\n        postProcess: 'formatDate',\n        value: date,\n      }),\n    };\n  });\n\n  const [selectTimeFieldState, selectTimeField] = useToggle();\n\n  const dateField = useRef(null);\n  const timeField = useRef(null);\n\n  const nullableDate = useMemo(() => {\n    const date = t('format:date', {\n      postProcess: 'parseDate',\n      value: data.date,\n    });\n\n    if (Number.isNaN(date.getTime())) {\n      return null;\n    }\n\n    return date;\n  }, [data.date, t]);\n\n  const handleDatePickerChange = useCallback(\n    (date) => {\n      setData((prevData) => ({\n        ...prevData,\n        date: t('format:date', {\n          postProcess: 'formatDate',\n          value: date,\n        }),\n      }));\n      selectTimeField();\n    },\n    [setData, selectTimeField, t],\n  );\n\n  const handleSubmit = useDeepCompareCallback(() => {\n    if (!nullableDate) {\n      dateField.current.select();\n      return;\n    }\n\n    const value = t('format:dateTime', {\n      postProcess: 'parseDate',\n      value: `${data.date} ${data.time}`,\n    });\n\n    if (Number.isNaN(value.getTime())) {\n      timeField.current.select();\n      return;\n    }\n\n    if (!defaultValue || value.getTime() !== defaultValue.getTime()) {\n      onUpdate(value);\n    }\n\n    onClose();\n  }, [defaultValue, onUpdate, onClose, data, nullableDate]);\n\n  const handleClearClick = useDeepCompareCallback(() => {\n    if (defaultValue) {\n      onUpdate(null);\n    }\n\n    onClose();\n  }, [defaultValue, onUpdate, onClose]);\n\n  useEffect(() => {\n    dateField.current.select();\n  }, []);\n\n  useDidUpdate(() => {\n    timeField.current.select();\n  }, [selectTimeFieldState]);\n\n  return (\n    <>\n      <Popup.Header onBack={onBack}>\n        {t('common.editDeadline', {\n          context: 'title',\n        })}\n      </Popup.Header>\n      <Popup.Content>\n        <Form onSubmit={handleSubmit}>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.fieldBox}>\n              <div className={styles.text}>{t('common.date')}</div>\n              <Input ref={dateField} name=\"date\" value={data.date} onChange={handleFieldChange} />\n            </div>\n            <div className={styles.fieldBox}>\n              <div className={styles.text}>{t('common.time')}</div>\n              <Input ref={timeField} name=\"time\" value={data.time} onChange={handleFieldChange} />\n            </div>\n          </div>\n          <DatePicker inline selected={nullableDate} onChange={handleDatePickerChange} />\n          <Button positive content={t('action.save')} />\n        </Form>\n        <Button\n          negative\n          content={t('action.remove')}\n          className={styles.deleteButton}\n          onClick={handleClearClick}\n        />\n      </Popup.Content>\n    </>\n  );\n});\n\nEditDeadlineStep.propTypes = {\n  defaultValue: PropTypes.instanceOf(Date),\n  onUpdate: PropTypes.func.isRequired,\n  onBack: PropTypes.func,\n  onClose: PropTypes.func.isRequired,\n};\n\nEditDeadlineStep.defaultProps = {\n  defaultValue: undefined,\n  onBack: undefined,\n};\n\nexport default EditDeadlineStep;\n","import EditDeadlineStep from './EditDeadlineStep';\n\nexport default EditDeadlineStep;\n","// eslint-disable-next-line max-len\nconst getFullSeconds = ({ startedAt, total }) => (startedAt ? Math.floor((new Date() - startedAt) / 1000) + total : total);\n\nexport const createTimer = ({ hours, minutes, seconds }) => ({\n  startedAt: null,\n  total: hours * 60 * 60 + minutes * 60 + seconds,\n});\n\nexport const updateTimer = ({ startedAt }, parts) => ({\n  ...createTimer(parts),\n  startedAt: startedAt && new Date(),\n});\n\nexport const startTimer = (timer) => ({\n  startedAt: new Date(),\n  total: timer ? timer.total : 0,\n});\n\nexport const stopTimer = (timer) => ({\n  startedAt: null,\n  total: getFullSeconds(timer),\n});\n\nexport const getTimerParts = (timer) => {\n  const fullSeconds = getFullSeconds(timer);\n\n  const hours = Math.floor(fullSeconds / 3600);\n  const minutes = Math.floor((fullSeconds - hours * 3600) / 60);\n  const seconds = fullSeconds - hours * 3600 - minutes * 60;\n\n  return {\n    hours,\n    minutes,\n    seconds,\n  };\n};\n\nexport const formatTimer = (timer) => {\n  const { hours, minutes, seconds } = getTimerParts(timer);\n\n  return [hours, ...[minutes, seconds].map((part) => (part < 10 ? `0${part}` : part))].join(':');\n};\n","import dequal from 'dequal';\nimport React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form } from 'semantic-ui-react';\nimport { Input, Popup } from '../../lib/custom-ui';\n\nimport { useDeepCompareCallback, useForm, useToggle } from '../../hooks';\nimport {\n  createTimer, getTimerParts, startTimer, stopTimer, updateTimer,\n} from '../../utils/timer';\n\nimport styles from './EditTimerStep.module.css';\n\nconst createData = (timer) => {\n  if (!timer) {\n    return {\n      hours: '0',\n      minutes: '0',\n      seconds: '0',\n    };\n  }\n\n  const { hours, minutes, seconds } = getTimerParts(timer);\n\n  return {\n    hours: `${hours}`,\n    minutes: `${minutes}`,\n    seconds: `${seconds}`,\n  };\n};\n\nconst EditTimerStep = React.memo(({\n  defaultValue, onUpdate, onBack, onClose,\n}) => {\n  const [t] = useTranslation();\n  const [data, handleFieldChange, setData] = useForm(() => createData(defaultValue));\n  const [isEditing, toggleEdit] = useToggle();\n\n  const hoursField = useRef(null);\n  const minutesField = useRef(null);\n  const secondsField = useRef(null);\n\n  const handleStartClick = useDeepCompareCallback(() => {\n    onUpdate(startTimer(defaultValue));\n    onClose();\n  }, [defaultValue, onUpdate, onClose]);\n\n  const handleStopClick = useDeepCompareCallback(() => {\n    onUpdate(stopTimer(defaultValue));\n  }, [defaultValue, onUpdate]);\n\n  const handleClearClick = useDeepCompareCallback(() => {\n    if (defaultValue) {\n      onUpdate(null);\n    }\n\n    onClose();\n  }, [defaultValue, onUpdate, onClose]);\n\n  const handleToggleEditClick = useDeepCompareCallback(() => {\n    setData(createData(defaultValue));\n    toggleEdit();\n  }, [defaultValue, setData, toggleEdit]);\n\n  const handleSubmit = useDeepCompareCallback(() => {\n    const parts = {\n      hours: parseInt(data.hours, 10),\n      minutes: parseInt(data.minutes, 10),\n      seconds: parseInt(data.seconds, 10),\n    };\n\n    if (Number.isNaN(parts.hours)) {\n      hoursField.current.select();\n      return;\n    }\n\n    if (Number.isNaN(parts.minutes) || parts.minutes > 60) {\n      minutesField.current.select();\n      return;\n    }\n\n    if (Number.isNaN(parts.seconds) || parts.seconds > 60) {\n      secondsField.current.select();\n      return;\n    }\n\n    if (defaultValue) {\n      if (!dequal(parts, getTimerParts(defaultValue))) {\n        onUpdate(updateTimer(defaultValue, parts));\n      }\n    } else {\n      onUpdate(createTimer(parts));\n    }\n\n    onClose();\n  }, [defaultValue, onUpdate, onClose, data]);\n\n  useEffect(() => {\n    if (isEditing) {\n      hoursField.current.select();\n    }\n  }, [isEditing]);\n\n  return (\n    <>\n      <Popup.Header onBack={onBack}>\n        {t('common.editTimer', {\n          context: 'title',\n        })}\n      </Popup.Header>\n      <Popup.Content>\n        <Form onSubmit={handleSubmit}>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.fieldBox}>\n              <div className={styles.text}>{t('common.hours')}</div>\n              <Input\n                ref={hoursField}\n                name=\"hours\"\n                value={data.hours}\n                mask=\"9999\"\n                maskChar={null}\n                disabled={!isEditing}\n                onChange={handleFieldChange}\n              />\n            </div>\n            <div className={styles.fieldBox}>\n              <div className={styles.text}>{t('common.minutes')}</div>\n              <Input\n                ref={minutesField}\n                name=\"minutes\"\n                value={data.minutes}\n                mask=\"99\"\n                maskChar={null}\n                disabled={!isEditing}\n                onChange={handleFieldChange}\n              />\n            </div>\n            <div className={styles.fieldBox}>\n              <div className={styles.text}>{t('common.seconds')}</div>\n              <Input\n                ref={secondsField}\n                name=\"seconds\"\n                value={data.seconds}\n                mask=\"99\"\n                maskChar={null}\n                disabled={!isEditing}\n                onChange={handleFieldChange}\n              />\n            </div>\n            <Button\n              type=\"button\"\n              icon={isEditing ? 'close' : 'edit'}\n              className={styles.iconButton}\n              onClick={handleToggleEditClick}\n            />\n          </div>\n          {isEditing && <Button positive content={t('action.save')} />}\n        </Form>\n        {!isEditing\n          && (defaultValue && defaultValue.startedAt ? (\n            <Button positive content={t('action.stop')} icon=\"pause\" onClick={handleStopClick} />\n          ) : (\n            <Button positive content={t('action.start')} icon=\"play\" onClick={handleStartClick} />\n          ))}\n        <Button\n          negative\n          content={t('action.remove')}\n          className={styles.deleteButton}\n          onClick={handleClearClick}\n        />\n      </Popup.Content>\n    </>\n  );\n});\n\nEditTimerStep.propTypes = {\n  defaultValue: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onUpdate: PropTypes.func.isRequired,\n  onBack: PropTypes.func,\n  onClose: PropTypes.func.isRequired,\n};\n\nEditTimerStep.defaultProps = {\n  defaultValue: undefined,\n  onBack: undefined,\n};\n\nexport default EditTimerStep;\n","import EditTimerStep from './EditTimerStep';\n\nexport default EditTimerStep;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Menu } from 'semantic-ui-react';\nimport { withPopup } from '../../lib/popup';\nimport { Popup } from '../../lib/custom-ui';\n\nimport { useSteps } from '../../hooks';\nimport ProjectMembershipsStep from '../ProjectMembershipsStep';\nimport LabelsStep from '../LabelsStep';\nimport EditDeadlineStep from '../EditDeadlineStep';\nimport EditTimerStep from '../EditTimerStep';\nimport DeleteStep from '../DeleteStep';\n\nimport styles from './ActionsPopup.module.css';\n\nconst StepTypes = {\n  USERS: 'USERS',\n  LABELS: 'LABELS',\n  EDIT_DEADLINE: 'EDIT_DEADLINE',\n  EDIT_TIMER: 'EDIT_TIMER',\n  DELETE: 'DELETE',\n};\n\nconst ActionsStep = React.memo(\n  ({\n    card,\n    projectMemberships,\n    currentUserIds,\n    labels,\n    currentLabelIds,\n    onNameEdit,\n    onUpdate,\n    onDelete,\n    onUserAdd,\n    onUserRemove,\n    onLabelAdd,\n    onLabelRemove,\n    onLabelCreate,\n    onLabelUpdate,\n    onLabelDelete,\n    onClose,\n  }) => {\n    const [t] = useTranslation();\n    const [step, openStep, handleBack] = useSteps();\n\n    const handleNameEditClick = useCallback(() => {\n      onNameEdit();\n      onClose();\n    }, [onNameEdit, onClose]);\n\n    const handleUsersClick = useCallback(() => {\n      openStep(StepTypes.USERS);\n    }, [openStep]);\n\n    const handleLabelsClick = useCallback(() => {\n      openStep(StepTypes.LABELS);\n    }, [openStep]);\n\n    const handleEditDeadlineClick = useCallback(() => {\n      openStep(StepTypes.EDIT_DEADLINE);\n    }, [openStep]);\n\n    const handleEditTimerClick = useCallback(() => {\n      openStep(StepTypes.EDIT_TIMER);\n    }, [openStep]);\n\n    const handleDeleteClick = useCallback(() => {\n      openStep(StepTypes.DELETE);\n    }, [openStep]);\n\n    const handleDeadlineUpdate = useCallback(\n      (deadline) => {\n        onUpdate({\n          deadline,\n        });\n      },\n      [onUpdate],\n    );\n\n    const handleTimerUpdate = useCallback(\n      (timer) => {\n        onUpdate({\n          timer,\n        });\n      },\n      [onUpdate],\n    );\n\n    if (step) {\n      switch (step.type) {\n        case StepTypes.USERS:\n          return (\n            <ProjectMembershipsStep\n              items={projectMemberships}\n              currentUserIds={currentUserIds}\n              onUserSelect={onUserAdd}\n              onUserDeselect={onUserRemove}\n              onBack={handleBack}\n            />\n          );\n        case StepTypes.LABELS:\n          return (\n            <LabelsStep\n              items={labels}\n              currentIds={currentLabelIds}\n              onSelect={onLabelAdd}\n              onDeselect={onLabelRemove}\n              onCreate={onLabelCreate}\n              onUpdate={onLabelUpdate}\n              onDelete={onLabelDelete}\n              onBack={handleBack}\n            />\n          );\n        case StepTypes.EDIT_DEADLINE:\n          return (\n            <EditDeadlineStep\n              defaultValue={card.deadline}\n              onUpdate={handleDeadlineUpdate}\n              onBack={handleBack}\n              onClose={onClose}\n            />\n          );\n        case StepTypes.EDIT_TIMER:\n          return (\n            <EditTimerStep\n              defaultValue={card.timer}\n              onUpdate={handleTimerUpdate}\n              onBack={handleBack}\n              onClose={onClose}\n            />\n          );\n        case StepTypes.DELETE:\n          return (\n            <DeleteStep\n              title={t('common.deleteCard', {\n                context: 'title',\n              })}\n              content={t('common.areYouSureYouWantToDeleteThisCard')}\n              buttonContent={t('action.deleteCard')}\n              onConfirm={onDelete}\n              onBack={handleBack}\n            />\n          );\n        default:\n      }\n    }\n\n    return (\n      <>\n        <Popup.Header>\n          {t('common.cardActions', {\n            context: 'title',\n          })}\n        </Popup.Header>\n        <Popup.Content>\n          <Menu secondary vertical className={styles.menu}>\n            <Menu.Item className={styles.menuItem} onClick={handleNameEditClick}>\n              {t('action.editTitle', {\n                context: 'title',\n              })}\n            </Menu.Item>\n            <Menu.Item className={styles.menuItem} onClick={handleUsersClick}>\n              {t('common.members', {\n                context: 'title',\n              })}\n            </Menu.Item>\n            <Menu.Item className={styles.menuItem} onClick={handleLabelsClick}>\n              {t('common.labels', {\n                context: 'title',\n              })}\n            </Menu.Item>\n            <Menu.Item className={styles.menuItem} onClick={handleEditDeadlineClick}>\n              {t('action.editDeadline', {\n                context: 'title',\n              })}\n            </Menu.Item>\n            <Menu.Item className={styles.menuItem} onClick={handleEditTimerClick}>\n              {t('action.editTimer', {\n                context: 'title',\n              })}\n            </Menu.Item>\n            <Menu.Item className={styles.menuItem} onClick={handleDeleteClick}>\n              {t('action.deleteCard', {\n                context: 'title',\n              })}\n            </Menu.Item>\n          </Menu>\n        </Popup.Content>\n      </>\n    );\n  },\n);\n\nActionsStep.propTypes = {\n  /* eslint-disable react/forbid-prop-types */\n  card: PropTypes.object.isRequired,\n  projectMemberships: PropTypes.array.isRequired,\n  currentUserIds: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired,\n  currentLabelIds: PropTypes.array.isRequired,\n  /* eslint-enable react/forbid-prop-types */\n  onNameEdit: PropTypes.func.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onUserAdd: PropTypes.func.isRequired,\n  onUserRemove: PropTypes.func.isRequired,\n  onLabelAdd: PropTypes.func.isRequired,\n  onLabelRemove: PropTypes.func.isRequired,\n  onLabelCreate: PropTypes.func.isRequired,\n  onLabelUpdate: PropTypes.func.isRequired,\n  onLabelDelete: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default withPopup(ActionsStep);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport LabelColors from '../../constants/LabelColors';\n\nimport styles from './Label.module.css';\n\nconst SIZES = {\n  TINY: 'tiny',\n  SMALL: 'small',\n  MEDIUM: 'medium',\n};\n\n// TODO: move to styles\nconst STYLES = {\n  tiny: {\n    fontSize: '12px',\n    lineHeight: '20px',\n    maxWidth: '176px',\n    padding: '0px 6px',\n  },\n  small: {\n    fontSize: '12px',\n    lineHeight: '20px',\n    maxWidth: '176px',\n    padding: '2px 8px',\n  },\n  medium: {\n    fontSize: '14px',\n    lineHeight: '32px',\n    maxWidth: '230px',\n    padding: '0 12px',\n  },\n};\n\nconst Label = React.memo(({\n  name, color, size, isDisabled, onClick,\n}) => {\n  const style = {\n    ...STYLES[size],\n    background: LabelColors.MAP[color],\n  };\n\n  const contentNode = (\n    <div\n      title={name}\n      className={classNames(styles.wrapper, onClick && styles.hoverable)}\n      style={style}\n    >\n      {name || '\\u00A0'}\n    </div>\n  );\n\n  return onClick ? (\n    <button type=\"button\" disabled={isDisabled} className={styles.button} onClick={onClick}>\n      {contentNode}\n    </button>\n  ) : (\n    contentNode\n  );\n});\n\nLabel.propTypes = {\n  name: PropTypes.string,\n  color: PropTypes.oneOf(LabelColors.KEYS).isRequired,\n  size: PropTypes.oneOf(Object.values(SIZES)),\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nLabel.defaultProps = {\n  name: undefined,\n  size: SIZES.MEDIUM,\n  isDisabled: false,\n  onClick: undefined,\n};\n\nexport default Label;\n","import Label from './Label';\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport styles from './Deadline.module.css';\n\nconst SIZES = {\n  TINY: 'tiny',\n  SMALL: 'small',\n  MEDIUM: 'medium',\n};\n\n// TODO: move to styles\nconst STYLES = {\n  tiny: {\n    fontSize: '12px',\n    lineHeight: '20px',\n    padding: '0px 6px',\n  },\n  small: {\n    fontSize: '12px',\n    lineHeight: '20px',\n    padding: '2px 6px',\n  },\n  medium: {\n    lineHeight: '20px',\n    padding: '6px 12px',\n  },\n};\n\nconst FORMATS = {\n  tiny: 'longDate',\n  small: 'longDate',\n  medium: 'longDateTime',\n};\n\nconst Deadline = React.memo(({\n  value, size, isDisabled, onClick,\n}) => {\n  const [t] = useTranslation();\n\n  const style = {\n    ...STYLES[size],\n  };\n\n  const contentNode = (\n    <span className={classNames(styles.wrapper, onClick && styles.hoverable)} style={style}>\n      {t(`format:${FORMATS[size]}`, {\n        value,\n        postProcess: 'formatDate',\n      })}\n    </span>\n  );\n\n  return onClick ? (\n    <button type=\"button\" disabled={isDisabled} className={styles.button} onClick={onClick}>\n      {contentNode}\n    </button>\n  ) : (\n    contentNode\n  );\n});\n\nDeadline.propTypes = {\n  value: PropTypes.instanceOf(Date).isRequired,\n  size: PropTypes.oneOf(Object.values(SIZES)),\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nDeadline.defaultProps = {\n  size: SIZES.MEDIUM,\n  isDisabled: false,\n  onClick: undefined,\n};\n\nexport default Deadline;\n","import Deadline from './Deadline';\n\nexport default Deadline;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { useDeepCompareEffect, useForceUpdate, usePrevious } from '../../hooks';\nimport { formatTimer } from '../../utils/timer';\n\nimport styles from './Timer.module.css';\n\nconst SIZES = {\n  TINY: 'tiny',\n  SMALL: 'small',\n  MEDIUM: 'medium',\n};\n\n// TODO: move to styles\nconst STYLES = {\n  tiny: {\n    fontSize: '12px',\n    lineHeight: '20px',\n    padding: '0px 6px',\n  },\n  small: {\n    fontSize: '12px',\n    lineHeight: '20px',\n    padding: '2px 6px',\n  },\n  medium: {\n    lineHeight: '20px',\n    padding: '6px 12px',\n    textDecoration: 'underline',\n  },\n};\n\nconst Timer = React.memo(({\n  startedAt, total, size, isDisabled, onClick,\n}) => {\n  const prevStartedAt = usePrevious(startedAt);\n  const forceUpdate = useForceUpdate();\n\n  const interval = useRef(null);\n\n  const start = useCallback(() => {\n    interval.current = setInterval(() => {\n      forceUpdate();\n    }, 1000);\n  }, [forceUpdate]);\n\n  const stop = useCallback(() => {\n    clearInterval(interval.current);\n  }, []);\n\n  useDeepCompareEffect(() => {\n    if (prevStartedAt) {\n      if (!startedAt) {\n        stop();\n      }\n    } else if (startedAt) {\n      start();\n    }\n  }, [startedAt, prevStartedAt, start, stop]);\n\n  useEffect(\n    () => () => {\n      stop();\n    },\n    [stop],\n  );\n\n  const contentNode = (\n    <span className={classNames(styles.wrapper, onClick && styles.hoverable)} style={STYLES[size]}>\n      {formatTimer({ startedAt, total })}\n    </span>\n  );\n\n  return onClick ? (\n    <button type=\"button\" disabled={isDisabled} className={styles.button} onClick={onClick}>\n      {contentNode}\n    </button>\n  ) : (\n    contentNode\n  );\n});\n\nTimer.propTypes = {\n  startedAt: PropTypes.instanceOf(Date),\n  total: PropTypes.number.isRequired, // eslint-disable-line react/no-unused-prop-types\n  size: PropTypes.oneOf(Object.values(SIZES)),\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nTimer.defaultProps = {\n  startedAt: undefined,\n  size: SIZES.MEDIUM,\n  isDisabled: false,\n  onClick: undefined,\n};\n\nexport default Timer;\n","import useToggle from './use-toggle';\n\nexport default () => useToggle()[1];\n","import Timer from './Timer';\n\nexport default Timer;\n","import React, { useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport Paths from '../../constants/Paths';\nimport Tasks from './Tasks';\nimport EditName from './EditName';\nimport ActionsPopup from './ActionsPopup';\nimport User from '../User';\nimport Label from '../Label';\nimport Deadline from '../Deadline';\nimport Timer from '../Timer';\n\nimport styles from './Card.module.css';\n\nconst Card = React.memo(\n  ({\n    id,\n    index,\n    name,\n    deadline,\n    timer,\n    isPersisted,\n    notificationsTotal,\n    users,\n    labels,\n    tasks,\n    allProjectMemberships,\n    allLabels,\n    onUpdate,\n    onDelete,\n    onUserAdd,\n    onUserRemove,\n    onLabelAdd,\n    onLabelRemove,\n    onLabelCreate,\n    onLabelUpdate,\n    onLabelDelete,\n  }) => {\n    const editName = useRef(null);\n\n    const handleClick = useCallback(() => {\n      if (document.activeElement) {\n        document.activeElement.blur();\n      }\n    }, []);\n\n    const handleNameUpdate = useCallback(\n      (newName) => {\n        onUpdate({\n          name: newName,\n        });\n      },\n      [onUpdate],\n    );\n\n    const handleNameEdit = useCallback(() => {\n      editName.current.open();\n    }, []);\n\n    const contentNode = (\n      <>\n        {labels.length > 0 && (\n          <span className={styles.labels}>\n            {labels.map((label) => (\n              <span key={label.id} className={classNames(styles.attachment, styles.attachmentLeft)}>\n                <Label name={label.name} color={label.color} size=\"tiny\" />\n              </span>\n            ))}\n          </span>\n        )}\n        <div className={styles.name}>{name}</div>\n        {tasks.length > 0 && <Tasks items={tasks} />}\n        {(deadline || timer || notificationsTotal > 0) && (\n          <span className={styles.attachments}>\n            {notificationsTotal > 0 && (\n              <span\n                className={classNames(\n                  styles.attachment,\n                  styles.attachmentLeft,\n                  styles.notification,\n                )}\n              >\n                {notificationsTotal}\n              </span>\n            )}\n            {deadline && (\n              <span className={classNames(styles.attachment, styles.attachmentLeft)}>\n                <Deadline value={deadline} size=\"tiny\" />\n              </span>\n            )}\n            {timer && (\n              <span className={classNames(styles.attachment, styles.attachmentLeft)}>\n                <Timer startedAt={timer.startedAt} total={timer.total} size=\"tiny\" />\n              </span>\n            )}\n          </span>\n        )}\n        {users.length > 0 && (\n          <span className={classNames(styles.attachments, styles.attachmentsRight)}>\n            {users.map((user) => (\n              <span key={user.id} className={classNames(styles.attachment, styles.attachmentRight)}>\n                <User name={user.name} avatar={user.avatar} size=\"tiny\" />\n              </span>\n            ))}\n          </span>\n        )}\n      </>\n    );\n\n    return (\n      <Draggable draggableId={`card:${id}`} index={index} isDragDisabled={!isPersisted}>\n        {({ innerRef, draggableProps, dragHandleProps }) => (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <div {...draggableProps} {...dragHandleProps} ref={innerRef} className={styles.wrapper}>\n            <EditName ref={editName} defaultValue={name} onUpdate={handleNameUpdate}>\n              <div className={styles.card}>\n                {isPersisted ? (\n                  <>\n                    <Link\n                      to={isPersisted && Paths.CARDS.replace(':id', id)}\n                      className={styles.content}\n                      onClick={handleClick}\n                    >\n                      {contentNode}\n                    </Link>\n                    <ActionsPopup\n                      card={{\n                        id,\n                        name,\n                        deadline,\n                        timer,\n                        isPersisted,\n                      }}\n                      projectMemberships={allProjectMemberships}\n                      currentUserIds={users.map((user) => user.id)}\n                      labels={allLabels}\n                      currentLabelIds={labels.map((label) => label.id)}\n                      onNameEdit={handleNameEdit}\n                      onUpdate={onUpdate}\n                      onDelete={onDelete}\n                      onUserAdd={onUserAdd}\n                      onUserRemove={onUserRemove}\n                      onLabelAdd={onLabelAdd}\n                      onLabelRemove={onLabelRemove}\n                      onLabelCreate={onLabelCreate}\n                      onLabelUpdate={onLabelUpdate}\n                      onLabelDelete={onLabelDelete}\n                    >\n                      <Button className={classNames(styles.actionsButton, styles.target)}>\n                        <Icon fitted name=\"pencil\" size=\"small\" />\n                      </Button>\n                    </ActionsPopup>\n                  </>\n                ) : (\n                  <span className={styles.content}>{contentNode}</span>\n                )}\n              </div>\n            </EditName>\n          </div>\n        )}\n      </Draggable>\n    );\n  },\n);\n\nCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  deadline: PropTypes.instanceOf(Date),\n  timer: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  isPersisted: PropTypes.bool.isRequired,\n  notificationsTotal: PropTypes.number.isRequired,\n  /* eslint-disable react/forbid-prop-types */\n  users: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired,\n  tasks: PropTypes.array.isRequired,\n  allProjectMemberships: PropTypes.array.isRequired,\n  allLabels: PropTypes.array.isRequired,\n  /* eslint-enable react/forbid-prop-types */\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onUserAdd: PropTypes.func.isRequired,\n  onUserRemove: PropTypes.func.isRequired,\n  onLabelAdd: PropTypes.func.isRequired,\n  onLabelRemove: PropTypes.func.isRequired,\n  onLabelCreate: PropTypes.func.isRequired,\n  onLabelUpdate: PropTypes.func.isRequired,\n  onLabelDelete: PropTypes.func.isRequired,\n};\n\nCard.defaultProps = {\n  deadline: undefined,\n  timer: undefined,\n};\n\nexport default Card;\n","import Card from './Card';\n\nexport default Card;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport {\n  labelsForCurrentBoardSelector,\n  makeCardByIdSelector,\n  makeLabelsByCardIdSelector,\n  makeNotificationsTotalByCardIdSelector,\n  makeTasksByCardIdSelector,\n  makeUsersByCardIdSelector,\n  membershipsForCurrentProjectSelector,\n} from '../selectors';\nimport {\n  addLabelToCard,\n  addUserToCard,\n  createLabelInCurrentBoard,\n  deleteCard,\n  deleteLabel,\n  removeLabelFromCard,\n  removeUserFromCard,\n  updateLabel,\n  updateCard,\n} from '../actions/entry';\nimport Card from '../components/Card';\n\nconst makeMapStateToProps = () => {\n  const cardByIdSelector = makeCardByIdSelector();\n  const usersByCardIdSelector = makeUsersByCardIdSelector();\n  const labelsByCardIdSelector = makeLabelsByCardIdSelector();\n  const tasksByCardIdSelector = makeTasksByCardIdSelector();\n  const notificationsTotalByCardIdSelector = makeNotificationsTotalByCardIdSelector();\n\n  return (state, { id, index }) => {\n    const allProjectMemberships = membershipsForCurrentProjectSelector(state);\n    const allLabels = labelsForCurrentBoardSelector(state);\n\n    const {\n      name, deadline, timer, isPersisted,\n    } = cardByIdSelector(state, id);\n\n    const users = usersByCardIdSelector(state, id);\n    const labels = labelsByCardIdSelector(state, id);\n    const tasks = tasksByCardIdSelector(state, id);\n    const notificationsTotal = notificationsTotalByCardIdSelector(state, id);\n\n    return {\n      id,\n      index,\n      name,\n      deadline,\n      timer,\n      isPersisted,\n      notificationsTotal,\n      users,\n      labels,\n      tasks,\n      allProjectMemberships,\n      allLabels,\n    };\n  };\n};\n\nconst mapDispatchToProps = (dispatch, { id }) => bindActionCreators(\n  {\n    onUpdate: (data) => updateCard(id, data),\n    onDelete: () => deleteCard(id),\n    onUserAdd: (userId) => addUserToCard(userId, id),\n    onUserRemove: (userId) => removeUserFromCard(userId, id),\n    onLabelAdd: (labelId) => addLabelToCard(labelId, id),\n    onLabelRemove: (labelId) => removeLabelFromCard(labelId, id),\n    onLabelCreate: (data) => createLabelInCurrentBoard(data),\n    onLabelUpdate: (labelId, data) => updateLabel(labelId, data),\n    onLabelDelete: (labelId) => deleteLabel(labelId),\n  },\n  dispatch,\n);\n\nexport default connect(\n  makeMapStateToProps,\n  mapDispatchToProps,\n)(Card);\n","import React, {\n  useCallback, useEffect, useImperativeHandle, useRef, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { TextArea } from 'semantic-ui-react';\n\nimport { useField } from '../../hooks';\n\nimport styles from './EditName.module.css';\n\nconst EditName = React.forwardRef(({ children, defaultValue, onUpdate }, ref) => {\n  const [isOpened, setIsOpened] = useState(false);\n  const [value, handleFieldChange, setValue] = useField(defaultValue);\n\n  const field = useRef(null);\n\n  const open = useCallback(() => {\n    setIsOpened(true);\n    setValue(defaultValue);\n  }, [defaultValue, setValue]);\n\n  const close = useCallback(() => {\n    setIsOpened(false);\n    setValue(null);\n  }, [setValue]);\n\n  const submit = useCallback(() => {\n    const cleanValue = value.trim();\n\n    if (cleanValue && cleanValue !== defaultValue) {\n      onUpdate(cleanValue);\n    }\n\n    close();\n  }, [defaultValue, onUpdate, value, close]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n\n  const handleFieldClick = useCallback((event) => {\n    event.stopPropagation();\n  }, []);\n\n  const handleFieldKeyDown = useCallback(\n    (event) => {\n      switch (event.key) {\n        case 'Enter':\n          event.preventDefault();\n\n          submit();\n\n          break;\n        case 'Escape':\n          submit();\n\n          break;\n        default:\n      }\n    },\n    [submit],\n  );\n\n  const handleFieldBlur = useCallback(() => {\n    submit();\n  }, [submit]);\n\n  useEffect(() => {\n    if (isOpened) {\n      field.current.ref.current.select();\n    }\n  }, [isOpened]);\n\n  if (!isOpened) {\n    return children;\n  }\n\n  return (\n    <TextArea\n      ref={field}\n      as={TextareaAutosize}\n      value={value}\n      spellCheck={false}\n      className={styles.field}\n      onClick={handleFieldClick}\n      onKeyDown={handleFieldKeyDown}\n      onChange={handleFieldChange}\n      onBlur={handleFieldBlur}\n    />\n  );\n});\n\nEditName.propTypes = {\n  children: PropTypes.element.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n};\n\nexport default React.memo(EditName);\n","import React, {\n  useCallback, useEffect, useImperativeHandle, useRef, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { Button, Form, TextArea } from 'semantic-ui-react';\n\nimport {\n  useClosableForm,\n  useDeepCompareCallback,\n  useDidUpdate,\n  useForm,\n  useToggle,\n} from '../../hooks';\n\nimport styles from './AddCard.module.css';\n\nconst DEFAULT_DATA = {\n  name: '',\n};\n\nconst AddCard = React.forwardRef(({ children, onCreate }, ref) => {\n  const [t] = useTranslation();\n  const [isOpened, setIsOpened] = useState(false);\n  const [data, handleFieldChange, setData] = useForm(DEFAULT_DATA);\n  const [selectNameFieldState, selectNameField] = useToggle();\n\n  const nameField = useRef(null);\n\n  const open = useCallback(() => {\n    setIsOpened(true);\n  }, []);\n\n  const close = useCallback(() => {\n    setIsOpened(false);\n  }, []);\n\n  const submit = useDeepCompareCallback(() => {\n    const cleanData = {\n      ...data,\n      name: data.name.trim(),\n    };\n\n    if (!cleanData.name) {\n      nameField.current.ref.current.select();\n      return;\n    }\n\n    onCreate(cleanData);\n\n    setData(DEFAULT_DATA);\n    selectNameField();\n  }, [onCreate, data, setData, selectNameField]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n\n  const handleChildrenClick = useCallback(() => {\n    open();\n  }, [open]);\n\n  const handleFieldKeyDown = useCallback(\n    (event) => {\n      switch (event.key) {\n        case 'Enter':\n          event.preventDefault();\n\n          submit();\n\n          break;\n        case 'Escape':\n          close();\n\n          break;\n        default:\n      }\n    },\n    [close, submit],\n  );\n\n  const [handleFieldBlur, handleControlMouseOver, handleControlMouseOut] = useClosableForm(\n    isOpened,\n    close,\n  );\n\n  const handleSubmit = useCallback(() => {\n    submit();\n  }, [submit]);\n\n  useEffect(() => {\n    if (isOpened) {\n      nameField.current.ref.current.select();\n    }\n  }, [isOpened]);\n\n  useDidUpdate(() => {\n    nameField.current.ref.current.select();\n  }, [selectNameFieldState]);\n\n  if (!isOpened) {\n    return React.cloneElement(children, {\n      onClick: handleChildrenClick,\n    });\n  }\n\n  return (\n    <Form className={styles.wrapper} onSubmit={handleSubmit}>\n      <div className={styles.fieldWrapper}>\n        <TextArea\n          ref={nameField}\n          as={TextareaAutosize}\n          name=\"name\"\n          value={data.name}\n          placeholder={t('common.enterCardTitle')}\n          minRows={3}\n          spellCheck={false}\n          className={styles.field}\n          onKeyDown={handleFieldKeyDown}\n          onChange={handleFieldChange}\n          onBlur={handleFieldBlur}\n        />\n      </div>\n      <div className={styles.controls}>\n        {/* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */}\n        <Button\n          positive\n          content={t('action.addCard')}\n          className={styles.submitButton}\n          onMouseOver={handleControlMouseOver}\n          onMouseOut={handleControlMouseOut}\n        />\n      </div>\n    </Form>\n  );\n});\n\nAddCard.propTypes = {\n  children: PropTypes.element.isRequired,\n  onCreate: PropTypes.func.isRequired,\n};\n\nexport default React.memo(AddCard);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Menu } from 'semantic-ui-react';\nimport { withPopup } from '../../lib/popup';\nimport { Popup } from '../../lib/custom-ui';\n\nimport { useSteps } from '../../hooks';\nimport DeleteStep from '../DeleteStep';\n\nimport styles from './ActionsPopup.module.css';\n\nconst StepTypes = {\n  DELETE: 'DELETE',\n};\n\nconst ActionsStep = React.memo(({\n  onNameEdit, onCardAdd, onDelete, onClose,\n}) => {\n  const [t] = useTranslation();\n  const [step, openStep, handleBack] = useSteps();\n\n  const handleNameEditClick = useCallback(() => {\n    onNameEdit();\n    onClose();\n  }, [onNameEdit, onClose]);\n\n  const handleCardAddClick = useCallback(() => {\n    onCardAdd();\n    onClose();\n  }, [onCardAdd, onClose]);\n\n  const handleDeleteClick = useCallback(() => {\n    openStep(StepTypes.DELETE);\n  }, [openStep]);\n\n  if (step && step.type === StepTypes.DELETE) {\n    return (\n      <DeleteStep\n        title={t('common.deleteList', {\n          context: 'title',\n        })}\n        content={t('common.areYouSureYouWantToDeleteThisList')}\n        buttonContent={t('action.deleteList')}\n        onConfirm={onDelete}\n        onBack={handleBack}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popup.Header>\n        {t('common.listActions', {\n          context: 'title',\n        })}\n      </Popup.Header>\n      <Popup.Content>\n        <Menu secondary vertical className={styles.menu}>\n          <Menu.Item className={styles.menuItem} onClick={handleNameEditClick}>\n            {t('action.editTitle', {\n              context: 'title',\n            })}\n          </Menu.Item>\n          <Menu.Item className={styles.menuItem} onClick={handleCardAddClick}>\n            {t('action.addCard', {\n              context: 'title',\n            })}\n          </Menu.Item>\n          <Menu.Item className={styles.menuItem} onClick={handleDeleteClick}>\n            {t('action.deleteList', {\n              context: 'title',\n            })}\n          </Menu.Item>\n        </Menu>\n      </Popup.Content>\n    </>\n  );\n});\n\nActionsStep.propTypes = {\n  onNameEdit: PropTypes.func.isRequired,\n  onCardAdd: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default withPopup(ActionsStep);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M 24 9 L 24 24 L 9 24 L 9 26 L 24 26 L 24 41 L 26 41 L 26 26 L 41 26 L 41 24 L 26 24 L 26 9 Z\"\n});\n\nvar SvgPlusMathIcon = function SvgPlusMathIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 50 50\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPlusMathIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus-math-icon.53f1a4f4.svg\";\nexport { ForwardRef as ReactComponent };","import List from './List';\n\nexport default List;\n","import React, { useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { Button, Icon } from 'semantic-ui-react';\n\nimport DroppableTypes from '../../constants/DroppableTypes';\nimport CardContainer from '../../containers/CardContainer';\nimport EditName from './EditName';\nimport AddCard from './AddCard';\nimport ActionsPopup from './ActionsPopup';\nimport { ReactComponent as PlusMathIcon } from '../../assets/images/plus-math-icon.svg';\n\nimport styles from './List.module.css';\n\nconst List = React.memo(\n  ({\n    id, index, name, isPersisted, cardIds, onUpdate, onDelete, onCardCreate,\n  }) => {\n    const [t] = useTranslation();\n\n    const addCard = useRef(null);\n    const editName = useRef(null);\n\n    const handleHeaderClick = useCallback(() => {\n      if (isPersisted) {\n        editName.current.open();\n      }\n    }, [isPersisted]);\n\n    const handleNameUpdate = useCallback(\n      (newName) => {\n        onUpdate({\n          name: newName,\n        });\n      },\n      [onUpdate],\n    );\n\n    const handleNameEdit = useCallback(() => {\n      editName.current.open();\n    }, []);\n\n    const handleCardAdd = useCallback(() => {\n      addCard.current.open();\n    }, []);\n\n    const cardsNode = (\n      <Droppable\n        droppableId={`list:${id}`}\n        type={DroppableTypes.CARD}\n        isDropDisabled={!isPersisted}\n      >\n        {({ innerRef, droppableProps, placeholder }) => (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <div {...droppableProps} ref={innerRef}>\n            <div className={styles.cards}>\n              {cardIds.map((cardId, cardIndex) => (\n                <CardContainer key={cardId} id={cardId} index={cardIndex} />\n              ))}\n              {placeholder}\n            </div>\n            <AddCard ref={addCard} onCreate={onCardCreate}>\n              <button type=\"button\" disabled={!isPersisted} className={styles.addCardButton}>\n                <PlusMathIcon className={styles.addCardButtonIcon} />\n                <span className={styles.addCardButtonText}>\n                  {cardIds.length > 0 ? t('action.addAnotherCard') : t('action.addCard')}\n                </span>\n              </button>\n            </AddCard>\n          </div>\n        )}\n      </Droppable>\n    );\n\n    return (\n      <Draggable draggableId={`list:${id}`} index={index} isDragDisabled={!isPersisted}>\n        {({ innerRef, draggableProps, dragHandleProps }) => (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <div {...draggableProps} data-drag-scroller ref={innerRef} className={styles.wrapper}>\n            {/* eslint-disable jsx-a11y/click-events-have-key-events,\n                               jsx-a11y/no-static-element-interactions,\n                               react/jsx-props-no-spreading */}\n            <div {...dragHandleProps} className={styles.header} onClick={handleHeaderClick}>\n              {/* eslint-enable jsx-a11y/click-events-have-key-events,\n                                jsx-a11y/no-static-element-interactions,\n                                react/jsx-props-no-spreading */}\n              <EditName ref={editName} defaultValue={name} onUpdate={handleNameUpdate}>\n                <div className={styles.headerName}>{name}</div>\n              </EditName>\n              {isPersisted && (\n                <ActionsPopup\n                  onNameEdit={handleNameEdit}\n                  onCardAdd={handleCardAdd}\n                  onDelete={onDelete}\n                >\n                  <Button className={classNames(styles.headerButton, styles.target)}>\n                    <Icon fitted name=\"pencil\" size=\"small\" />\n                  </Button>\n                </ActionsPopup>\n              )}\n            </div>\n            <div className={styles.list}>{cardsNode}</div>\n          </div>\n        )}\n      </Draggable>\n    );\n  },\n);\n\nList.propTypes = {\n  id: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  isPersisted: PropTypes.bool.isRequired,\n  cardIds: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onCardCreate: PropTypes.func.isRequired,\n};\n\nexport default List;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { makeCardIdsByListIdSelector, makeListByIdSelector } from '../selectors';\nimport { createCard, deleteList, updateList } from '../actions/entry';\nimport List from '../components/List';\n\nconst makeMapStateToProps = () => {\n  const listByIdSelector = makeListByIdSelector();\n  const cardIdsByListIdSelector = makeCardIdsByListIdSelector();\n\n  return (state, { id, index }) => {\n    const { name, isPersisted } = listByIdSelector(state, id);\n    const cardIds = cardIdsByListIdSelector(state, id);\n\n    return {\n      id,\n      index,\n      name,\n      isPersisted,\n      cardIds,\n    };\n  };\n};\n\nconst mapDispatchToProps = (dispatch, { id }) => bindActionCreators(\n  {\n    onUpdate: (data) => updateList(id, data),\n    onDelete: () => deleteList(id),\n    onCardCreate: (data) => createCard(id, data),\n  },\n  dispatch,\n);\n\nexport default connect(\n  makeMapStateToProps,\n  mapDispatchToProps,\n)(List);\n","import React, { useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { TextArea } from 'semantic-ui-react';\n\nimport { useDidUpdate, useField, usePrevious } from '../../hooks';\n\nimport styles from './NameField.module.css';\n\nconst NameField = React.memo(({ defaultValue, onUpdate }) => {\n  const prevDefaultValue = usePrevious(defaultValue);\n  const [value, handleChange, setValue] = useField(defaultValue);\n\n  const isFocused = useRef(false);\n\n  const handleFocus = useCallback(() => {\n    isFocused.current = true;\n  }, []);\n\n  const handleKeyDown = useCallback((event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      event.target.blur();\n    }\n  }, []);\n\n  const handleBlur = useCallback(() => {\n    isFocused.current = false;\n\n    const cleanValue = value.trim();\n\n    if (cleanValue) {\n      if (cleanValue !== defaultValue) {\n        onUpdate(cleanValue);\n      }\n    } else {\n      setValue(defaultValue);\n    }\n  }, [defaultValue, onUpdate, value, setValue]);\n\n  useDidUpdate(() => {\n    if (!isFocused.current && defaultValue !== prevDefaultValue) {\n      setValue(defaultValue);\n    }\n  }, [defaultValue, prevDefaultValue, setValue]);\n\n  return (\n    <TextArea\n      as={TextareaAutosize}\n      value={value}\n      spellCheck={false}\n      className={styles.field}\n      onFocus={handleFocus}\n      onKeyDown={handleKeyDown}\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n  );\n});\n\nNameField.propTypes = {\n  defaultValue: PropTypes.string.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n};\n\nexport default NameField;\n","import React, {\n  useCallback, useEffect, useImperativeHandle, useRef, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { Button, Form, TextArea } from 'semantic-ui-react';\n\nimport { useClosableForm, useField } from '../../hooks';\n\nimport styles from './EditDescription.module.css';\n\nconst EditDescription = React.forwardRef(({ children, defaultValue, onUpdate }, ref) => {\n  const [t] = useTranslation();\n  const [isOpened, setIsOpened] = useState(false);\n  const [value, handleFieldChange, setValue] = useField(null);\n\n  const field = useRef(null);\n\n  const open = useCallback(() => {\n    setIsOpened(true);\n    setValue(defaultValue || '');\n  }, [defaultValue, setValue]);\n\n  const close = useCallback(() => {\n    setIsOpened(false);\n    setValue(null);\n  }, [setValue]);\n\n  const submit = useCallback(() => {\n    const cleanValue = value.trim() || null;\n\n    if (cleanValue !== defaultValue) {\n      onUpdate(cleanValue);\n    }\n\n    close();\n  }, [defaultValue, onUpdate, value, close]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n\n  const handleChildrenClick = useCallback(() => {\n    if (!getSelection().toString()) {\n      open();\n    }\n  }, [open]);\n\n  const handleFieldKeyDown = useCallback(\n    (event) => {\n      if (event.ctrlKey && event.key === 'Enter') {\n        submit();\n      }\n    },\n    [submit],\n  );\n\n  const [handleFieldBlur, handleControlMouseOver, handleControlMouseOut] = useClosableForm(\n    isOpened,\n    close,\n  );\n\n  const handleSubmit = useCallback(() => {\n    submit();\n  }, [submit]);\n\n  useEffect(() => {\n    if (isOpened) {\n      field.current.ref.current.select();\n    }\n  }, [isOpened]);\n\n  if (!isOpened) {\n    return React.cloneElement(children, {\n      onClick: handleChildrenClick,\n    });\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <TextArea\n        ref={field}\n        as={TextareaAutosize}\n        value={value}\n        placeholder={t('common.enterDescription')}\n        minRows={3}\n        spellCheck={false}\n        className={styles.field}\n        onKeyDown={handleFieldKeyDown}\n        onChange={handleFieldChange}\n        onBlur={handleFieldBlur}\n      />\n      <div className={styles.controls}>\n        {/* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */}\n        <Button\n          positive\n          content={t('action.save')}\n          onMouseOver={handleControlMouseOver}\n          onMouseOut={handleControlMouseOut}\n        />\n      </div>\n    </Form>\n  );\n});\n\nEditDescription.propTypes = {\n  children: PropTypes.element.isRequired,\n  defaultValue: PropTypes.string,\n  onUpdate: PropTypes.func.isRequired,\n};\n\nEditDescription.defaultProps = {\n  defaultValue: undefined,\n};\n\nexport default React.memo(EditDescription);\n","import React, {\n  useCallback, useEffect, useImperativeHandle, useRef, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { Button, Form, TextArea } from 'semantic-ui-react';\n\nimport { useClosableForm, useField } from '../../../hooks';\n\nimport styles from './EditName.module.css';\n\nconst EditName = React.forwardRef(({ children, defaultValue, onUpdate }, ref) => {\n  const [t] = useTranslation();\n  const [isOpened, setIsOpened] = useState(false);\n  const [value, handleFieldChange, setValue] = useField(null);\n\n  const field = useRef(null);\n\n  const open = useCallback(() => {\n    setIsOpened(true);\n    setValue(defaultValue);\n  }, [defaultValue, setValue]);\n\n  const close = useCallback(() => {\n    setIsOpened(false);\n    setValue(null);\n  }, [setValue]);\n\n  const submit = useCallback(() => {\n    const cleanValue = value.trim();\n\n    if (!cleanValue) {\n      field.current.ref.current.select();\n      return;\n    }\n\n    if (cleanValue !== defaultValue) {\n      onUpdate(cleanValue);\n    }\n\n    close();\n  }, [defaultValue, onUpdate, value, close]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n\n  const handleFieldKeyDown = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n\n        submit();\n      }\n    },\n    [submit],\n  );\n\n  const [handleFieldBlur, handleControlMouseOver, handleControlMouseOut] = useClosableForm(\n    isOpened,\n    close,\n  );\n\n  const handleSubmit = useCallback(() => {\n    submit();\n  }, [submit]);\n\n  useEffect(() => {\n    if (isOpened) {\n      field.current.ref.current.select();\n    }\n  }, [isOpened]);\n\n  if (!isOpened) {\n    return children;\n  }\n\n  return (\n    <Form onSubmit={handleSubmit} className={styles.wrapper}>\n      <TextArea\n        ref={field}\n        as={TextareaAutosize}\n        value={value}\n        minRows={2}\n        spellCheck={false}\n        className={styles.field}\n        onKeyDown={handleFieldKeyDown}\n        onChange={handleFieldChange}\n        onBlur={handleFieldBlur}\n      />\n      <div className={styles.controls}>\n        {/* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */}\n        <Button\n          positive\n          content={t('action.save')}\n          onMouseOver={handleControlMouseOver}\n          onMouseOut={handleControlMouseOut}\n        />\n      </div>\n    </Form>\n  );\n});\n\nEditName.propTypes = {\n  children: PropTypes.element.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n};\n\nexport default React.memo(EditName);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Menu } from 'semantic-ui-react';\nimport { withPopup } from '../../../lib/popup';\nimport { Popup } from '../../../lib/custom-ui';\n\nimport { useSteps } from '../../../hooks';\nimport DeleteStep from '../../DeleteStep';\n\nimport styles from './ActionsPopup.module.css';\n\nconst StepTypes = {\n  DELETE: 'DELETE',\n};\n\nconst ActionsStep = React.memo(({ onNameEdit, onDelete, onClose }) => {\n  const [t] = useTranslation();\n  const [step, openStep, handleBack] = useSteps();\n\n  const handleNameEditClick = useCallback(() => {\n    onNameEdit();\n    onClose();\n  }, [onNameEdit, onClose]);\n\n  const handleDeleteClick = useCallback(() => {\n    openStep(StepTypes.DELETE);\n  }, [openStep]);\n\n  if (step && step.type === StepTypes.DELETE) {\n    return (\n      <DeleteStep\n        title={t('common.deleteTask', {\n          context: 'title',\n        })}\n        content={t('common.areYouSureYouWantToDeleteThisTask')}\n        buttonContent={t('action.deleteTask')}\n        onConfirm={onDelete}\n        onBack={handleBack}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popup.Header>\n        {t('common.taskActions', {\n          context: 'title',\n        })}\n      </Popup.Header>\n      <Popup.Content>\n        <Menu secondary vertical className={styles.menu}>\n          <Menu.Item className={styles.menuItem} onClick={handleNameEditClick}>\n            {t('action.editDescription', {\n              context: 'title',\n            })}\n          </Menu.Item>\n          <Menu.Item className={styles.menuItem} onClick={handleDeleteClick}>\n            {t('action.deleteTask', {\n              context: 'title',\n            })}\n          </Menu.Item>\n        </Menu>\n      </Popup.Content>\n    </>\n  );\n});\n\nActionsStep.propTypes = {\n  onNameEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default withPopup(ActionsStep);\n","import React, { useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button, Checkbox, Icon } from 'semantic-ui-react';\n\nimport EditName from './EditName';\nimport ActionsPopup from './ActionsPopup';\n\nimport styles from './Item.module.css';\n\nconst Item = React.memo(({\n  name, isCompleted, isPersisted, onUpdate, onDelete,\n}) => {\n  const editName = useRef(null);\n\n  const handleClick = useCallback(() => {\n    if (isPersisted) {\n      editName.current.open();\n    }\n  }, [isPersisted]);\n\n  const handleNameUpdate = useCallback(\n    (newName) => {\n      onUpdate({\n        name: newName,\n      });\n    },\n    [onUpdate],\n  );\n\n  const handleToggleChange = useCallback(() => {\n    onUpdate({\n      isCompleted: !isCompleted,\n    });\n  }, [isCompleted, onUpdate]);\n\n  const handleNameEdit = useCallback(() => {\n    editName.current.open();\n  }, []);\n\n  return (\n    <div className={styles.wrapper}>\n      <span className={styles.checkboxWrapper}>\n        <Checkbox\n          checked={isCompleted}\n          disabled={!isPersisted}\n          className={styles.checkbox}\n          onChange={handleToggleChange}\n        />\n      </span>\n      <EditName ref={editName} defaultValue={name} onUpdate={handleNameUpdate}>\n        <div className={styles.content}>\n          {/* eslint-disable jsx-a11y/click-events-have-key-events,\n                             jsx-a11y/no-static-element-interactions */}\n          <span className={styles.text} onClick={handleClick}>\n            {/* eslint-enable jsx-a11y/click-events-have-key-events,\n                              jsx-a11y/no-static-element-interactions */}\n            <span className={classNames(styles.task, isCompleted && styles.taskCompleted)}>\n              {name}\n            </span>\n          </span>\n          {isPersisted && (\n            <ActionsPopup onNameEdit={handleNameEdit} onDelete={onDelete}>\n              <Button className={classNames(styles.button, styles.target)}>\n                <Icon fitted name=\"pencil\" size=\"small\" />\n              </Button>\n            </ActionsPopup>\n          )}\n        </div>\n      </EditName>\n    </div>\n  );\n});\n\nItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  isCompleted: PropTypes.bool.isRequired,\n  isPersisted: PropTypes.bool.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Item;\n","import React, {\n  useCallback, useEffect, useImperativeHandle, useRef, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { Button, Form, TextArea } from 'semantic-ui-react';\n\nimport {\n  useClosableForm,\n  useDeepCompareCallback,\n  useDidUpdate,\n  useForm,\n  useToggle,\n} from '../../../hooks';\n\nimport styles from './Add.module.css';\n\nconst DEFAULT_DATA = {\n  name: '',\n};\n\nconst Add = React.forwardRef(({ children, onCreate }, ref) => {\n  const [t] = useTranslation();\n  const [isOpened, setIsOpened] = useState(false);\n  const [data, handleFieldChange, setData] = useForm(DEFAULT_DATA);\n  const [selectNameFieldState, selectNameField] = useToggle();\n\n  const nameField = useRef(null);\n\n  const open = useCallback(() => {\n    setIsOpened(true);\n  }, []);\n\n  const close = useCallback(() => {\n    setIsOpened(false);\n  }, []);\n\n  const submit = useDeepCompareCallback(() => {\n    const cleanData = {\n      ...data,\n      name: data.name.trim(),\n    };\n\n    if (!cleanData.name) {\n      nameField.current.ref.current.select();\n      return;\n    }\n\n    onCreate(cleanData);\n\n    setData(DEFAULT_DATA);\n    selectNameField();\n  }, [onCreate, data, setData, selectNameField]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n\n  const handleChildrenClick = useCallback(() => {\n    open();\n  }, [open]);\n\n  const handleFieldKeyDown = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n\n        submit();\n      }\n    },\n    [submit],\n  );\n\n  const [handleFieldBlur, handleControlMouseOver, handleControlMouseOut] = useClosableForm(\n    isOpened,\n    close,\n  );\n\n  const handleSubmit = useCallback(() => {\n    submit();\n  }, [submit]);\n\n  useEffect(() => {\n    if (isOpened) {\n      nameField.current.ref.current.select();\n    }\n  }, [isOpened]);\n\n  useDidUpdate(() => {\n    nameField.current.ref.current.select();\n  }, [selectNameFieldState]);\n\n  if (!isOpened) {\n    return React.cloneElement(children, {\n      onClick: handleChildrenClick,\n    });\n  }\n\n  return (\n    <Form className={styles.wrapper} onSubmit={handleSubmit}>\n      <TextArea\n        ref={nameField}\n        as={TextareaAutosize}\n        name=\"name\"\n        value={data.name}\n        placeholder={t('common.enterTaskDescription')}\n        minRows={2}\n        spellCheck={false}\n        className={styles.field}\n        onKeyDown={handleFieldKeyDown}\n        onChange={handleFieldChange}\n        onBlur={handleFieldBlur}\n      />\n      <div className={styles.controls}>\n        {/* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */}\n        <Button\n          positive\n          content={t('action.addTask')}\n          onMouseOver={handleControlMouseOver}\n          onMouseOut={handleControlMouseOut}\n        />\n      </div>\n    </Form>\n  );\n});\n\nAdd.propTypes = {\n  children: PropTypes.element.isRequired,\n  onCreate: PropTypes.func.isRequired,\n};\n\nexport default React.memo(Add);\n","import Task from './Tasks';\n\nexport default Task;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Progress } from 'semantic-ui-react';\n\nimport Item from './Item';\nimport Add from './Add';\n\nimport styles from './Tasks.module.css';\n\nconst Tasks = React.memo(({\n  items, onCreate, onUpdate, onDelete,\n}) => {\n  const [t] = useTranslation();\n\n  const handleUpdate = useCallback(\n    (id, data) => {\n      onUpdate(id, data);\n    },\n    [onUpdate],\n  );\n\n  const handleDelete = useCallback(\n    (id) => {\n      onDelete(id);\n    },\n    [onDelete],\n  );\n\n  const completedItems = items.filter((item) => item.isCompleted);\n\n  return (\n    <>\n      {items.length > 0 && (\n        <Progress\n          autoSuccess\n          value={completedItems.length}\n          total={items.length}\n          color=\"blue\"\n          size=\"tiny\"\n          className={styles.progress}\n        />\n      )}\n      {items.map((item) => (\n        <Item\n          key={item.id}\n          name={item.name}\n          isCompleted={item.isCompleted}\n          isPersisted={item.isPersisted}\n          onUpdate={(data) => handleUpdate(item.id, data)}\n          onDelete={() => handleDelete(item.id)}\n        />\n      ))}\n      <Add onCreate={onCreate}>\n        <button type=\"button\" className={styles.taskButton}>\n          <span className={styles.taskButtonText}>\n            {items.length > 0 ? t('action.addAnotherTask') : t('action.addTask')}\n          </span>\n        </button>\n      </Add>\n    </>\n  );\n});\n\nTasks.propTypes = {\n  items: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n  onCreate: PropTypes.func.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React, { useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { Button, Form, TextArea } from 'semantic-ui-react';\n\nimport { useDeepCompareCallback, useForm } from '../../../hooks';\n\nimport styles from './AddComment.module.css';\n\nconst DEFAULT_DATA = {\n  text: '',\n};\n\nconst AddComment = React.memo(({ onCreate }) => {\n  const [t] = useTranslation();\n  const [data, handleFieldChange, setData] = useForm(DEFAULT_DATA);\n\n  const textField = useRef(null);\n\n  const submit = useDeepCompareCallback(() => {\n    const cleanData = {\n      ...data,\n      text: data.text.trim(),\n    };\n\n    if (!cleanData.text) {\n      textField.current.ref.current.select();\n      return;\n    }\n\n    onCreate(cleanData);\n\n    setData(DEFAULT_DATA);\n  }, [onCreate, data, setData]);\n\n  const handleFieldKeyDown = useCallback(\n    (event) => {\n      if (event.ctrlKey && event.key === 'Enter') {\n        submit();\n      }\n    },\n    [submit],\n  );\n\n  const handleSubmit = useCallback(() => {\n    submit();\n  }, [submit]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <TextArea\n        ref={textField}\n        as={TextareaAutosize}\n        name=\"text\"\n        value={data.text}\n        placeholder={t('common.writeComment')}\n        minRows={3}\n        spellCheck={false}\n        className={styles.field}\n        onKeyDown={handleFieldKeyDown}\n        onChange={handleFieldChange}\n      />\n      <div className={styles.controls}>\n        <Button positive content={t('action.addComment')} disabled={!data.text} />\n      </div>\n    </Form>\n  );\n});\n\nAddComment.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n};\n\nexport default AddComment;\n","import dequal from 'dequal';\nimport React, {\n  useCallback, useEffect, useImperativeHandle, useRef, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { Button, Form, TextArea } from 'semantic-ui-react';\n\nimport { useClosableForm, useDeepCompareCallback, useForm } from '../../../hooks';\n\nimport styles from './EditComment.module.css';\n\nconst EditComment = React.forwardRef(({ children, defaultData, onUpdate }, ref) => {\n  const [t] = useTranslation();\n  const [isOpened, setIsOpened] = useState(false);\n  const [data, handleFieldChange, setData] = useForm(null);\n\n  const textField = useRef(null);\n\n  const open = useDeepCompareCallback(() => {\n    setIsOpened(true);\n    setData({\n      text: '',\n      ...defaultData,\n    });\n  }, [defaultData, setData]);\n\n  const close = useCallback(() => {\n    setIsOpened(false);\n    setData(null);\n  }, [setData]);\n\n  const submit = useDeepCompareCallback(() => {\n    const cleanData = {\n      ...data,\n      text: data.text.trim(),\n    };\n\n    if (!cleanData.text) {\n      textField.current.ref.current.select();\n      return;\n    }\n\n    if (!dequal(cleanData, defaultData)) {\n      onUpdate(cleanData);\n    }\n\n    close();\n  }, [defaultData, onUpdate, data, close]);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n\n  const handleFieldKeyDown = useCallback(\n    (event) => {\n      if (event.ctrlKey && event.key === 'Enter') {\n        submit();\n      }\n    },\n    [submit],\n  );\n\n  const [handleFieldBlur, handleControlMouseOver, handleControlMouseOut] = useClosableForm(\n    isOpened,\n    close,\n  );\n\n  const handleSubmit = useCallback(() => {\n    submit();\n  }, [submit]);\n\n  useEffect(() => {\n    if (isOpened) {\n      textField.current.ref.current.select();\n    }\n  }, [isOpened]);\n\n  if (!isOpened) {\n    return children;\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <TextArea\n        ref={textField}\n        as={TextareaAutosize}\n        name=\"text\"\n        value={data.text}\n        minRows={3}\n        spellCheck={false}\n        className={styles.field}\n        onKeyDown={handleFieldKeyDown}\n        onChange={handleFieldChange}\n        onBlur={handleFieldBlur}\n      />\n      <div className={styles.controls}>\n        {/* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */}\n        <Button\n          positive\n          content={t('action.save')}\n          onMouseOver={handleControlMouseOver}\n          onMouseOut={handleControlMouseOut}\n        />\n      </div>\n    </Form>\n  );\n});\n\nEditComment.propTypes = {\n  children: PropTypes.element.isRequired,\n  defaultData: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  onUpdate: PropTypes.func.isRequired,\n};\n\nexport default React.memo(EditComment);\n","import { withPopup } from '../lib/popup';\n\nimport DeleteStep from './DeleteStep';\n\nexport default withPopup(DeleteStep);\n","import React, { useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Comment } from 'semantic-ui-react';\nimport { Markdown } from '../../../lib/custom-ui';\n\nimport EditComment from './EditComment';\nimport User from '../../User';\nimport DeletePopup from '../../DeletePopup';\n\nimport styles from './ItemComment.module.css';\n\nconst ItemComment = React.memo(\n  ({\n    data, createdAt, isPersisted, user, isEditable, onUpdate, onDelete,\n  }) => {\n    const [t] = useTranslation();\n\n    const editComment = useRef(null);\n\n    const handleEditClick = useCallback(() => {\n      editComment.current.open();\n    }, []);\n\n    return (\n      <Comment>\n        <span className={styles.user}>\n          <User name={user.name} avatar={user.avatar} />\n        </span>\n        <div className={classNames(styles.content)}>\n          <div className={styles.title}>\n            <span className={styles.author}>{user.name}</span>\n            <span className={styles.date}>\n              {t('format:longDateTime', {\n                postProcess: 'formatDate',\n                value: createdAt,\n              })}\n            </span>\n          </div>\n          <EditComment ref={editComment} defaultData={data} onUpdate={onUpdate}>\n            <>\n              <Markdown source={data.text} linkTarget=\"_blank\" className={styles.text} />\n              <Comment.Actions>\n                {user.isCurrent && (\n                  <Comment.Action\n                    as=\"button\"\n                    content={t('action.edit')}\n                    disabled={!isPersisted}\n                    onClick={handleEditClick}\n                  />\n                )}\n                {(user.isCurrent || isEditable) && (\n                  <DeletePopup\n                    title={t('common.deleteComment', {\n                      context: 'title',\n                    })}\n                    content={t('common.areYouSureYouWantToDeleteThisComment')}\n                    buttonContent={t('action.deleteComment')}\n                    onConfirm={onDelete}\n                  >\n                    <Comment.Action\n                      as=\"button\"\n                      content={t('action.delete')}\n                      disabled={!isPersisted}\n                    />\n                  </DeletePopup>\n                )}\n              </Comment.Actions>\n            </>\n          </EditComment>\n        </div>\n      </Comment>\n    );\n  },\n);\n\nItemComment.propTypes = {\n  data: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  createdAt: PropTypes.instanceOf(Date).isRequired,\n  isPersisted: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isEditable: PropTypes.bool.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ItemComment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Comment } from 'semantic-ui-react';\n\nimport { ActionTypes } from '../../../constants/Enums';\nimport ItemComment from './ItemComment';\nimport User from '../../User';\n\nimport styles from './Item.module.css';\n\nconst Item = React.memo(({\n  type, data, createdAt, user,\n}) => {\n  const [t] = useTranslation();\n\n  let contentNode;\n\n  switch (type) {\n    case ActionTypes.CREATE_CARD:\n      contentNode = (\n        <Trans\n          i18nKey=\"common.userAddedThisCardToList\"\n          values={{\n            user: user.name,\n            list: data.list.name,\n          }}\n        >\n          <span className={styles.author}>{user.name}</span>\n          <span className={styles.text}>\n            {' added this card to '}\n            {data.list.name}\n          </span>\n        </Trans>\n      );\n\n      break;\n    case ActionTypes.MOVE_CARD:\n      contentNode = (\n        <Trans\n          i18nKey=\"common.userMovedThisCardFromListToList\"\n          values={{\n            user: user.name,\n            fromList: data.fromList.name,\n            toList: data.toList.name,\n          }}\n        >\n          <span className={styles.author}>{user.name}</span>\n          <span className={styles.text}>\n            {' moved this card from '}\n            {data.fromList.name}\n            {' to '}\n            {data.toList.name}\n          </span>\n        </Trans>\n      );\n\n      break;\n    default:\n      contentNode = null;\n  }\n\n  return (\n    <Comment>\n      <span className={styles.user}>\n        <User name={user.name} avatar={user.avatar} />\n      </span>\n      <div className={classNames(styles.content)}>\n        <div>{contentNode}</div>\n        <span className={styles.date}>\n          {t('format:longDateTime', {\n            postProcess: 'formatDate',\n            value: createdAt,\n          })}\n        </span>\n      </div>\n    </Comment>\n  );\n});\n\nItem.Comment = ItemComment;\n\nItem.propTypes = {\n  type: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  createdAt: PropTypes.instanceOf(Date).isRequired,\n  user: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport default Item;\n","import Actions from './Actions';\n\nexport default Actions;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Comment, Icon, Loader, Visibility,\n} from 'semantic-ui-react';\n\nimport { ActionTypes } from '../../../constants/Enums';\nimport AddComment from './AddComment';\nimport Item from './Item';\n\nimport styles from './Actions.module.css';\n\nconst Actions = React.memo(\n  ({\n    items,\n    isFetching,\n    isAllFetched,\n    isEditable,\n    onFetch,\n    onCommentCreate,\n    onCommentUpdate,\n    onCommentDelete,\n  }) => {\n    const [t] = useTranslation();\n\n    const handleCommentUpdate = useCallback(\n      (id, data) => {\n        onCommentUpdate(id, data);\n      },\n      [onCommentUpdate],\n    );\n\n    const handleCommentDelete = useCallback(\n      (id) => {\n        onCommentDelete(id);\n      },\n      [onCommentDelete],\n    );\n\n    return (\n      <>\n        <div className={styles.contentModule}>\n          <div className={styles.moduleWrapper}>\n            <Icon name=\"comment outline\" className={styles.moduleIcon} />\n            <div className={styles.moduleHeader}>{t('common.addComment')}</div>\n            <AddComment onCreate={onCommentCreate} />\n          </div>\n        </div>\n        <div className={styles.contentModule}>\n          <div className={styles.moduleWrapper}>\n            <Icon name=\"list ul\" className={styles.moduleIcon} />\n            <div className={styles.moduleHeader}>{t('common.actions')}</div>\n            <div className={styles.wrapper}>\n              <Comment.Group>\n                {items.map((item) => (item.type === ActionTypes.COMMENT_CARD ? (\n                  <Item.Comment\n                    key={item.id}\n                    data={item.data}\n                    createdAt={item.createdAt}\n                    isPersisted={item.isPersisted}\n                    user={item.user}\n                    isEditable={isEditable}\n                    onUpdate={(data) => handleCommentUpdate(item.id, data)}\n                    onDelete={() => handleCommentDelete(item.id)}\n                  />\n                ) : (\n                  <Item\n                    key={item.id}\n                    type={item.type}\n                    data={item.data}\n                    createdAt={item.createdAt}\n                    user={item.user}\n                  />\n                )))}\n              </Comment.Group>\n            </div>\n            {isFetching ? (\n              <Loader active inverted inline=\"centered\" size=\"small\" className={styles.loader} />\n            ) : (\n              !isAllFetched && <Visibility fireOnMount onOnScreen={onFetch} />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  },\n);\n\nActions.propTypes = {\n  items: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n  isFetching: PropTypes.bool.isRequired,\n  isAllFetched: PropTypes.bool.isRequired,\n  isEditable: PropTypes.bool.isRequired,\n  onFetch: PropTypes.func.isRequired,\n  onCommentCreate: PropTypes.func.isRequired,\n  onCommentUpdate: PropTypes.func.isRequired,\n  onCommentDelete: PropTypes.func.isRequired,\n};\n\nexport default Actions;\n","import { withPopup } from '../lib/popup';\n\nimport ProjectMembershipsStep from './ProjectMembershipsStep';\n\nexport default withPopup(ProjectMembershipsStep);\n","import { withPopup } from '../lib/popup';\n\nimport LabelsStep from './LabelsStep';\n\nexport default withPopup(LabelsStep);\n","import { withPopup } from '../lib/popup';\n\nimport EditDeadlineStep from './EditDeadlineStep';\n\nexport default withPopup(EditDeadlineStep);\n","import { withPopup } from '../lib/popup';\n\nimport EditTimerStep from './EditTimerStep';\n\nexport default withPopup(EditTimerStep);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button, Grid, Icon, Modal,\n} from 'semantic-ui-react';\nimport { Markdown } from '../../lib/custom-ui';\n\nimport NameField from './NameField';\nimport EditDescription from './EditDescription';\nimport Tasks from './Tasks';\nimport Actions from './Actions';\nimport User from '../User';\nimport Label from '../Label';\nimport Deadline from '../Deadline';\nimport Timer from '../Timer';\nimport ProjectMembershipsPopup from '../ProjectMembershipsPopup';\nimport LabelsPopup from '../LabelsPopup';\nimport EditDeadlinePopup from '../EditDeadlinePopup';\nimport EditTimerPopup from '../EditTimerPopup';\nimport DeletePopup from '../DeletePopup';\n\nimport styles from './CardModal.module.css';\n\nconst CardModal = React.memo(\n  ({\n    name,\n    description,\n    deadline,\n    timer,\n    isSubscribed,\n    isActionsFetching,\n    isAllActionsFetched,\n    users,\n    labels,\n    tasks,\n    actions,\n    allProjectMemberships,\n    allLabels,\n    isEditable,\n    onUpdate,\n    onDelete,\n    onUserAdd,\n    onUserRemove,\n    onLabelAdd,\n    onLabelRemove,\n    onLabelCreate,\n    onLabelUpdate,\n    onLabelDelete,\n    onTaskCreate,\n    onTaskUpdate,\n    onTaskDelete,\n    onActionsFetch,\n    onCommentActionCreate,\n    onCommentActionUpdate,\n    onCommentActionDelete,\n    onClose,\n  }) => {\n    const [t] = useTranslation();\n\n    const handleNameUpdate = useCallback(\n      (newName) => {\n        onUpdate({\n          name: newName,\n        });\n      },\n      [onUpdate],\n    );\n\n    const handleDescriptionUpdate = useCallback(\n      (newDescription) => {\n        onUpdate({\n          description: newDescription,\n        });\n      },\n      [onUpdate],\n    );\n\n    const handleDeadlineUpdate = useCallback(\n      (newDeadline) => {\n        onUpdate({\n          deadline: newDeadline,\n        });\n      },\n      [onUpdate],\n    );\n\n    const handleTimerUpdate = useCallback(\n      (newTimer) => {\n        onUpdate({\n          timer: newTimer,\n        });\n      },\n      [onUpdate],\n    );\n\n    const handleToggleSubscribeClick = useCallback(() => {\n      onUpdate({\n        isSubscribed: !isSubscribed,\n      });\n    }, [isSubscribed, onUpdate]);\n\n    const userIds = users.map((user) => user.id);\n    const labelIds = labels.map((label) => label.id);\n\n    return (\n      <Modal\n        open\n        closeIcon\n        size=\"small\"\n        centered={false}\n        onClose={onClose}\n      >\n        <Grid className={styles.grid}>\n          <Grid.Row className={styles.headerPadding}>\n            <Grid.Column width={16} className={styles.headerPadding}>\n              <div className={styles.headerWrapper}>\n                <Icon name=\"list alternate outline\" className={styles.moduleIcon} />\n                <div className={styles.headerTitle}>\n                  <NameField defaultValue={name} onUpdate={handleNameUpdate} />\n                </div>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row className={styles.modalPadding}>\n            <Grid.Column width={12} className={styles.contentPadding}>\n              {(users.length > 0 || labels.length > 0 || deadline || timer) && (\n                <div className={styles.moduleWrapper}>\n                  {users.length > 0 && (\n                    <div className={styles.attachments}>\n                      <div className={styles.text}>\n                        {t('common.members', {\n                          context: 'title',\n                        })}\n                      </div>\n                      {users.map((user) => (\n                        <span key={user.id} className={styles.attachment}>\n                          <ProjectMembershipsPopup\n                            items={allProjectMemberships}\n                            currentUserIds={userIds}\n                            onUserSelect={onUserAdd}\n                            onUserDeselect={onUserRemove}\n                          >\n                            <User name={user.name} avatar={user.avatar} />\n                          </ProjectMembershipsPopup>\n                        </span>\n                      ))}\n                      <ProjectMembershipsPopup\n                        items={allProjectMemberships}\n                        currentUserIds={userIds}\n                        onUserSelect={onUserAdd}\n                        onUserDeselect={onUserRemove}\n                      >\n                        <button\n                          type=\"button\"\n                          className={classNames(styles.attachment, styles.deadline)}\n                        >\n                          <Icon name=\"add\" size=\"small\" className={styles.addAttachment} />\n                        </button>\n                      </ProjectMembershipsPopup>\n                    </div>\n                  )}\n                  {labels.length > 0 && (\n                    <div className={styles.attachments}>\n                      <div className={styles.text}>\n                        {t('common.labels', {\n                          context: 'title',\n                        })}\n                      </div>\n                      {labels.map((label) => (\n                        <span key={label.id} className={styles.attachment}>\n                          <LabelsPopup\n                            key={label.id}\n                            items={allLabels}\n                            currentIds={labelIds}\n                            onSelect={onLabelAdd}\n                            onDeselect={onLabelRemove}\n                            onCreate={onLabelCreate}\n                            onUpdate={onLabelUpdate}\n                            onDelete={onLabelDelete}\n                          >\n                            <Label name={label.name} color={label.color} />\n                          </LabelsPopup>\n                        </span>\n                      ))}\n                      <LabelsPopup\n                        items={allLabels}\n                        currentIds={labelIds}\n                        onSelect={onLabelAdd}\n                        onDeselect={onLabelRemove}\n                        onCreate={onLabelCreate}\n                        onUpdate={onLabelUpdate}\n                        onDelete={onLabelDelete}\n                      >\n                        <button\n                          type=\"button\"\n                          className={classNames(styles.attachment, styles.deadline)}\n                        >\n                          <Icon name=\"add\" size=\"small\" className={styles.addAttachment} />\n                        </button>\n                      </LabelsPopup>\n                    </div>\n                  )}\n                  {deadline && (\n                    <div className={styles.attachments}>\n                      <div className={styles.text}>\n                        {t('common.deadline', {\n                          context: 'title',\n                        })}\n                      </div>\n                      <span className={styles.attachment}>\n                        <EditDeadlinePopup defaultValue={deadline} onUpdate={handleDeadlineUpdate}>\n                          <Deadline value={deadline} />\n                        </EditDeadlinePopup>\n                      </span>\n                    </div>\n                  )}\n                  {timer && (\n                    <div className={styles.attachments}>\n                      <div className={styles.text}>\n                        {t('common.timer', {\n                          context: 'title',\n                        })}\n                      </div>\n                      <span className={styles.attachment}>\n                        <EditTimerPopup defaultValue={timer} onUpdate={handleTimerUpdate}>\n                          <Timer startedAt={timer.startedAt} total={timer.total} />\n                        </EditTimerPopup>\n                      </span>\n                    </div>\n                  )}\n                </div>\n              )}\n              <div className={styles.contentModule}>\n                <div className={styles.moduleWrapper}>\n                  <Icon name=\"align justify\" className={styles.moduleIcon} />\n                  <div className={styles.moduleHeader}>{t('common.description')}</div>\n                  <EditDescription defaultValue={description} onUpdate={handleDescriptionUpdate}>\n                    {description ? (\n                      <button type=\"button\" className={styles.descriptionText}>\n                        <Markdown linkStopPropagation source={description} linkTarget=\"_blank\" />\n                      </button>\n                    ) : (\n                      <button type=\"button\" className={styles.descriptionButton}>\n                        <span className={styles.descriptionButtonText}>\n                          {t('action.addMoreDetailedDescription')}\n                        </span>\n                      </button>\n                    )}\n                  </EditDescription>\n                </div>\n              </div>\n              <div className={styles.contentModule}>\n                <div className={styles.moduleWrapper}>\n                  <Icon name=\"check square outline\" className={styles.moduleIcon} />\n                  <div className={styles.moduleHeader}>{t('common.tasks')}</div>\n                  <Tasks\n                    items={tasks}\n                    onCreate={onTaskCreate}\n                    onUpdate={onTaskUpdate}\n                    onDelete={onTaskDelete}\n                  />\n                </div>\n              </div>\n              <Actions\n                items={actions}\n                isFetching={isActionsFetching}\n                isAllFetched={isAllActionsFetched}\n                isEditable={isEditable}\n                onFetch={onActionsFetch}\n                onCommentCreate={onCommentActionCreate}\n                onCommentUpdate={onCommentActionUpdate}\n                onCommentDelete={onCommentActionDelete}\n              />\n            </Grid.Column>\n            <Grid.Column width={4} className={styles.sidebarPadding}>\n              <div className={styles.actions}>\n                <span className={styles.actionsTitle}>{t('action.addToCard')}</span>\n                <ProjectMembershipsPopup\n                  items={allProjectMemberships}\n                  currentUserIds={userIds}\n                  onUserSelect={onUserAdd}\n                  onUserDeselect={onUserRemove}\n                >\n                  <Button fluid className={styles.actionButton}>\n                    <Icon name=\"user outline\" className={styles.actionIcon} />\n                    {t('common.members')}\n                  </Button>\n                </ProjectMembershipsPopup>\n                <LabelsPopup\n                  items={allLabels}\n                  currentIds={labelIds}\n                  onSelect={onLabelAdd}\n                  onDeselect={onLabelRemove}\n                  onCreate={onLabelCreate}\n                  onUpdate={onLabelUpdate}\n                  onDelete={onLabelDelete}\n                >\n                  <Button fluid className={styles.actionButton}>\n                    <Icon name=\"bookmark outline\" className={styles.actionIcon} />\n                    {t('common.labels')}\n                  </Button>\n                </LabelsPopup>\n                <EditDeadlinePopup defaultValue={deadline} onUpdate={handleDeadlineUpdate}>\n                  <Button fluid className={styles.actionButton}>\n                    <Icon name=\"calendar check outline\" className={styles.actionIcon} />\n                    {t('common.deadline')}\n                  </Button>\n                </EditDeadlinePopup>\n                <EditTimerPopup defaultValue={timer} onUpdate={handleTimerUpdate}>\n                  <Button fluid className={styles.actionButton}>\n                    <Icon name=\"clock outline\" className={styles.actionIcon} />\n                    {t('common.timer')}\n                  </Button>\n                </EditTimerPopup>\n              </div>\n              <div className={styles.actions}>\n                <span className={styles.actionsTitle}>{t('common.actions')}</span>\n                <Button fluid className={styles.actionButton} onClick={handleToggleSubscribeClick}>\n                  <Icon name=\"paper plane outline\" className={styles.actionIcon} />\n                  {isSubscribed ? t('action.unsubscribe') : t('action.subscribe')}\n                </Button>\n                <DeletePopup\n                  title={t('common.deleteCard', {\n                    context: 'title',\n                  })}\n                  content={t('common.areYouSureYouWantToDeleteThisCard')}\n                  buttonContent={t('action.deleteCard')}\n                  onConfirm={onDelete}\n                >\n                  <Button fluid className={styles.actionButton}>\n                    <Icon name=\"trash alternate outline\" className={styles.actionIcon} />\n                    {t('action.delete')}\n                  </Button>\n                </DeletePopup>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Modal>\n    );\n  },\n);\n\nCardModal.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  deadline: PropTypes.instanceOf(Date),\n  timer: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  isSubscribed: PropTypes.bool.isRequired,\n  isActionsFetching: PropTypes.bool.isRequired,\n  isAllActionsFetched: PropTypes.bool.isRequired,\n  /* eslint-disable react/forbid-prop-types */\n  users: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired,\n  tasks: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired,\n  allProjectMemberships: PropTypes.array.isRequired,\n  allLabels: PropTypes.array.isRequired,\n  /* eslint-enable react/forbid-prop-types */\n  isEditable: PropTypes.bool.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onUserAdd: PropTypes.func.isRequired,\n  onUserRemove: PropTypes.func.isRequired,\n  onLabelAdd: PropTypes.func.isRequired,\n  onLabelRemove: PropTypes.func.isRequired,\n  onLabelCreate: PropTypes.func.isRequired,\n  onLabelUpdate: PropTypes.func.isRequired,\n  onLabelDelete: PropTypes.func.isRequired,\n  onTaskCreate: PropTypes.func.isRequired,\n  onTaskUpdate: PropTypes.func.isRequired,\n  onTaskDelete: PropTypes.func.isRequired,\n  onActionsFetch: PropTypes.func.isRequired,\n  onCommentActionCreate: PropTypes.func.isRequired,\n  onCommentActionUpdate: PropTypes.func.isRequired,\n  onCommentActionDelete: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nCardModal.defaultProps = {\n  description: undefined,\n  deadline: undefined,\n  timer: undefined,\n};\n\nexport default CardModal;\n","import CardModal from './CardModal';\n\nexport default CardModal;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport omit from 'lodash/omit';\n\nimport {\n  actionsForCurrentCardSelector,\n  currentCardSelector,\n  currentUserSelector,\n  labelsForCurrentBoardSelector,\n  labelsForCurrentCardSelector,\n  membershipsForCurrentProjectSelector,\n  tasksForCurrentCardSelector,\n  usersForCurrentCardSelector,\n} from '../selectors';\nimport {\n  addLabelToCurrentCard,\n  addUserToCurrentCard,\n  createCommentActionInCurrentCard,\n  createLabelInCurrentBoard,\n  createTaskInCurrentCard,\n  deleteCommentAction,\n  deleteCurrentCard,\n  deleteLabel,\n  deleteTask,\n  fetchActionsInCurrentCard,\n  removeLabelFromCurrentCard,\n  removeUserFromCurrentCard,\n  updateCommentAction,\n  updateCurrentCard,\n  updateLabel,\n  updateTask,\n} from '../actions/entry';\nimport Paths from '../constants/Paths';\nimport CardModal from '../components/CardModal';\n\nconst mapStateToProps = (state) => {\n  const { isAdmin } = currentUserSelector(state);\n  const allProjectMemberships = membershipsForCurrentProjectSelector(state);\n  const allLabels = labelsForCurrentBoardSelector(state);\n\n  const {\n    name,\n    description,\n    deadline,\n    timer,\n    isSubscribed,\n    isActionsFetching,\n    isAllActionsFetched,\n    boardId,\n  } = currentCardSelector(state);\n\n  const users = usersForCurrentCardSelector(state);\n  const labels = labelsForCurrentCardSelector(state);\n  const tasks = tasksForCurrentCardSelector(state);\n  const actions = actionsForCurrentCardSelector(state);\n\n  return {\n    name,\n    description,\n    deadline,\n    timer,\n    isSubscribed,\n    isActionsFetching,\n    isAllActionsFetched,\n    users,\n    labels,\n    tasks,\n    actions,\n    allProjectMemberships,\n    allLabels,\n    boardId,\n    isEditable: isAdmin,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    onUpdate: updateCurrentCard,\n    onDelete: deleteCurrentCard,\n    onUserAdd: addUserToCurrentCard,\n    onUserRemove: removeUserFromCurrentCard,\n    onLabelAdd: addLabelToCurrentCard,\n    onLabelRemove: removeLabelFromCurrentCard,\n    onLabelCreate: createLabelInCurrentBoard,\n    onLabelUpdate: updateLabel,\n    onLabelDelete: deleteLabel,\n    onTaskCreate: createTaskInCurrentCard,\n    onTaskUpdate: updateTask,\n    onTaskDelete: deleteTask,\n    onActionsFetch: fetchActionsInCurrentCard,\n    onCommentActionCreate: createCommentActionInCurrentCard,\n    onCommentActionUpdate: updateCommentAction,\n    onCommentActionDelete: deleteCommentAction,\n    push,\n  },\n  dispatch,\n);\n\nconst mergeProps = (stateProps, dispatchProps) => ({\n  ...omit(stateProps, 'boardId'),\n  ...omit(dispatchProps, 'push'),\n  onClose: () => dispatchProps.push(Paths.BOARDS.replace(':id', stateProps.boardId)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(CardModal);\n","import React, {\n  useCallback, useEffect, useImperativeHandle, useRef, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form, Input } from 'semantic-ui-react';\n\nimport {\n  useClosableForm,\n  useDeepCompareCallback,\n  useDidUpdate,\n  useForm,\n  useToggle,\n} from '../../hooks';\n\nimport styles from './AddList.module.css';\n\nconst DEFAULT_DATA = {\n  name: '',\n};\n\nconst AddList = React.forwardRef(({ children, onCreate }, ref) => {\n  const [t] = useTranslation();\n  const [isOpened, setIsOpened] = useState(false);\n  const [data, handleFieldChange, setData] = useForm(DEFAULT_DATA);\n  const [selectNameFieldState, selectNameField] = useToggle();\n\n  const nameField = useRef(null);\n\n  const open = useCallback(() => {\n    setIsOpened(true);\n  }, []);\n\n  const close = useCallback(() => {\n    setIsOpened(false);\n  }, []);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n\n  const handleChildrenClick = useCallback(() => {\n    open();\n  }, [open]);\n\n  const handleFieldKeyDown = useCallback(\n    (event) => {\n      if (event.key === 'Escape') {\n        close();\n      }\n    },\n    [close],\n  );\n\n  const [handleFieldBlur, handleControlMouseOver, handleControlMouseOut] = useClosableForm(\n    isOpened,\n    close,\n  );\n\n  const handleSubmit = useDeepCompareCallback(() => {\n    const cleanData = {\n      ...data,\n      name: data.name.trim(),\n    };\n\n    if (!cleanData.name) {\n      nameField.current.select();\n      return;\n    }\n\n    onCreate(cleanData);\n\n    setData(DEFAULT_DATA);\n    selectNameField();\n  }, [onCreate, data, setData, selectNameField]);\n\n  useEffect(() => {\n    if (isOpened) {\n      nameField.current.select();\n    }\n  }, [isOpened]);\n\n  useDidUpdate(() => {\n    nameField.current.select();\n  }, [selectNameFieldState]);\n\n  if (!isOpened) {\n    return React.cloneElement(children, {\n      onClick: handleChildrenClick,\n    });\n  }\n\n  return (\n    <Form className={styles.wrapper} onSubmit={handleSubmit}>\n      <Input\n        ref={nameField}\n        name=\"name\"\n        value={data.name}\n        placeholder={t('common.enterListTitle')}\n        className={styles.field}\n        onKeyDown={handleFieldKeyDown}\n        onChange={handleFieldChange}\n        onBlur={handleFieldBlur}\n      />\n      <div className={styles.controls}>\n        {/* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */}\n        <Button\n          positive\n          content={t('action.addList')}\n          className={styles.submitButton}\n          onMouseOver={handleControlMouseOver}\n          onMouseOut={handleControlMouseOut}\n        />\n      </div>\n    </Form>\n  );\n});\n\nAddList.propTypes = {\n  children: PropTypes.element.isRequired,\n  onCreate: PropTypes.func.isRequired,\n};\n\nexport default React.memo(AddList);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport User from '../User';\nimport Label from '../Label';\nimport ProjectMembershipsPopup from '../ProjectMembershipsPopup';\nimport LabelsPopup from '../LabelsPopup';\n\nimport styles from './Filter.module.css';\n\nconst Filter = React.memo(\n  ({\n    users,\n    labels,\n    allProjectMemberships,\n    allLabels,\n    onUserAdd,\n    onUserRemove,\n    onLabelAdd,\n    onLabelRemove,\n    onLabelCreate,\n    onLabelUpdate,\n    onLabelDelete,\n  }) => {\n    const [t] = useTranslation();\n\n    const handleUserRemoveClick = useCallback(\n      (id) => {\n        onUserRemove(id);\n      },\n      [onUserRemove],\n    );\n\n    const handleLabelRemoveClick = useCallback(\n      (id) => {\n        onLabelRemove(id);\n      },\n      [onLabelRemove],\n    );\n\n    return (\n      <div className={styles.filters}>\n        <span className={styles.filter}>\n          <ProjectMembershipsPopup\n            items={allProjectMemberships}\n            currentUserIds={users.map((user) => user.id)}\n            title={t('common.filterByMembers', {\n              context: 'title',\n            })}\n            onUserSelect={onUserAdd}\n            onUserDeselect={onUserRemove}\n          >\n            <button type=\"button\" className={styles.filterButton}>\n              <span className={styles.filterTitle}>{`${t('common.members')}:`}</span>\n              {users.length === 0 && <span className={styles.filterLabel}>{t('common.all')}</span>}\n            </button>\n          </ProjectMembershipsPopup>\n          {users.map((user) => (\n            <span key={user.id} className={styles.filterItem}>\n              <User\n                name={user.name}\n                avatar={user.avatar}\n                size=\"small\"\n                onClick={() => handleUserRemoveClick(user.id)}\n              />\n            </span>\n          ))}\n        </span>\n        <span className={styles.filter}>\n          <LabelsPopup\n            items={allLabels}\n            currentIds={labels.map((label) => label.id)}\n            title={t('common.filterByLabels', {\n              context: 'title',\n            })}\n            onSelect={onLabelAdd}\n            onDeselect={onLabelRemove}\n            onCreate={onLabelCreate}\n            onUpdate={onLabelUpdate}\n            onDelete={onLabelDelete}\n          >\n            <button type=\"button\" className={styles.filterButton}>\n              <span className={styles.filterTitle}>{`${t('common.labels')}:`}</span>\n              {labels.length === 0 && <span className={styles.filterLabel}>{t('common.all')}</span>}\n            </button>\n          </LabelsPopup>\n          {labels.map((label) => (\n            <span key={label.id} className={styles.filterItem}>\n              <Label\n                name={label.name}\n                color={label.color}\n                size=\"small\"\n                onClick={() => handleLabelRemoveClick(label.id)}\n              />\n            </span>\n          ))}\n        </span>\n      </div>\n    );\n  },\n);\n\nFilter.propTypes = {\n  /* eslint-disable react/forbid-prop-types */\n  users: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired,\n  allProjectMemberships: PropTypes.array.isRequired,\n  allLabels: PropTypes.array.isRequired,\n  /* eslint-enable react/forbid-prop-types */\n  onUserAdd: PropTypes.func.isRequired,\n  onUserRemove: PropTypes.func.isRequired,\n  onLabelAdd: PropTypes.func.isRequired,\n  onLabelRemove: PropTypes.func.isRequired,\n  onLabelCreate: PropTypes.func.isRequired,\n  onLabelUpdate: PropTypes.func.isRequired,\n  onLabelDelete: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { closePopup } from '../../lib/popup';\n\nimport DroppableTypes from '../../constants/DroppableTypes';\nimport ListContainer from '../../containers/ListContainer';\nimport CardModalContainer from '../../containers/CardModalContainer';\nimport AddList from './AddList';\nimport Filter from './Filter';\nimport { ReactComponent as PlusMathIcon } from '../../assets/images/plus-math-icon.svg';\n\nimport styles from './Board.module.css';\n\nconst parseDNDId = (dndId) => parseInt(dndId.split(':').pop(), 10);\n\nconst Board = React.memo(\n  ({\n    listIds,\n    filterUsers,\n    filterLabels,\n    allProjectMemberships,\n    allLabels,\n    isCardModalOpened,\n    onListCreate,\n    onListMove,\n    onCardMove,\n    onUserToFilterAdd,\n    onUserFromFilterRemove,\n    onLabelToFilterAdd,\n    onLabelFromFilterRemove,\n    onLabelCreate,\n    onLabelUpdate,\n    onLabelDelete,\n  }) => {\n    const [t] = useTranslation();\n\n    const handleDragStart = useCallback(() => {\n      closePopup();\n    }, []);\n\n    const handleDragEnd = useCallback(\n      ({\n        draggableId, type, source, destination,\n      }) => {\n        if (\n          !destination\n          || (source.droppableId === destination.droppableId && source.index === destination.index)\n        ) {\n          return;\n        }\n\n        const id = parseDNDId(draggableId);\n\n        switch (type) {\n          case DroppableTypes.LIST:\n            onListMove(id, destination.index);\n\n            break;\n          case DroppableTypes.CARD:\n            onCardMove(id, parseDNDId(destination.droppableId), destination.index);\n\n            break;\n          default:\n        }\n      },\n      [onListMove, onCardMove],\n    );\n\n    return (\n      <>\n        <Filter\n          users={filterUsers}\n          labels={filterLabels}\n          allProjectMemberships={allProjectMemberships}\n          allLabels={allLabels}\n          onUserAdd={onUserToFilterAdd}\n          onUserRemove={onUserFromFilterRemove}\n          onLabelAdd={onLabelToFilterAdd}\n          onLabelRemove={onLabelFromFilterRemove}\n          onLabelCreate={onLabelCreate}\n          onLabelUpdate={onLabelUpdate}\n          onLabelDelete={onLabelDelete}\n        />\n        <div className={styles.wrapper}>\n          <DragDropContext onDragStart={handleDragStart} onDragEnd={handleDragEnd}>\n            <Droppable droppableId=\"board\" type={DroppableTypes.LIST} direction=\"horizontal\">\n              {({ innerRef, droppableProps, placeholder }) => (\n                // eslint-disable-next-line react/jsx-props-no-spreading\n                <div {...droppableProps} data-drag-scroller ref={innerRef} className={styles.lists}>\n                  {listIds.map((listId, index) => (\n                    <ListContainer key={listId} id={listId} index={index} />\n                  ))}\n                  {placeholder}\n                  <div data-drag-scroller className={styles.list}>\n                    <AddList onCreate={onListCreate}>\n                      <button type=\"button\" className={styles.addListButton}>\n                        <PlusMathIcon className={styles.addListButtonIcon} />\n                        <span className={styles.addListButtonText}>\n                          {listIds.length > 0 ? t('action.addAnotherList') : t('action.addList')}\n                        </span>\n                      </button>\n                    </AddList>\n                  </div>\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n        {isCardModalOpened && <CardModalContainer />}\n      </>\n    );\n  },\n);\n\nBoard.propTypes = {\n  /* eslint-disable react/forbid-prop-types */\n  listIds: PropTypes.array.isRequired,\n  filterUsers: PropTypes.array.isRequired,\n  filterLabels: PropTypes.array.isRequired,\n  allProjectMemberships: PropTypes.array.isRequired,\n  allLabels: PropTypes.array.isRequired,\n  /* eslint-enable react/forbid-prop-types */\n  isCardModalOpened: PropTypes.bool.isRequired,\n  onListCreate: PropTypes.func.isRequired,\n  onListMove: PropTypes.func.isRequired,\n  onCardMove: PropTypes.func.isRequired,\n  onUserToFilterAdd: PropTypes.func.isRequired,\n  onUserFromFilterRemove: PropTypes.func.isRequired,\n  onLabelToFilterAdd: PropTypes.func.isRequired,\n  onLabelFromFilterRemove: PropTypes.func.isRequired,\n  onLabelCreate: PropTypes.func.isRequired,\n  onLabelUpdate: PropTypes.func.isRequired,\n  onLabelDelete: PropTypes.func.isRequired,\n};\n\nexport default Board;\n","import Board from './Board';\n\nexport default Board;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport {\n  filterLabelsForCurrentBoardSelector,\n  filterUsersForCurrentBoardSelector,\n  labelsForCurrentBoardSelector,\n  listIdsForCurrentBoardSelector,\n  membershipsForCurrentProjectSelector,\n  pathSelector,\n} from '../selectors';\nimport {\n  addLabelToFilterInCurrentBoard,\n  addUserToFilterInCurrentBoard,\n  createLabelInCurrentBoard,\n  createListInCurrentBoard,\n  deleteLabel,\n  moveCard,\n  moveList,\n  removeLabelFromFilterInCurrentBoard,\n  removeUserFromFilterInCurrentBoard,\n  updateLabel,\n} from '../actions/entry';\nimport Board from '../components/Board';\n\nconst mapStateToProps = (state) => {\n  const { cardId } = pathSelector(state);\n  const allProjectMemberships = membershipsForCurrentProjectSelector(state);\n  const listIds = listIdsForCurrentBoardSelector(state);\n  const allLabels = labelsForCurrentBoardSelector(state);\n  const filterUsers = filterUsersForCurrentBoardSelector(state);\n  const filterLabels = filterLabelsForCurrentBoardSelector(state);\n\n  return {\n    listIds,\n    filterUsers,\n    filterLabels,\n    allProjectMemberships,\n    allLabels,\n    isCardModalOpened: !!cardId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    onListCreate: createListInCurrentBoard,\n    onCardMove: moveCard,\n    onListMove: moveList,\n    onUserToFilterAdd: addUserToFilterInCurrentBoard,\n    onUserFromFilterRemove: removeUserFromFilterInCurrentBoard,\n    onLabelToFilterAdd: addLabelToFilterInCurrentBoard,\n    onLabelFromFilterRemove: removeLabelFromFilterInCurrentBoard,\n    onLabelCreate: createLabelInCurrentBoard,\n    onLabelUpdate: updateLabel,\n    onLabelDelete: deleteLabel,\n  },\n  dispatch,\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Board);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'semantic-ui-react';\n\nimport BoardContainer from '../containers/BoardContainer';\n\nconst BoardWrapper = React.memo(({ isFetching }) => {\n  if (isFetching) {\n    return <Loader active />;\n  }\n\n  return <BoardContainer />;\n});\n\nBoardWrapper.propTypes = {\n  isFetching: PropTypes.bool.isRequired,\n};\n\nexport default BoardWrapper;\n","import { connect } from 'react-redux';\n\nimport { currentBoardSelector } from '../selectors';\nimport BoardWrapper from '../components/BoardWrapper';\n\nconst mapStateToProps = (state) => {\n  const { isFetching } = currentBoardSelector(state);\n\n  return {\n    isFetching,\n  };\n};\n\nexport default connect(mapStateToProps)(BoardWrapper);\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form } from 'semantic-ui-react';\nimport { withPopup } from '../../lib/popup';\nimport { Input, Popup } from '../../lib/custom-ui';\n\nimport { useDeepCompareCallback, useForm } from '../../hooks';\n\nimport styles from './AddPopup.module.css';\n\nconst AddStep = React.memo(({ onCreate, onClose }) => {\n  const [t] = useTranslation();\n\n  const [data, handleFieldChange] = useForm({\n    name: '',\n  });\n\n  const nameField = useRef(null);\n\n  const handleSubmit = useDeepCompareCallback(() => {\n    const cleanData = {\n      ...data,\n      name: data.name.trim(),\n    };\n\n    if (!cleanData.name) {\n      nameField.current.select();\n      return;\n    }\n\n    onCreate(cleanData);\n    onClose();\n  }, [onCreate, onClose, data]);\n\n  useEffect(() => {\n    nameField.current.select();\n  }, []);\n\n  return (\n    <>\n      <Popup.Header>\n        {t('common.createBoard', {\n          context: 'title',\n        })}\n      </Popup.Header>\n      <Popup.Content>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            fluid\n            ref={nameField}\n            name=\"name\"\n            value={data.name}\n            className={styles.field}\n            onChange={handleFieldChange}\n          />\n          <Button positive content={t('action.createBoard')} />\n        </Form>\n      </Popup.Content>\n    </>\n  );\n});\n\nAddStep.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default withPopup(AddStep);\n","import dequal from 'dequal';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form } from 'semantic-ui-react';\nimport { withPopup } from '../../lib/popup';\nimport { Input, Popup } from '../../lib/custom-ui';\n\nimport { useDeepCompareCallback, useForm, useSteps } from '../../hooks';\nimport DeleteStep from '../DeleteStep';\n\nimport styles from './EditPopup.module.css';\n\nconst StepTypes = {\n  DELETE: 'DELETE',\n};\n\nconst EditStep = React.memo(({\n  defaultData, onUpdate, onDelete, onClose,\n}) => {\n  const [t] = useTranslation();\n\n  const [data, handleFieldChange] = useForm(() => ({\n    name: '',\n    ...defaultData,\n  }));\n\n  const [step, openStep, handleBack] = useSteps();\n\n  const nameField = useRef(null);\n\n  const handleSubmit = useDeepCompareCallback(() => {\n    const cleanData = {\n      ...data,\n      name: data.name.trim(),\n    };\n\n    if (!cleanData.name) {\n      nameField.current.select();\n      return;\n    }\n\n    if (!dequal(cleanData, defaultData)) {\n      onUpdate(cleanData);\n    }\n\n    onClose();\n  }, [defaultData, onUpdate, onClose, data]);\n\n  const handleDeleteClick = useCallback(() => {\n    openStep(StepTypes.DELETE);\n  }, [openStep]);\n\n  useEffect(() => {\n    nameField.current.select();\n  }, []);\n\n  if (step && step.type === StepTypes.DELETE) {\n    return (\n      <DeleteStep\n        title={t('common.deleteBoard', {\n          context: 'title',\n        })}\n        content={t('common.areYouSureYouWantToDeleteThisBoard')}\n        buttonContent={t('action.deleteBoard')}\n        onConfirm={onDelete}\n        onBack={handleBack}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popup.Header>\n        {t('common.editBoard', {\n          context: 'title',\n        })}\n      </Popup.Header>\n      <Popup.Content>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            fluid\n            ref={nameField}\n            name=\"name\"\n            value={data.name}\n            className={styles.field}\n            onChange={handleFieldChange}\n          />\n          <Button positive content={t('action.save')} />\n        </Form>\n        <Button\n          content={t('action.delete')}\n          className={styles.deleteButton}\n          onClick={handleDeleteClick}\n        />\n      </Popup.Content>\n    </>\n  );\n});\n\nEditStep.propTypes = {\n  defaultData: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default withPopup(EditStep);\n","import pick from 'lodash/pick';\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { closePopup } from '../../lib/popup';\nimport { DragScroller } from '../../lib/custom-ui';\n\nimport Paths from '../../constants/Paths';\nimport DroppableTypes from '../../constants/DroppableTypes';\nimport BoardWrapperContainer from '../../containers/BoardWrapperContainer';\nimport AddPopup from './AddPopup';\nimport EditPopup from './EditPopup';\n\nimport styles from './Boards.module.css';\n\nconst Boards = React.memo(\n  ({\n    items, currentId, isEditable, onCreate, onUpdate, onMove, onDelete,\n  }) => {\n    const [t] = useTranslation();\n\n    const handleDragStart = useCallback(() => {\n      closePopup();\n    }, []);\n\n    const handleDragEnd = useCallback(\n      ({ draggableId, source, destination }) => {\n        if (!destination || source.index === destination.index) {\n          return;\n        }\n\n        onMove(draggableId, destination.index);\n      },\n      [onMove],\n    );\n\n    const handleUpdate = useCallback(\n      (id, data) => {\n        onUpdate(id, data);\n      },\n      [onUpdate],\n    );\n\n    const handleDelete = useCallback(\n      (id) => {\n        onDelete(id);\n      },\n      [onDelete],\n    );\n\n    const renderItems = useCallback(\n      (safeItems) => safeItems.map((item) => (\n        <div key={item.id} className={styles.tabWrapper}>\n          <div className={classNames(styles.tab, item.id === currentId && styles.tabActive)}>\n            {item.isPersisted ? (\n              <Link\n                to={Paths.BOARDS.replace(':id', item.id)}\n                title={item.name}\n                className={styles.link}\n              >\n                {item.name}\n              </Link>\n            ) : (\n              <span className={styles.link}>{item.name}</span>\n            )}\n          </div>\n        </div>\n      )),\n      [currentId],\n    );\n\n    const renderEditableItems = useCallback(\n      (safeItems) => safeItems.map((item, index) => (\n        <Draggable\n          key={item.id}\n          draggableId={item.id}\n          index={index}\n          isDragDisabled={!item.isPersisted}\n        >\n          {({ innerRef, draggableProps, dragHandleProps }) => (\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            <div {...draggableProps} ref={innerRef} className={styles.tabWrapper}>\n              <div className={classNames(styles.tab, item.id === currentId && styles.tabActive)}>\n                {item.isPersisted ? (\n                  <Link\n                    {...dragHandleProps} // eslint-disable-line react/jsx-props-no-spreading\n                    to={Paths.BOARDS.replace(':id', item.id)}\n                    title={item.name}\n                    className={styles.link}\n                  >\n                    {item.name}\n                  </Link>\n                ) : (\n                // eslint-disable-next-line react/jsx-props-no-spreading\n                  <span {...dragHandleProps} className={styles.link}>\n                    {item.name}\n                  </span>\n                )}\n                {item.isPersisted && (\n                <EditPopup\n                  defaultData={pick(item, 'name')}\n                  onUpdate={(data) => handleUpdate(item.id, data)}\n                  onDelete={() => handleDelete(item.id)}\n                >\n                  <Button className={classNames(styles.editButton, styles.target)}>\n                    <Icon fitted name=\"pencil\" size=\"small\" />\n                  </Button>\n                </EditPopup>\n                )}\n              </div>\n            </div>\n          )}\n        </Draggable>\n      )),\n      [currentId, handleUpdate, handleDelete],\n    );\n\n    return (\n      <div className={styles.wrapper}>\n        {isEditable ? (\n          <DragDropContext onDragStart={handleDragStart} onDragEnd={handleDragEnd}>\n            <Droppable droppableId=\"boards\" type={DroppableTypes.BOARD} direction=\"horizontal\">\n              {({ innerRef, droppableProps, placeholder }) => (\n                // eslint-disable-next-line react/jsx-props-no-spreading\n                <div {...droppableProps} ref={innerRef} className={styles.tabs}>\n                  {renderEditableItems(items)}\n                  {placeholder}\n                  <AddPopup onCreate={onCreate}>\n                    <Button icon=\"plus\" className={styles.addButton} />\n                  </AddPopup>\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        ) : (\n          <div className={styles.tabs}>{renderItems(items)}</div>\n        )}\n        <DragScroller className={styles.board}>\n          {currentId ? (\n            <BoardWrapperContainer />\n          ) : (\n            <div className={styles.message}>\n              <Icon\n                inverted\n                name=\"hand point up outline\"\n                size=\"huge\"\n                className={styles.messageIcon}\n              />\n              <h1 className={styles.messageTitle}>\n                {t('common.openBoard', {\n                  context: 'title',\n                })}\n              </h1>\n              <div className={styles.messageContent}>\n                <Trans i18nKey=\"common.createNewOneOrSelectExistingOne\" />\n              </div>\n            </div>\n          )}\n        </DragScroller>\n      </div>\n    );\n  },\n);\n\nBoards.propTypes = {\n  items: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n  currentId: PropTypes.number,\n  isEditable: PropTypes.bool.isRequired,\n  onCreate: PropTypes.func.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onMove: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nBoards.defaultProps = {\n  currentId: undefined,\n};\n\nexport default Boards;\n","import Boards from './Boards';\n\nexport default Boards;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { boardsForCurrentProjectSelector, currentUserSelector, pathSelector } from '../selectors';\nimport {\n  createBoardInCurrentProject, deleteBoard, moveBoard, updateBoard,\n} from '../actions/entry';\nimport Boards from '../components/Boards';\n\nconst mapStateToProps = (state) => {\n  const { boardId } = pathSelector(state);\n  const { isAdmin } = currentUserSelector(state);\n  const boards = boardsForCurrentProjectSelector(state);\n\n  return {\n    items: boards,\n    currentId: boardId,\n    isEditable: isAdmin,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    onCreate: createBoardInCurrentProject,\n    onUpdate: updateBoard,\n    onMove: moveBoard,\n    onDelete: deleteBoard,\n  },\n  dispatch,\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Boards);\n","import dequal from 'dequal';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form } from 'semantic-ui-react';\nimport { withPopup } from '../../lib/popup';\nimport { Input, Popup } from '../../lib/custom-ui';\n\nimport { useDeepCompareCallback, useForm, useSteps } from '../../hooks';\nimport DeleteStep from '../DeleteStep';\n\nimport styles from './EditPopup.module.css';\n\nconst StepTypes = {\n  DELETE: 'DELETE',\n};\n\nconst EditStep = React.memo(({\n  defaultData, onUpdate, onDelete, onClose,\n}) => {\n  const [t] = useTranslation();\n\n  const [data, handleFieldChange] = useForm(() => ({\n    name: '',\n    ...defaultData,\n  }));\n\n  const [step, openStep, handleBack] = useSteps();\n\n  const nameField = useRef(null);\n\n  const handleSubmit = useDeepCompareCallback(() => {\n    const cleanData = {\n      ...data,\n      name: data.name.trim(),\n    };\n\n    if (!cleanData.name) {\n      nameField.current.select();\n      return;\n    }\n\n    if (!dequal(cleanData, defaultData)) {\n      onUpdate(cleanData);\n    }\n\n    onClose();\n  }, [defaultData, onUpdate, onClose, data]);\n\n  const handleDeleteClick = useCallback(() => {\n    openStep(StepTypes.DELETE);\n  }, [openStep]);\n\n  useEffect(() => {\n    nameField.current.select();\n  }, []);\n\n  if (step && step.type === StepTypes.DELETE) {\n    return (\n      <DeleteStep\n        title={t('common.deleteProject', {\n          context: 'title',\n        })}\n        content={t('common.areYouSureYouWantToDeleteThisProject')}\n        buttonContent={t('action.deleteProject')}\n        onConfirm={onDelete}\n        onBack={handleBack}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popup.Header>\n        {t('common.editProject', {\n          context: 'title',\n        })}\n      </Popup.Header>\n      <Popup.Content>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            fluid\n            ref={nameField}\n            name=\"name\"\n            value={data.name}\n            className={styles.field}\n            onChange={handleFieldChange}\n          />\n          <Button positive content={t('action.save')} />\n        </Form>\n        <Button\n          content={t('action.delete')}\n          className={styles.deleteButton}\n          onClick={handleDeleteClick}\n        />\n      </Popup.Content>\n    </>\n  );\n});\n\nEditStep.propTypes = {\n  defaultData: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default withPopup(EditStep);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport User from '../../User';\n\nimport styles from './UserItem.module.css';\n\nconst UserItem = React.memo(({\n  name, avatar, isActive, onSelect,\n}) => (\n  <button\n    type=\"button\"\n    disabled={isActive}\n    className={classNames(styles.menuItem, isActive && styles.menuItemActive)}\n    onClick={onSelect}\n  >\n    <span className={styles.user}>\n      <User name={name} avatar={avatar} />\n    </span>\n    <div className={classNames(styles.menuItemText, isActive && styles.menuItemTextActive)}>\n      {name}\n    </div>\n  </button>\n));\n\nUserItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  isActive: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nUserItem.defaultProps = {\n  avatar: undefined,\n};\n\nexport default UserItem;\n","import AddMembershipPopup from './AddMembershipPopup';\n\nexport default AddMembershipPopup;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { withPopup } from '../../../lib/popup';\nimport { Popup } from '../../../lib/custom-ui';\n\nimport UserItem from './UserItem';\n\nimport styles from './AddMembershipPopup.module.css';\n\nconst AddMembershipStep = React.memo(({\n  users, currentUserIds, onCreate, onClose,\n}) => {\n  const [t] = useTranslation();\n\n  const handleUserSelect = useCallback(\n    (id) => {\n      onCreate({\n        userId: id,\n      });\n\n      onClose();\n    },\n    [onCreate, onClose],\n  );\n\n  return (\n    <>\n      <Popup.Header>\n        {t('common.addMember', {\n          context: 'title',\n        })}\n      </Popup.Header>\n      <Popup.Content>\n        <div className={styles.menu}>\n          {users.map((user) => (\n            <UserItem\n              key={user.id}\n              name={user.name}\n              avatar={user.avatar}\n              isActive={currentUserIds.includes(user.id)}\n              onSelect={() => handleUserSelect(user.id)}\n            />\n          ))}\n        </div>\n      </Popup.Content>\n    </>\n  );\n});\n\nAddMembershipStep.propTypes = {\n  /* eslint-disable react/forbid-prop-types */\n  users: PropTypes.array.isRequired,\n  currentUserIds: PropTypes.array.isRequired,\n  /* eslint-disable react/forbid-prop-types */\n  onCreate: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default withPopup(AddMembershipStep);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'semantic-ui-react';\nimport { withPopup } from '../../lib/popup';\n\nimport { useSteps } from '../../hooks';\nimport User from '../User';\nimport DeleteStep from '../DeleteStep';\n\nimport styles from './EditMembershipPopup.module.css';\n\nconst StepTypes = {\n  DELETE: 'DELETE',\n};\n\nconst EditMembershipStep = React.memo(({ user, isEditable, onDelete }) => {\n  const [t] = useTranslation();\n  const [step, openStep, handleBack] = useSteps();\n\n  const handleDeleteClick = useCallback(() => {\n    openStep(StepTypes.DELETE);\n  }, [openStep]);\n\n  if (step && step.type === StepTypes.DELETE) {\n    return (\n      <DeleteStep\n        title={t('common.removeMember', {\n          context: 'title',\n        })}\n        content={t('common.areYouSureYouWantToRemoveThisMemberFromProject')}\n        buttonContent={t('action.removeMember')}\n        onConfirm={onDelete}\n        onBack={handleBack}\n      />\n    );\n  }\n\n  return (\n    <>\n      <span className={styles.user}>\n        <User name={user.name} avatar={user.avatar} size=\"large\" />\n      </span>\n      <span className={styles.content}>\n        <div className={styles.name}>{user.name}</div>\n        <div className={styles.email}>{user.email}</div>\n        {!user.isCurrent && isEditable && (\n          <Button\n            content={t('action.removeFromProject')}\n            className={styles.deleteButton}\n            onClick={handleDeleteClick}\n          />\n        )}\n      </span>\n    </>\n  );\n});\n\nEditMembershipStep.propTypes = {\n  user: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isEditable: PropTypes.bool.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default withPopup(EditMembershipStep);\n","import Project from './Project';\n\nexport default Project;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Grid } from 'semantic-ui-react';\n\nimport BoardsContainer from '../../containers/BoardsContainer';\nimport EditPopup from './EditPopup';\nimport AddMembershipPopup from './AddMembershipPopup';\nimport EditMembershipPopup from './EditMembershipPopup';\nimport User from '../User';\n\nimport styles from './Project.module.css';\n\nconst Project = React.memo(\n  ({\n    name,\n    memberships,\n    allUsers,\n    isEditable,\n    onUpdate,\n    onDelete,\n    onMembershipCreate,\n    onMembershipDelete,\n  }) => {\n    const handleMembershipDelete = useCallback(\n      (id) => {\n        onMembershipDelete(id);\n      },\n      [onMembershipDelete],\n    );\n\n    return (\n      <div className={styles.wrapper}>\n        <Grid className={styles.header}>\n          <Grid.Row>\n            <Grid.Column>\n              <EditPopup\n                defaultData={{\n                  name,\n                }}\n                onUpdate={onUpdate}\n                onDelete={onDelete}\n              >\n                <Button content={name} disabled={!isEditable} className={styles.name} />\n              </EditPopup>\n              <span className={styles.users}>\n                {memberships.map((membership) => (\n                  <span key={membership.id} className={styles.user}>\n                    <EditMembershipPopup\n                      user={membership.user}\n                      isEditable={isEditable}\n                      onDelete={() => handleMembershipDelete(membership.id)}\n                    >\n                      <User\n                        name={membership.user.name}\n                        avatar={membership.user.avatar}\n                        size=\"large\"\n                        isDisabled={!membership.isPersisted}\n                      />\n                    </EditMembershipPopup>\n                  </span>\n                ))}\n              </span>\n              {isEditable && (\n                <AddMembershipPopup\n                  users={allUsers}\n                  currentUserIds={memberships.map((membership) => membership.user.id)}\n                  onCreate={onMembershipCreate}\n                >\n                  <Button icon=\"add user\" className={styles.addUser} />\n                </AddMembershipPopup>\n              )}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <BoardsContainer />\n      </div>\n    );\n  },\n);\n\nProject.propTypes = {\n  name: PropTypes.string.isRequired,\n  /* eslint-disable react/forbid-prop-types */\n  memberships: PropTypes.array.isRequired,\n  allUsers: PropTypes.array.isRequired,\n  /* eslint-enable react/forbid-prop-types */\n  isEditable: PropTypes.bool.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onMembershipCreate: PropTypes.func.isRequired,\n  onMembershipDelete: PropTypes.func.isRequired,\n};\n\nexport default Project;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport {\n  allUsersSelector,\n  currentProjectSelector,\n  currentUserSelector,\n  membershipsForCurrentProjectSelector,\n} from '../selectors';\nimport {\n  createMembershipInCurrentProject,\n  deleteCurrentProject,\n  deleteProjectMembership,\n  updateCurrentProject,\n} from '../actions/entry';\nimport Project from '../components/Project';\n\nconst mapStateToProps = (state) => {\n  const allUsers = allUsersSelector(state);\n  const { isAdmin } = currentUserSelector(state);\n  const { name } = currentProjectSelector(state);\n  const memberships = membershipsForCurrentProjectSelector(state);\n\n  return {\n    name,\n    memberships,\n    allUsers,\n    isEditable: isAdmin,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    onUpdate: updateCurrentProject,\n    onDelete: deleteCurrentProject,\n    onMembershipCreate: createMembershipInCurrentProject,\n    onMembershipDelete: deleteProjectMembership,\n  },\n  dispatch,\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Project);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport ProjectContainer from '../containers/ProjectContainer';\n\nconst ProjectWrapper = React.memo(({ isProjectNotFound, isBoardNotFound, isCardNotFound }) => {\n  const [t] = useTranslation();\n\n  if (isCardNotFound) {\n    return (\n      <h1>\n        {t('common.cardNotFound', {\n          context: 'title',\n        })}\n      </h1>\n    );\n  }\n\n  if (isBoardNotFound) {\n    return (\n      <h1>\n        {t('common.boardNotFound', {\n          context: 'title',\n        })}\n      </h1>\n    );\n  }\n\n  if (isProjectNotFound) {\n    return (\n      <h1>\n        {t('common.projectNotFound', {\n          context: 'title',\n        })}\n      </h1>\n    );\n  }\n\n  return <ProjectContainer />;\n});\n\nProjectWrapper.propTypes = {\n  isProjectNotFound: PropTypes.bool.isRequired,\n  isBoardNotFound: PropTypes.bool.isRequired,\n  isCardNotFound: PropTypes.bool.isRequired,\n};\n\nexport default ProjectWrapper;\n","import { connect } from 'react-redux';\n\nimport { pathSelector } from '../selectors';\nimport ProjectWrapper from '../components/ProjectWrapper';\n\nconst mapStateToProps = (state) => {\n  const { cardId, boardId, projectId } = pathSelector(state);\n\n  return {\n    isProjectNotFound: projectId === null,\n    isBoardNotFound: boardId === null,\n    isCardNotFound: cardId === null,\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectWrapper);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M 25 2 C 12.309295 2 2 12.309295 2 25 C 2 37.690705 12.309295 48 25 48 C 37.690705 48 48 37.690705 48 25 C 48 12.309295 37.690705 2 25 2 z M 25 4 C 36.609824 4 46 13.390176 46 25 C 46 36.609824 36.609824 46 25 46 C 13.390176 46 4 36.609824 4 25 C 4 13.390176 13.390176 4 25 4 z M 24 13 L 24 24 L 13 24 L 13 26 L 24 26 L 24 37 L 26 37 L 26 26 L 37 26 L 37 24 L 26 24 L 26 13 L 24 13 z\"\n});\n\nvar SvgPlusIcon = function SvgPlusIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 50 50\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPlusIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus-icon.792985f1.svg\";\nexport { ForwardRef as ReactComponent };","import isUndefined from 'lodash/isUndefined';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { Container, Grid } from 'semantic-ui-react';\n\nimport Paths from '../../constants/Paths';\nimport ProjectWrapperContainer from '../../containers/ProjectWrapperContainer';\nimport { ReactComponent as PlusIcon } from '../../assets/images/plus-icon.svg';\n\nimport styles from './Projects.module.css';\n\nconst Projects = React.memo(({\n  items, currentId, isEditable, onAdd,\n}) => {\n  const [t] = useTranslation();\n\n  if (isUndefined(currentId)) {\n    return (\n      <Container className={styles.cardsWrapper}>\n        <Grid className={styles.gridFix}>\n          <Grid.Row>\n            {items.map((item) => (\n              <Grid.Column key={item.id} mobile={8} computer={4}>\n                <Link\n                  to={\n                  item.firstBoardId\n                    ? Paths.BOARDS.replace(':id', item.firstBoardId)\n                    : Paths.PROJECTS.replace(':id', item.id)\n                }\n                >\n                  <div className={classNames(styles.card, styles.open)}>\n                    {item.notificationsTotal > 0 && (\n                    <span className={styles.notification}>{item.notificationsTotal}</span>\n                    )}\n                    <div className={styles.cardOverlay} />\n                    <div className={styles.openTitle}>{item.name}</div>\n                  </div>\n                </Link>\n              </Grid.Column>\n            ))}\n            {isEditable && (\n              <Grid.Column mobile={8} computer={4}>\n                <button\n                  type=\"button\"\n                  className={classNames(styles.card, styles.add)}\n                  onClick={onAdd}\n                >\n                  <div className={styles.addTitleWrapper}>\n                    <div className={styles.addTitle}>\n                      <PlusIcon className={styles.addGridIcon} />\n                      {t('action.createProject')}\n                    </div>\n                  </div>\n                </button>\n              </Grid.Column>\n            )}\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.project}>\n        <ProjectWrapperContainer />\n      </div>\n    </div>\n  );\n});\n\nProjects.propTypes = {\n  items: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n  currentId: PropTypes.number,\n  isEditable: PropTypes.bool.isRequired,\n  onAdd: PropTypes.func.isRequired,\n};\n\nProjects.defaultProps = {\n  currentId: undefined,\n};\n\nexport default Projects;\n","import Projects from './Projects';\n\nexport default Projects;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { currentUserSelector, pathSelector, projectsForCurrentUserSelector } from '../selectors';\nimport { openAddProjectModal } from '../actions/entry';\nimport Projects from '../components/Projects';\n\nconst mapStateToProps = (state) => {\n  const { projectId } = pathSelector(state);\n  const { isAdmin } = currentUserSelector(state);\n  const projects = projectsForCurrentUserSelector(state);\n\n  return {\n    items: projects,\n    currentId: projectId,\n    isEditable: isAdmin,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    onAdd: openAddProjectModal,\n  },\n  dispatch,\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Projects);\n","import isEmail from 'validator/lib/isEmail';\nimport React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { withPopup } from '../../lib/popup';\nimport { Input, Popup } from '../../lib/custom-ui';\n\nimport {\n  useDeepCompareCallback, useDeepCompareEffect, useForm, usePrevious,\n} from '../../hooks';\n\nimport styles from './AddUserPopup.module.css';\n\nconst AddUserPopup = React.memo(\n  ({\n    defaultData, isSubmitting, error, onCreate, onMessageDismiss, onClose,\n  }) => {\n    const [t] = useTranslation();\n    const wasSubmitting = usePrevious(isSubmitting);\n\n    const [data, handleFieldChange] = useForm(() => ({\n      email: '',\n      password: '',\n      name: '',\n      ...defaultData,\n    }));\n\n    const emailField = useRef(null);\n    const passwordField = useRef(null);\n    const nameField = useRef(null);\n\n    const handleSubmit = useDeepCompareCallback(() => {\n      const cleanData = {\n        ...data,\n        email: data.email.trim(),\n        name: data.name.trim(),\n      };\n\n      if (!isEmail(cleanData.email)) {\n        emailField.current.select();\n        return;\n      }\n\n      if (!cleanData.password) {\n        passwordField.current.focus();\n        return;\n      }\n\n      if (!cleanData.name) {\n        nameField.current.select();\n        return;\n      }\n\n      onCreate(cleanData);\n    }, [onCreate, data]);\n\n    useEffect(() => {\n      emailField.current.select();\n    }, []);\n\n    useDeepCompareEffect(() => {\n      if (wasSubmitting && !isSubmitting) {\n        if (!error) {\n          onClose();\n        } else if (error.message === 'userIsAlreadyExist') {\n          emailField.current.select();\n        }\n      }\n    }, [isSubmitting, wasSubmitting, error, onClose]);\n\n    return (\n      <>\n        <Popup.Header>\n          {t('common.addUser', {\n            context: 'title',\n          })}\n        </Popup.Header>\n        <Popup.Content>\n          {error && (\n            <Message\n              // eslint-disable-next-line react/jsx-props-no-spreading\n              {...{\n                [error.type || 'error']: true,\n              }}\n              visible\n              content={t(`common.${error.message}`)}\n              onDismiss={onMessageDismiss}\n            />\n          )}\n          <Form onSubmit={handleSubmit}>\n            <div className={styles.text}>{t('common.email')}</div>\n            <Input\n              fluid\n              ref={emailField}\n              name=\"email\"\n              value={data.email}\n              readOnly={isSubmitting}\n              className={styles.field}\n              onChange={handleFieldChange}\n            />\n            <div className={styles.text}>{t('common.password')}</div>\n            <Input\n              fluid\n              ref={passwordField}\n              name=\"password\"\n              value={data.password}\n              readOnly={isSubmitting}\n              className={styles.field}\n              onChange={handleFieldChange}\n            />\n            <div className={styles.text}>{t('common.name')}</div>\n            <Input\n              fluid\n              ref={nameField}\n              name=\"name\"\n              value={data.name}\n              readOnly={isSubmitting}\n              className={styles.field}\n              onChange={handleFieldChange}\n            />\n            <Button\n              positive\n              content={t('action.addUser')}\n              loading={isSubmitting}\n              disabled={isSubmitting}\n            />\n          </Form>\n        </Popup.Content>\n      </>\n    );\n  },\n);\n\nAddUserPopup.propTypes = {\n  defaultData: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isSubmitting: PropTypes.bool.isRequired,\n  error: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onCreate: PropTypes.func.isRequired,\n  onMessageDismiss: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nAddUserPopup.defaultProps = {\n  error: undefined,\n};\n\nexport default withPopup(AddUserPopup);\n","import AddUserPopup from './AddUserPopup';\n\nexport default AddUserPopup;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { clearUserCreationError, createUser } from '../actions/entry';\nimport AddUserPopup from '../components/AddUserPopup';\n\nconst mapStateToProps = ({ user: { data: defaultData, isSubmitting, error: externalError } }) => {\n  let error;\n\n  if (externalError) {\n    if (externalError.message === 'User is already exist') {\n      error = {\n        message: 'userIsAlreadyExist',\n      };\n    } else {\n      error = {\n        type: 'warning',\n        message: 'unknownError',\n      };\n    }\n  }\n\n  return {\n    defaultData,\n    isSubmitting,\n    error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    onCreate: createUser,\n    onMessageDismiss: clearUserCreationError,\n  },\n  dispatch,\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AddUserPopup);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Radio, Table } from 'semantic-ui-react';\n\nimport DeletePopup from '../DeletePopup';\n\nimport styles from './Item.module.css';\n\nconst Item = React.memo(({\n  name, email, isAdmin, onUpdate, onDelete,\n}) => {\n  const [t] = useTranslation();\n\n  const handleIsAdminChange = useCallback(() => {\n    onUpdate({\n      isAdmin: !isAdmin,\n    });\n  }, [isAdmin, onUpdate]);\n\n  return (\n    <Table.Row>\n      <Table.Cell>{name}</Table.Cell>\n      <Table.Cell>{email}</Table.Cell>\n      <Table.Cell collapsing>\n        <Radio toggle checked={isAdmin} onChange={handleIsAdminChange} />\n      </Table.Cell>\n      <Table.Cell collapsing>\n        <DeletePopup\n          title={t('common.deleteUser', {\n            context: 'title',\n          })}\n          content={t('common.areYouSureYouWantToDeleteThisUser')}\n          buttonContent={t('action.deleteUser')}\n          onConfirm={onDelete}\n        >\n          <Button content={t('action.delete')} className={styles.button} />\n        </DeletePopup>\n      </Table.Cell>\n    </Table.Row>\n  );\n});\n\nItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Item;\n","import UsersModal from './UsersModal';\n\nexport default UsersModal;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button, Header, Modal, Table,\n} from 'semantic-ui-react';\n\nimport AddUserPopupContainer from '../../containers/AddUserPopupContainer';\nimport Item from './Item';\n\nimport styles from './UsersModal.module.css';\n\nconst UsersModal = React.memo(({\n  items, onUpdate, onDelete, onClose,\n}) => {\n  const [t] = useTranslation();\n\n  const handleUpdate = useCallback(\n    (id, data) => {\n      onUpdate(id, data);\n    },\n    [onUpdate],\n  );\n\n  const handleDelete = useCallback(\n    (id) => {\n      onDelete(id);\n    },\n    [onDelete],\n  );\n\n  return (\n    <Modal open closeIcon size=\"large\" onClose={onClose}>\n      <Modal.Content>\n        <Header size=\"huge\" className={styles.title}>\n          {t('common.users', {\n            context: 'title',\n          })}\n        </Header>\n        <Table basic=\"very\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>{t('common.name')}</Table.HeaderCell>\n              <Table.HeaderCell>{t('common.email')}</Table.HeaderCell>\n              <Table.HeaderCell>{t('common.administrator')}</Table.HeaderCell>\n              <Table.HeaderCell />\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {items.map((item) => (\n              <Item\n                key={item.id}\n                name={item.name}\n                email={item.email}\n                isAdmin={item.isAdmin}\n                onUpdate={(data) => handleUpdate(item.id, data)}\n                onDelete={() => handleDelete(item.id)}\n              />\n            ))}\n          </Table.Body>\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"4\">\n                <AddUserPopupContainer>\n                  <Button positive content={t('action.addUser')} className={styles.button} />\n                </AddUserPopupContainer>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Modal.Content>\n    </Modal>\n  );\n});\n\nUsersModal.propTypes = {\n  items: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n  onUpdate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default UsersModal;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { allUsersExceptCurrentSelector } from '../selectors';\nimport { closeModal, deleteUser, updateUser } from '../actions/entry';\nimport UsersModal from '../components/UsersModal';\n\nconst mapStateToProps = (state) => {\n  const items = allUsersExceptCurrentSelector(state);\n\n  return {\n    items,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    onUpdate: updateUser,\n    onDelete: deleteUser,\n    onClose: closeModal,\n  },\n  dispatch,\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UsersModal);\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button, Form, Header, Modal,\n} from 'semantic-ui-react';\nimport { Input } from '../../lib/custom-ui';\n\nimport { useDeepCompareCallback, useForm } from '../../hooks';\n\nimport styles from './AddProjectModal.module.css';\n\nconst AddProjectModal = React.memo(({\n  defaultData, isSubmitting, onCreate, onClose,\n}) => {\n  const [t] = useTranslation();\n\n  const [data, handleFieldChange] = useForm(() => ({\n    name: '',\n    ...defaultData,\n  }));\n\n  const nameField = useRef(null);\n\n  const handleSubmit = useDeepCompareCallback(() => {\n    const cleanData = {\n      ...data,\n      name: data.name.trim(),\n    };\n\n    if (!cleanData.name) {\n      nameField.current.select();\n      return;\n    }\n\n    onCreate(cleanData);\n  }, [onCreate, data]);\n\n  useEffect(() => {\n    nameField.current.select();\n  }, []);\n\n  return (\n    <Modal open basic closeIcon size=\"tiny\" onClose={onClose}>\n      <Modal.Content>\n        <Header inverted size=\"huge\">\n          {t('common.createProject', {\n            context: 'title',\n          })}\n        </Header>\n        <p>{t('common.enterProjectTitle')}</p>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            fluid\n            inverted\n            ref={nameField}\n            name=\"name\"\n            value={data.name}\n            readOnly={isSubmitting}\n            className={styles.field}\n            onChange={handleFieldChange}\n          />\n          <Button\n            inverted\n            color=\"green\"\n            icon=\"checkmark\"\n            content={t('action.createProject')}\n            floated=\"right\"\n            loading={isSubmitting}\n            disabled={isSubmitting}\n          />\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n});\n\nAddProjectModal.propTypes = {\n  defaultData: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isSubmitting: PropTypes.bool.isRequired,\n  onCreate: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AddProjectModal;\n","import AddProjectModal from './AddProjectModal';\n\nexport default AddProjectModal;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { closeModal, createProject } from '../actions/entry';\nimport AddProjectModal from '../components/AddProjectModal';\n\nconst mapStateToProps = ({ project: { data: defaultData, isSubmitting } }) => ({\n  defaultData,\n  isSubmitting,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    onCreate: createProject,\n    onClose: closeModal,\n  },\n  dispatch,\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AddProjectModal);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport HeaderContainer from '../containers/HeaderContainer';\nimport ProjectsContainer from '../containers/ProjectsContainer';\nimport UsersModalContainer from '../containers/UsersModalContainer';\nimport AddProjectModalContainer from '../containers/AddProjectModalContainer';\n\nconst App = ({ isUsersModalOpened, isAddProjectModalOpened }) => (\n  <>\n    <HeaderContainer />\n    <ProjectsContainer />\n    {isUsersModalOpened && <UsersModalContainer />}\n    {isAddProjectModalOpened && <AddProjectModalContainer />}\n  </>\n);\n\nApp.propTypes = {\n  isUsersModalOpened: PropTypes.bool.isRequired,\n  isAddProjectModalOpened: PropTypes.bool.isRequired,\n};\n\nexport default App;\n","import { connect } from 'react-redux';\n\nimport { currentModalSelector } from '../selectors';\nimport ModalTypes from '../constants/ModalTypes';\nimport App from '../components/App';\n\nconst mapStateToProps = (state) => {\n  const currentModal = currentModalSelector(state);\n\n  return {\n    isUsersModalOpened: currentModal === ModalTypes.USERS,\n    isAddProjectModalOpened: currentModal === ModalTypes.ADD_PROJECT,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import SocketStatus from './SocketStatus';\n\nexport default SocketStatus;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, Trans } from 'react-i18next';\n\nimport styles from './SocketStatus.module.css';\n\nconst SocketStatus = React.memo(({ isDisconnected, isReconnected }) => {\n  const [t] = useTranslation();\n\n  const handleReloadClick = useCallback(() => {\n    window.location.reload(true);\n  }, []);\n\n  if (isDisconnected) {\n    return (\n      <div className={styles.wrapper}>\n        <div className={styles.header}>{t('common.noConnectionToServer')}</div>\n        <div className={styles.content}>\n          <Trans i18nKey=\"common.allChangesWillBeAutomaticallySavedAfterConnectionRestored\">\n            All changes will be automatically saved\n            <br />\n            after connection restored\n          </Trans>\n        </div>\n      </div>\n    );\n  }\n\n  if (isReconnected) {\n    return (\n      <div className={styles.wrapper}>\n        <div className={styles.header}>\n          {t('common.connectionRestored', {\n            context: 'title',\n          })}\n        </div>\n        <div className={styles.content}>\n          <Trans i18nKey=\"common.refreshPageToLoadLastDataAndReceiveUpdates\">\n            <button type=\"button\" className={styles.button} onClick={handleReloadClick}>\n              Refresh the page\n            </button>\n            to load last data\n            <br />\n            and receive updates\n          </Trans>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n});\n\nSocketStatus.propTypes = {\n  isDisconnected: PropTypes.bool.isRequired,\n  isReconnected: PropTypes.bool.isRequired,\n};\n\nexport default SocketStatus;\n","import { connect } from 'react-redux';\n\nimport SocketStatuses from '../constants/SocketStatuses';\nimport SocketStatus from '../components/SocketStatus';\n\nconst mapStateToProps = ({ socket: { status } }) => ({\n  isDisconnected: status === SocketStatuses.DISCONNECTED,\n  isReconnected: status === SocketStatuses.RECONNECTED,\n});\n\nexport default connect(mapStateToProps)(SocketStatus);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'semantic-ui-react';\n\nimport AppContainer from '../containers/AppContainer';\nimport SocketStatusContainer from '../containers/SocketStatusContainer';\n\nconst AppWrapper = React.memo(({ isInitializing }) => (\n  <>\n    {isInitializing ? <Loader active size=\"massive\" /> : <AppContainer />}\n    <SocketStatusContainer />\n  </>\n));\n\nAppWrapper.propTypes = {\n  isInitializing: PropTypes.bool.isRequired,\n};\n\nexport default AppWrapper;\n","import { connect } from 'react-redux';\n\nimport { isAppInitializingSelector } from '../selectors';\nimport AppWrapper from '../components/AppWrapper';\n\nconst mapStateToProps = (state) => {\n  const isAppInitializing = isAppInitializingSelector(state);\n\n  return {\n    isInitializing: isAppInitializing,\n  };\n};\n\nexport default connect(mapStateToProps)(AppWrapper);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst NotFound = () => {\n  const [t] = useTranslation();\n\n  return (\n    <h1>\n      {t('common.pageNotFound', {\n        context: 'title',\n      })}\n    </h1>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport Paths from '../constants/Paths';\nimport LoginContainer from '../containers/LoginContainer';\nimport AppWrapperContainer from '../containers/AppWrapperContainer';\nimport NotFound from './NotFound';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport '../lib/custom-ui/index.css';\n\nimport '../index.css';\n\nconst Root = ({ store, history }) => (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route exact path={Paths.LOGIN} component={LoginContainer} />\n        <Route exact path={Paths.ROOT} component={AppWrapperContainer} />\n        <Route exact path={Paths.PROJECTS} component={AppWrapperContainer} />\n        <Route exact path={Paths.BOARDS} component={AppWrapperContainer} />\n        <Route exact path={Paths.CARDS} component={AppWrapperContainer} />\n        <Route path=\"*\" component={NotFound} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>\n);\n\nRoot.propTypes = {\n  /* eslint-disable react/forbid-prop-types */\n  store: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  /* eslint-enable react/forbid-prop-types */\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\n\nimport store from './store';\nimport history from './history';\nimport * as serviceWorker from './service-worker';\nimport Root from './components/Root';\n\nimport './i18n';\n\nReactGA.initialize('UA-149850299-2');\n\nReactDOM.render(React.createElement(Root, { store, history }), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3Annb\",\"filterButton\":\"Filter_filterButton__3wtS2\",\"filterItem\":\"Filter_filterItem__K5rUM\",\"filterLabel\":\"Filter_filterLabel__1n_bh\",\"filterTitle\":\"Filter_filterTitle__1-fnE\",\"filters\":\"Filter_filters__3HFyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addCardButton\":\"List_addCardButton__iiHCX\",\"addCardButtonIcon\":\"List_addCardButtonIcon__11yic\",\"addCardButtonText\":\"List_addCardButtonText__3h2Yz\",\"cards\":\"List_cards__19Mo0\",\"header\":\"List_header__1aGJR\",\"target\":\"List_target__3Qyvs\",\"headerButton\":\"List_headerButton__1pBFB\",\"headerName\":\"List_headerName__3hr-Z\",\"list\":\"List_list__3ccy6\",\"wrapper\":\"List_wrapper__3dbx3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentModule\":\"Actions_contentModule__1hW1G\",\"loader\":\"Actions_loader__2tmqU\",\"moduleHeader\":\"Actions_moduleHeader__2u-FK\",\"moduleIcon\":\"Actions_moduleIcon__1nvgH\",\"moduleWrapper\":\"Actions_moduleWrapper__21X3w\",\"wrapper\":\"Actions_wrapper__ObNCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Tasks_button__1Apjq\",\"count\":\"Tasks_count__1ChGk\",\"countOpened\":\"Tasks_countOpened__2rDv4\",\"countClosed\":\"Tasks_countClosed__1W9VX\",\"progress\":\"Tasks_progress__3NIa-\",\"progressWrapper\":\"Tasks_progressWrapper__19aCw\",\"task\":\"Tasks_task__1eH3T\",\"taskCompleted\":\"Tasks_taskCompleted__3DtxR\",\"tasks\":\"Tasks_tasks__2EQxH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"EditTimerStep_deleteButton__SSE7l\",\"fieldBox\":\"EditTimerStep_fieldBox__1lYdB\",\"fieldWrapper\":\"EditTimerStep_fieldWrapper__zxviR\",\"iconButton\":\"EditTimerStep_iconButton__3jL3V\",\"text\":\"EditTimerStep_text__1V32X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Item_button__O9mNb\",\"checkboxWrapper\":\"Item_checkboxWrapper__3_UDo\",\"content\":\"Item_content__1AqfY\",\"target\":\"Item_target__UdyrH\",\"task\":\"Item_task__12y6G\",\"taskCompleted\":\"Item_taskCompleted__3SUG2\",\"text\":\"Item_text__2YTSI\",\"wrapper\":\"Item_wrapper__3x8_B\"};"],"sourceRoot":""}